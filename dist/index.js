var Qp = Object.defineProperty;
var Ic = (e) => {
  throw TypeError(e);
};
var cp = (e, A, t) => A in e ? Qp(e, A, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[A] = t;
var og = (e, A, t) => cp(e, typeof A != "symbol" ? A + "" : A, t), ng = (e, A, t) => A.has(e) || Ic("Cannot " + t);
var S = (e, A, t) => (ng(e, A, "read from private field"), t ? t.call(e) : A.get(e)), YA = (e, A, t) => A.has(e) ? Ic("Cannot add the same private member more than once") : A instanceof WeakSet ? A.add(e) : A.set(e, t), uA = (e, A, t, s) => (ng(e, A, "write to private field"), s ? s.call(e, t) : A.set(e, t), t), ae = (e, A, t) => (ng(e, A, "access private method"), t);
import * as Cp from "os";
import cs from "os";
import Bp from "crypto";
import mi from "fs";
import * as ig from "path";
import Zo from "path";
import Vt from "http";
import Wl from "https";
import Zs from "net";
import SQ from "tls";
import xt from "events";
import bA from "assert";
import le from "util";
import Ye from "stream";
import ze from "buffer";
import ql from "querystring";
import Ge from "stream/web";
import ki from "node:stream";
import Xs from "node:util";
import _l from "node:events";
import Fi from "worker_threads";
import $l from "perf_hooks";
import bi from "util/types";
import Ot from "async_hooks";
import Zl from "console";
import Xl from "url";
import Kl from "zlib";
import UQ from "string_decoder";
import Ni from "diagnostics_channel";
import Ip from "child_process";
import lp from "timers";
import * as gg from "fs/promises";
var rA = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function hp(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function LQ(e) {
  if (e.__esModule) return e;
  var A = e.default;
  if (typeof A == "function") {
    var t = function s() {
      return this instanceof s ? Reflect.construct(A, arguments, this.constructor) : A.apply(this, arguments);
    };
    t.prototype = A.prototype;
  } else t = {};
  return Object.defineProperty(t, "__esModule", { value: !0 }), Object.keys(e).forEach(function(s) {
    var r = Object.getOwnPropertyDescriptor(e, s);
    Object.defineProperty(t, s, r.get ? r : {
      enumerable: !0,
      get: function() {
        return e[s];
      }
    });
  }), t;
}
var ag = {}, Js = {}, Fr = {};
Object.defineProperty(Fr, "__esModule", { value: !0 });
Fr.toCommandProperties = Fr.toCommandValue = void 0;
function up(e) {
  return e == null ? "" : typeof e == "string" || e instanceof String ? e : JSON.stringify(e);
}
Fr.toCommandValue = up;
function dp(e) {
  return Object.keys(e).length ? {
    title: e.title,
    file: e.file,
    line: e.startLine,
    endLine: e.endLine,
    col: e.startColumn,
    endColumn: e.endColumn
  } : {};
}
Fr.toCommandProperties = dp;
var fp = rA && rA.__createBinding || (Object.create ? function(e, A, t, s) {
  s === void 0 && (s = t);
  var r = Object.getOwnPropertyDescriptor(A, t);
  (!r || ("get" in r ? !A.__esModule : r.writable || r.configurable)) && (r = { enumerable: !0, get: function() {
    return A[t];
  } }), Object.defineProperty(e, s, r);
} : function(e, A, t, s) {
  s === void 0 && (s = t), e[s] = A[t];
}), pp = rA && rA.__setModuleDefault || (Object.create ? function(e, A) {
  Object.defineProperty(e, "default", { enumerable: !0, value: A });
} : function(e, A) {
  e.default = A;
}), yp = rA && rA.__importStar || function(e) {
  if (e && e.__esModule) return e;
  var A = {};
  if (e != null) for (var t in e) t !== "default" && Object.prototype.hasOwnProperty.call(e, t) && fp(A, e, t);
  return pp(A, e), A;
};
Object.defineProperty(Js, "__esModule", { value: !0 });
Js.issue = Js.issueCommand = void 0;
const wp = yp(cs), jl = Fr;
function zl(e, A, t) {
  const s = new Rp(e, A, t);
  process.stdout.write(s.toString() + wp.EOL);
}
Js.issueCommand = zl;
function Dp(e, A = "") {
  zl(e, {}, A);
}
Js.issue = Dp;
const lc = "::";
class Rp {
  constructor(A, t, s) {
    A || (A = "missing.command"), this.command = A, this.properties = t, this.message = s;
  }
  toString() {
    let A = lc + this.command;
    if (this.properties && Object.keys(this.properties).length > 0) {
      A += " ";
      let t = !0;
      for (const s in this.properties)
        if (this.properties.hasOwnProperty(s)) {
          const r = this.properties[s];
          r && (t ? t = !1 : A += ",", A += `${s}=${kp(r)}`);
        }
    }
    return A += `${lc}${mp(this.message)}`, A;
  }
}
function mp(e) {
  return (0, jl.toCommandValue)(e).replace(/%/g, "%25").replace(/\r/g, "%0D").replace(/\n/g, "%0A");
}
function kp(e) {
  return (0, jl.toCommandValue)(e).replace(/%/g, "%25").replace(/\r/g, "%0D").replace(/\n/g, "%0A").replace(/:/g, "%3A").replace(/,/g, "%2C");
}
var vs = {}, Fp = rA && rA.__createBinding || (Object.create ? function(e, A, t, s) {
  s === void 0 && (s = t);
  var r = Object.getOwnPropertyDescriptor(A, t);
  (!r || ("get" in r ? !A.__esModule : r.writable || r.configurable)) && (r = { enumerable: !0, get: function() {
    return A[t];
  } }), Object.defineProperty(e, s, r);
} : function(e, A, t, s) {
  s === void 0 && (s = t), e[s] = A[t];
}), bp = rA && rA.__setModuleDefault || (Object.create ? function(e, A) {
  Object.defineProperty(e, "default", { enumerable: !0, value: A });
} : function(e, A) {
  e.default = A;
}), TQ = rA && rA.__importStar || function(e) {
  if (e && e.__esModule) return e;
  var A = {};
  if (e != null) for (var t in e) t !== "default" && Object.prototype.hasOwnProperty.call(e, t) && Fp(A, e, t);
  return bp(A, e), A;
};
Object.defineProperty(vs, "__esModule", { value: !0 });
vs.prepareKeyValueMessage = vs.issueFileCommand = void 0;
const Np = TQ(Bp), hc = TQ(mi), zE = TQ(cs), Ah = Fr;
function Sp(e, A) {
  const t = process.env[`GITHUB_${e}`];
  if (!t)
    throw new Error(`Unable to find environment variable for file command ${e}`);
  if (!hc.existsSync(t))
    throw new Error(`Missing file at path: ${t}`);
  hc.appendFileSync(t, `${(0, Ah.toCommandValue)(A)}${zE.EOL}`, {
    encoding: "utf8"
  });
}
vs.issueFileCommand = Sp;
function Up(e, A) {
  const t = `ghadelimiter_${Np.randomUUID()}`, s = (0, Ah.toCommandValue)(A);
  if (e.includes(t))
    throw new Error(`Unexpected input: name should not contain the delimiter "${t}"`);
  if (s.includes(t))
    throw new Error(`Unexpected input: value should not contain the delimiter "${t}"`);
  return `${e}<<${t}${zE.EOL}${s}${zE.EOL}${t}`;
}
vs.prepareKeyValueMessage = Up;
var io = {}, de = {}, Hs = {};
Object.defineProperty(Hs, "__esModule", { value: !0 });
Hs.checkBypass = Hs.getProxyUrl = void 0;
function Lp(e) {
  const A = e.protocol === "https:";
  if (eh(e))
    return;
  const t = A ? process.env.https_proxy || process.env.HTTPS_PROXY : process.env.http_proxy || process.env.HTTP_PROXY;
  if (t)
    try {
      return new URL(t);
    } catch {
      if (!t.startsWith("http://") && !t.startsWith("https://"))
        return new URL(`http://${t}`);
    }
  else
    return;
}
Hs.getProxyUrl = Lp;
function eh(e) {
  if (!e.hostname)
    return !1;
  const A = e.hostname;
  if (Tp(A))
    return !0;
  const t = process.env.no_proxy || process.env.NO_PROXY || "";
  if (!t)
    return !1;
  let s;
  e.port ? s = Number(e.port) : e.protocol === "http:" ? s = 80 : e.protocol === "https:" && (s = 443);
  const r = [e.hostname.toUpperCase()];
  typeof s == "number" && r.push(`${r[0]}:${s}`);
  for (const o of t.split(",").map((n) => n.trim().toUpperCase()).filter((n) => n))
    if (o === "*" || r.some((n) => n === o || n.endsWith(`.${o}`) || o.startsWith(".") && n.endsWith(`${o}`)))
      return !0;
  return !1;
}
Hs.checkBypass = eh;
function Tp(e) {
  const A = e.toLowerCase();
  return A === "localhost" || A.startsWith("127.") || A.startsWith("[::1]") || A.startsWith("[0:0:0:0:0:0:0:1]");
}
var Ks = {}, Mp = SQ, MQ = Vt, th = Wl, Gp = xt, Yp = le;
Ks.httpOverHttp = Jp;
Ks.httpsOverHttp = vp;
Ks.httpOverHttps = Hp;
Ks.httpsOverHttps = Vp;
function Jp(e) {
  var A = new ir(e);
  return A.request = MQ.request, A;
}
function vp(e) {
  var A = new ir(e);
  return A.request = MQ.request, A.createSocket = rh, A.defaultPort = 443, A;
}
function Hp(e) {
  var A = new ir(e);
  return A.request = th.request, A;
}
function Vp(e) {
  var A = new ir(e);
  return A.request = th.request, A.createSocket = rh, A.defaultPort = 443, A;
}
function ir(e) {
  var A = this;
  A.options = e || {}, A.proxyOptions = A.options.proxy || {}, A.maxSockets = A.options.maxSockets || MQ.Agent.defaultMaxSockets, A.requests = [], A.sockets = [], A.on("free", function(s, r, o, n) {
    for (var g = sh(r, o, n), i = 0, E = A.requests.length; i < E; ++i) {
      var a = A.requests[i];
      if (a.host === g.host && a.port === g.port) {
        A.requests.splice(i, 1), a.request.onSocket(s);
        return;
      }
    }
    s.destroy(), A.removeSocket(s);
  });
}
Yp.inherits(ir, Gp.EventEmitter);
ir.prototype.addRequest = function(A, t, s, r) {
  var o = this, n = GQ({ request: A }, o.options, sh(t, s, r));
  if (o.sockets.length >= this.maxSockets) {
    o.requests.push(n);
    return;
  }
  o.createSocket(n, function(g) {
    g.on("free", i), g.on("close", E), g.on("agentRemove", E), A.onSocket(g);
    function i() {
      o.emit("free", g, n);
    }
    function E(a) {
      o.removeSocket(g), g.removeListener("free", i), g.removeListener("close", E), g.removeListener("agentRemove", E);
    }
  });
};
ir.prototype.createSocket = function(A, t) {
  var s = this, r = {};
  s.sockets.push(r);
  var o = GQ({}, s.proxyOptions, {
    method: "CONNECT",
    path: A.host + ":" + A.port,
    agent: !1,
    headers: {
      host: A.host + ":" + A.port
    }
  });
  A.localAddress && (o.localAddress = A.localAddress), o.proxyAuth && (o.headers = o.headers || {}, o.headers["Proxy-Authorization"] = "Basic " + new Buffer(o.proxyAuth).toString("base64")), lr("making CONNECT request");
  var n = s.request(o);
  n.useChunkedEncodingByDefault = !1, n.once("response", g), n.once("upgrade", i), n.once("connect", E), n.once("error", a), n.end();
  function g(Q) {
    Q.upgrade = !0;
  }
  function i(Q, c, h) {
    process.nextTick(function() {
      E(Q, c, h);
    });
  }
  function E(Q, c, h) {
    if (n.removeAllListeners(), c.removeAllListeners(), Q.statusCode !== 200) {
      lr(
        "tunneling socket could not be established, statusCode=%d",
        Q.statusCode
      ), c.destroy();
      var u = new Error("tunneling socket could not be established, statusCode=" + Q.statusCode);
      u.code = "ECONNRESET", A.request.emit("error", u), s.removeSocket(r);
      return;
    }
    if (h.length > 0) {
      lr("got illegal response body from proxy"), c.destroy();
      var u = new Error("got illegal response body from proxy");
      u.code = "ECONNRESET", A.request.emit("error", u), s.removeSocket(r);
      return;
    }
    return lr("tunneling connection has established"), s.sockets[s.sockets.indexOf(r)] = c, t(c);
  }
  function a(Q) {
    n.removeAllListeners(), lr(
      `tunneling socket could not be established, cause=%s
`,
      Q.message,
      Q.stack
    );
    var c = new Error("tunneling socket could not be established, cause=" + Q.message);
    c.code = "ECONNRESET", A.request.emit("error", c), s.removeSocket(r);
  }
};
ir.prototype.removeSocket = function(A) {
  var t = this.sockets.indexOf(A);
  if (t !== -1) {
    this.sockets.splice(t, 1);
    var s = this.requests.shift();
    s && this.createSocket(s, function(r) {
      s.request.onSocket(r);
    });
  }
};
function rh(e, A) {
  var t = this;
  ir.prototype.createSocket.call(t, e, function(s) {
    var r = e.request.getHeader("host"), o = GQ({}, t.options, {
      socket: s,
      servername: r ? r.replace(/:.*$/, "") : e.host
    }), n = Mp.connect(0, o);
    t.sockets[t.sockets.indexOf(s)] = n, A(n);
  });
}
function sh(e, A, t) {
  return typeof e == "string" ? {
    host: e,
    port: A,
    localAddress: t
  } : e;
}
function GQ(e) {
  for (var A = 1, t = arguments.length; A < t; ++A) {
    var s = arguments[A];
    if (typeof s == "object")
      for (var r = Object.keys(s), o = 0, n = r.length; o < n; ++o) {
        var g = r[o];
        s[g] !== void 0 && (e[g] = s[g]);
      }
  }
  return e;
}
var lr;
process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG) ? lr = function() {
  var e = Array.prototype.slice.call(arguments);
  typeof e[0] == "string" ? e[0] = "TUNNEL: " + e[0] : e.unshift("TUNNEL:"), console.error.apply(console, e);
} : lr = function() {
};
Ks.debug = lr;
var xp = Ks, UA = {}, zA = {
  kClose: Symbol("close"),
  kDestroy: Symbol("destroy"),
  kDispatch: Symbol("dispatch"),
  kUrl: Symbol("url"),
  kWriting: Symbol("writing"),
  kResuming: Symbol("resuming"),
  kQueue: Symbol("queue"),
  kConnect: Symbol("connect"),
  kConnecting: Symbol("connecting"),
  kHeadersList: Symbol("headers list"),
  kKeepAliveDefaultTimeout: Symbol("default keep alive timeout"),
  kKeepAliveMaxTimeout: Symbol("max keep alive timeout"),
  kKeepAliveTimeoutThreshold: Symbol("keep alive timeout threshold"),
  kKeepAliveTimeoutValue: Symbol("keep alive timeout"),
  kKeepAlive: Symbol("keep alive"),
  kHeadersTimeout: Symbol("headers timeout"),
  kBodyTimeout: Symbol("body timeout"),
  kServerName: Symbol("server name"),
  kLocalAddress: Symbol("local address"),
  kHost: Symbol("host"),
  kNoRef: Symbol("no ref"),
  kBodyUsed: Symbol("used"),
  kRunning: Symbol("running"),
  kBlocking: Symbol("blocking"),
  kPending: Symbol("pending"),
  kSize: Symbol("size"),
  kBusy: Symbol("busy"),
  kQueued: Symbol("queued"),
  kFree: Symbol("free"),
  kConnected: Symbol("connected"),
  kClosed: Symbol("closed"),
  kNeedDrain: Symbol("need drain"),
  kReset: Symbol("reset"),
  kDestroyed: Symbol.for("nodejs.stream.destroyed"),
  kMaxHeadersSize: Symbol("max headers size"),
  kRunningIdx: Symbol("running index"),
  kPendingIdx: Symbol("pending index"),
  kError: Symbol("error"),
  kClients: Symbol("clients"),
  kClient: Symbol("client"),
  kParser: Symbol("parser"),
  kOnDestroyed: Symbol("destroy callbacks"),
  kPipelining: Symbol("pipelining"),
  kSocket: Symbol("socket"),
  kHostHeader: Symbol("host header"),
  kConnector: Symbol("connector"),
  kStrictContentLength: Symbol("strict content length"),
  kMaxRedirections: Symbol("maxRedirections"),
  kMaxRequests: Symbol("maxRequestsPerClient"),
  kProxy: Symbol("proxy agent options"),
  kCounter: Symbol("socket request counter"),
  kInterceptors: Symbol("dispatch interceptors"),
  kMaxResponseSize: Symbol("max response size"),
  kHTTP2Session: Symbol("http2Session"),
  kHTTP2SessionState: Symbol("http2Session state"),
  kHTTP2BuildRequest: Symbol("http2 build request"),
  kHTTP1BuildRequest: Symbol("http1 build request"),
  kHTTP2CopyHeaders: Symbol("http2 copy headers"),
  kHTTPConnVersion: Symbol("http connection version"),
  kRetryHandlerDefaultRetry: Symbol("retry agent default retry"),
  kConstruct: Symbol("constructable")
};
let fe = class extends Error {
  constructor(A) {
    super(A), this.name = "UndiciError", this.code = "UND_ERR";
  }
}, Op = class oh extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, oh), this.name = "ConnectTimeoutError", this.message = A || "Connect Timeout Error", this.code = "UND_ERR_CONNECT_TIMEOUT";
  }
}, Pp = class nh extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, nh), this.name = "HeadersTimeoutError", this.message = A || "Headers Timeout Error", this.code = "UND_ERR_HEADERS_TIMEOUT";
  }
}, Wp = class ih extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, ih), this.name = "HeadersOverflowError", this.message = A || "Headers Overflow Error", this.code = "UND_ERR_HEADERS_OVERFLOW";
  }
}, qp = class gh extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, gh), this.name = "BodyTimeoutError", this.message = A || "Body Timeout Error", this.code = "UND_ERR_BODY_TIMEOUT";
  }
}, _p = class ah extends fe {
  constructor(A, t, s, r) {
    super(A), Error.captureStackTrace(this, ah), this.name = "ResponseStatusCodeError", this.message = A || "Response Status Code Error", this.code = "UND_ERR_RESPONSE_STATUS_CODE", this.body = r, this.status = t, this.statusCode = t, this.headers = s;
  }
}, $p = class Eh extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, Eh), this.name = "InvalidArgumentError", this.message = A || "Invalid Argument Error", this.code = "UND_ERR_INVALID_ARG";
  }
}, Zp = class Qh extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, Qh), this.name = "InvalidReturnValueError", this.message = A || "Invalid Return Value Error", this.code = "UND_ERR_INVALID_RETURN_VALUE";
  }
}, Xp = class ch extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, ch), this.name = "AbortError", this.message = A || "Request aborted", this.code = "UND_ERR_ABORTED";
  }
}, Kp = class Ch extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, Ch), this.name = "InformationalError", this.message = A || "Request information", this.code = "UND_ERR_INFO";
  }
}, jp = class Bh extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, Bh), this.name = "RequestContentLengthMismatchError", this.message = A || "Request body length does not match content-length header", this.code = "UND_ERR_REQ_CONTENT_LENGTH_MISMATCH";
  }
}, zp = class Ih extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, Ih), this.name = "ResponseContentLengthMismatchError", this.message = A || "Response body length does not match content-length header", this.code = "UND_ERR_RES_CONTENT_LENGTH_MISMATCH";
  }
}, Ay = class lh extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, lh), this.name = "ClientDestroyedError", this.message = A || "The client is destroyed", this.code = "UND_ERR_DESTROYED";
  }
}, ey = class hh extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, hh), this.name = "ClientClosedError", this.message = A || "The client is closed", this.code = "UND_ERR_CLOSED";
  }
}, ty = class uh extends fe {
  constructor(A, t) {
    super(A), Error.captureStackTrace(this, uh), this.name = "SocketError", this.message = A || "Socket error", this.code = "UND_ERR_SOCKET", this.socket = t;
  }
}, dh = class fh extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, fh), this.name = "NotSupportedError", this.message = A || "Not supported error", this.code = "UND_ERR_NOT_SUPPORTED";
  }
}, ry = class extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, dh), this.name = "MissingUpstreamError", this.message = A || "No upstream has been added to the BalancedPool", this.code = "UND_ERR_BPL_MISSING_UPSTREAM";
  }
}, sy = class ph extends Error {
  constructor(A, t, s) {
    super(A), Error.captureStackTrace(this, ph), this.name = "HTTPParserError", this.code = t ? `HPE_${t}` : void 0, this.data = s ? s.toString() : void 0;
  }
}, oy = class yh extends fe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, yh), this.name = "ResponseExceededMaxSizeError", this.message = A || "Response content exceeded max size", this.code = "UND_ERR_RES_EXCEEDED_MAX_SIZE";
  }
}, ny = class wh extends fe {
  constructor(A, t, { headers: s, data: r }) {
    super(A), Error.captureStackTrace(this, wh), this.name = "RequestRetryError", this.message = A || "Request retry error", this.code = "UND_ERR_REQ_RETRY", this.statusCode = t, this.data = r, this.headers = s;
  }
};
var qA = {
  HTTPParserError: sy,
  UndiciError: fe,
  HeadersTimeoutError: Pp,
  HeadersOverflowError: Wp,
  BodyTimeoutError: qp,
  RequestContentLengthMismatchError: jp,
  ConnectTimeoutError: Op,
  ResponseStatusCodeError: _p,
  InvalidArgumentError: $p,
  InvalidReturnValueError: Zp,
  RequestAbortedError: Xp,
  ClientDestroyedError: Ay,
  ClientClosedError: ey,
  InformationalError: Kp,
  SocketError: ty,
  NotSupportedError: dh,
  ResponseContentLengthMismatchError: zp,
  BalancedPoolMissingUpstreamError: ry,
  ResponseExceededMaxSizeError: oy,
  RequestRetryError: ny
};
const Dh = bA, { kDestroyed: Rh, kBodyUsed: uc } = zA, { IncomingMessage: iy } = Vt, Vs = Ye, gy = Zs, { InvalidArgumentError: ke } = qA, { Blob: dc } = ze, hi = le, { stringify: ay } = ql, [Eg, fc] = process.versions.node.split(".").map((e) => Number(e));
function Ey() {
}
function YQ(e) {
  return e && typeof e == "object" && typeof e.pipe == "function" && typeof e.on == "function";
}
function mh(e) {
  return dc && e instanceof dc || e && typeof e == "object" && (typeof e.stream == "function" || typeof e.arrayBuffer == "function") && /^(Blob|File)$/.test(e[Symbol.toStringTag]);
}
function Qy(e, A) {
  if (e.includes("?") || e.includes("#"))
    throw new Error('Query params cannot be passed when url already contains "?" or "#".');
  const t = ay(A);
  return t && (e += "?" + t), e;
}
function kh(e) {
  if (typeof e == "string") {
    if (e = new URL(e), !/^https?:/.test(e.origin || e.protocol))
      throw new ke("Invalid URL protocol: the URL must start with `http:` or `https:`.");
    return e;
  }
  if (!e || typeof e != "object")
    throw new ke("Invalid URL: The URL argument must be a non-null object.");
  if (!/^https?:/.test(e.origin || e.protocol))
    throw new ke("Invalid URL protocol: the URL must start with `http:` or `https:`.");
  if (!(e instanceof URL)) {
    if (e.port != null && e.port !== "" && !Number.isFinite(parseInt(e.port)))
      throw new ke("Invalid URL: port must be a valid integer or a string representation of an integer.");
    if (e.path != null && typeof e.path != "string")
      throw new ke("Invalid URL path: the path must be a string or null/undefined.");
    if (e.pathname != null && typeof e.pathname != "string")
      throw new ke("Invalid URL pathname: the pathname must be a string or null/undefined.");
    if (e.hostname != null && typeof e.hostname != "string")
      throw new ke("Invalid URL hostname: the hostname must be a string or null/undefined.");
    if (e.origin != null && typeof e.origin != "string")
      throw new ke("Invalid URL origin: the origin must be a string or null/undefined.");
    const A = e.port != null ? e.port : e.protocol === "https:" ? 443 : 80;
    let t = e.origin != null ? e.origin : `${e.protocol}//${e.hostname}:${A}`, s = e.path != null ? e.path : `${e.pathname || ""}${e.search || ""}`;
    t.endsWith("/") && (t = t.substring(0, t.length - 1)), s && !s.startsWith("/") && (s = `/${s}`), e = new URL(t + s);
  }
  return e;
}
function cy(e) {
  if (e = kh(e), e.pathname !== "/" || e.search || e.hash)
    throw new ke("invalid url");
  return e;
}
function Cy(e) {
  if (e[0] === "[") {
    const t = e.indexOf("]");
    return Dh(t !== -1), e.substring(1, t);
  }
  const A = e.indexOf(":");
  return A === -1 ? e : e.substring(0, A);
}
function By(e) {
  if (!e)
    return null;
  Dh.strictEqual(typeof e, "string");
  const A = Cy(e);
  return gy.isIP(A) ? "" : A;
}
function Iy(e) {
  return JSON.parse(JSON.stringify(e));
}
function ly(e) {
  return e != null && typeof e[Symbol.asyncIterator] == "function";
}
function hy(e) {
  return e != null && (typeof e[Symbol.iterator] == "function" || typeof e[Symbol.asyncIterator] == "function");
}
function uy(e) {
  if (e == null)
    return 0;
  if (YQ(e)) {
    const A = e._readableState;
    return A && A.objectMode === !1 && A.ended === !0 && Number.isFinite(A.length) ? A.length : null;
  } else {
    if (mh(e))
      return e.size != null ? e.size : null;
    if (bh(e))
      return e.byteLength;
  }
  return null;
}
function JQ(e) {
  return !e || !!(e.destroyed || e[Rh]);
}
function Fh(e) {
  const A = e && e._readableState;
  return JQ(e) && A && !A.endEmitted;
}
function dy(e, A) {
  e == null || !YQ(e) || JQ(e) || (typeof e.destroy == "function" ? (Object.getPrototypeOf(e).constructor === iy && (e.socket = null), e.destroy(A)) : A && process.nextTick((t, s) => {
    t.emit("error", s);
  }, e, A), e.destroyed !== !0 && (e[Rh] = !0));
}
const fy = /timeout=(\d+)/;
function py(e) {
  const A = e.toString().match(fy);
  return A ? parseInt(A[1], 10) * 1e3 : null;
}
function yy(e, A = {}) {
  if (!Array.isArray(e)) return e;
  for (let t = 0; t < e.length; t += 2) {
    const s = e[t].toString().toLowerCase();
    let r = A[s];
    r ? (Array.isArray(r) || (r = [r], A[s] = r), r.push(e[t + 1].toString("utf8"))) : Array.isArray(e[t + 1]) ? A[s] = e[t + 1].map((o) => o.toString("utf8")) : A[s] = e[t + 1].toString("utf8");
  }
  return "content-length" in A && "content-disposition" in A && (A["content-disposition"] = Buffer.from(A["content-disposition"]).toString("latin1")), A;
}
function wy(e) {
  const A = [];
  let t = !1, s = -1;
  for (let r = 0; r < e.length; r += 2) {
    const o = e[r + 0].toString(), n = e[r + 1].toString("utf8");
    o.length === 14 && (o === "content-length" || o.toLowerCase() === "content-length") ? (A.push(o, n), t = !0) : o.length === 19 && (o === "content-disposition" || o.toLowerCase() === "content-disposition") ? s = A.push(o, n) - 1 : A.push(o, n);
  }
  return t && s !== -1 && (A[s] = Buffer.from(A[s]).toString("latin1")), A;
}
function bh(e) {
  return e instanceof Uint8Array || Buffer.isBuffer(e);
}
function Dy(e, A, t) {
  if (!e || typeof e != "object")
    throw new ke("handler must be an object");
  if (typeof e.onConnect != "function")
    throw new ke("invalid onConnect method");
  if (typeof e.onError != "function")
    throw new ke("invalid onError method");
  if (typeof e.onBodySent != "function" && e.onBodySent !== void 0)
    throw new ke("invalid onBodySent method");
  if (t || A === "CONNECT") {
    if (typeof e.onUpgrade != "function")
      throw new ke("invalid onUpgrade method");
  } else {
    if (typeof e.onHeaders != "function")
      throw new ke("invalid onHeaders method");
    if (typeof e.onData != "function")
      throw new ke("invalid onData method");
    if (typeof e.onComplete != "function")
      throw new ke("invalid onComplete method");
  }
}
function Ry(e) {
  return !!(e && (Vs.isDisturbed ? Vs.isDisturbed(e) || e[uc] : e[uc] || e.readableDidRead || e._readableState && e._readableState.dataEmitted || Fh(e)));
}
function my(e) {
  return !!(e && (Vs.isErrored ? Vs.isErrored(e) : /state: 'errored'/.test(
    hi.inspect(e)
  )));
}
function ky(e) {
  return !!(e && (Vs.isReadable ? Vs.isReadable(e) : /state: 'readable'/.test(
    hi.inspect(e)
  )));
}
function Fy(e) {
  return {
    localAddress: e.localAddress,
    localPort: e.localPort,
    remoteAddress: e.remoteAddress,
    remotePort: e.remotePort,
    remoteFamily: e.remoteFamily,
    timeout: e.timeout,
    bytesWritten: e.bytesWritten,
    bytesRead: e.bytesRead
  };
}
async function* by(e) {
  for await (const A of e)
    yield Buffer.isBuffer(A) ? A : Buffer.from(A);
}
let go;
function Ny(e) {
  if (go || (go = Ge.ReadableStream), go.from)
    return go.from(by(e));
  let A;
  return new go(
    {
      async start() {
        A = e[Symbol.asyncIterator]();
      },
      async pull(t) {
        const { done: s, value: r } = await A.next();
        if (s)
          queueMicrotask(() => {
            t.close();
          });
        else {
          const o = Buffer.isBuffer(r) ? r : Buffer.from(r);
          t.enqueue(new Uint8Array(o));
        }
        return t.desiredSize > 0;
      },
      async cancel(t) {
        await A.return();
      }
    },
    0
  );
}
function Sy(e) {
  return e && typeof e == "object" && typeof e.append == "function" && typeof e.delete == "function" && typeof e.get == "function" && typeof e.getAll == "function" && typeof e.has == "function" && typeof e.set == "function" && e[Symbol.toStringTag] === "FormData";
}
function Uy(e) {
  if (e) {
    if (typeof e.throwIfAborted == "function")
      e.throwIfAborted();
    else if (e.aborted) {
      const A = new Error("The operation was aborted");
      throw A.name = "AbortError", A;
    }
  }
}
function Ly(e, A) {
  return "addEventListener" in e ? (e.addEventListener("abort", A, { once: !0 }), () => e.removeEventListener("abort", A)) : (e.addListener("abort", A), () => e.removeListener("abort", A));
}
const Ty = !!String.prototype.toWellFormed;
function My(e) {
  return Ty ? `${e}`.toWellFormed() : hi.toUSVString ? hi.toUSVString(e) : `${e}`;
}
function Gy(e) {
  if (e == null || e === "") return { start: 0, end: null, size: null };
  const A = e ? e.match(/^bytes (\d+)-(\d+)\/(\d+)?$/) : null;
  return A ? {
    start: parseInt(A[1]),
    end: A[2] ? parseInt(A[2]) : null,
    size: A[3] ? parseInt(A[3]) : null
  } : null;
}
const Nh = /* @__PURE__ */ Object.create(null);
Nh.enumerable = !0;
var JA = {
  kEnumerableProperty: Nh,
  nop: Ey,
  isDisturbed: Ry,
  isErrored: my,
  isReadable: ky,
  toUSVString: My,
  isReadableAborted: Fh,
  isBlobLike: mh,
  parseOrigin: cy,
  parseURL: kh,
  getServerName: By,
  isStream: YQ,
  isIterable: hy,
  isAsyncIterable: ly,
  isDestroyed: JQ,
  parseRawHeaders: wy,
  parseHeaders: yy,
  parseKeepAliveTimeout: py,
  destroy: dy,
  bodyLength: uy,
  deepClone: Iy,
  ReadableStreamFrom: Ny,
  isBuffer: bh,
  validateHandler: Dy,
  getSocketInfo: Fy,
  isFormDataLike: Sy,
  buildURL: Qy,
  throwIfAborted: Uy,
  addAbortListener: Ly,
  parseRangeHeader: Gy,
  nodeMajor: Eg,
  nodeMinor: fc,
  nodeHasAutoSelectFamily: Eg > 18 || Eg === 18 && fc >= 13,
  safeHTTPMethods: ["GET", "HEAD", "OPTIONS", "TRACE"]
};
let Qg = Date.now(), Er;
const cr = [];
function Yy() {
  Qg = Date.now();
  let e = cr.length, A = 0;
  for (; A < e; ) {
    const t = cr[A];
    t.state === 0 ? t.state = Qg + t.delay : t.state > 0 && Qg >= t.state && (t.state = -1, t.callback(t.opaque)), t.state === -1 ? (t.state = -2, A !== e - 1 ? cr[A] = cr.pop() : cr.pop(), e -= 1) : A += 1;
  }
  cr.length > 0 && Sh();
}
function Sh() {
  Er && Er.refresh ? Er.refresh() : (clearTimeout(Er), Er = setTimeout(Yy, 1e3), Er.unref && Er.unref());
}
let pc = class {
  constructor(A, t, s) {
    this.callback = A, this.delay = t, this.opaque = s, this.state = -2, this.refresh();
  }
  refresh() {
    this.state === -2 && (cr.push(this), (!Er || cr.length === 1) && Sh()), this.state = 0;
  }
  clear() {
    this.state = -1;
  }
};
var Jy = {
  setTimeout(e, A, t) {
    return A < 1e3 ? setTimeout(e, A, t) : new pc(e, A, t);
  },
  clearTimeout(e) {
    e instanceof pc ? e.clear() : clearTimeout(e);
  }
}, Is = { exports: {} }, cg, yc;
function Uh() {
  if (yc) return cg;
  yc = 1;
  const e = _l.EventEmitter, A = Xs.inherits;
  function t(s) {
    if (typeof s == "string" && (s = Buffer.from(s)), !Buffer.isBuffer(s))
      throw new TypeError("The needle has to be a String or a Buffer.");
    const r = s.length;
    if (r === 0)
      throw new Error("The needle cannot be an empty String/Buffer.");
    if (r > 256)
      throw new Error("The needle cannot have a length bigger than 256.");
    this.maxMatches = 1 / 0, this.matches = 0, this._occ = new Array(256).fill(r), this._lookbehind_size = 0, this._needle = s, this._bufpos = 0, this._lookbehind = Buffer.alloc(r);
    for (var o = 0; o < r - 1; ++o)
      this._occ[s[o]] = r - 1 - o;
  }
  return A(t, e), t.prototype.reset = function() {
    this._lookbehind_size = 0, this.matches = 0, this._bufpos = 0;
  }, t.prototype.push = function(s, r) {
    Buffer.isBuffer(s) || (s = Buffer.from(s, "binary"));
    const o = s.length;
    this._bufpos = r || 0;
    let n;
    for (; n !== o && this.matches < this.maxMatches; )
      n = this._sbmh_feed(s);
    return n;
  }, t.prototype._sbmh_feed = function(s) {
    const r = s.length, o = this._needle, n = o.length, g = o[n - 1];
    let i = -this._lookbehind_size, E;
    if (i < 0) {
      for (; i < 0 && i <= r - n; ) {
        if (E = this._sbmh_lookup_char(s, i + n - 1), E === g && this._sbmh_memcmp(s, i, n - 1))
          return this._lookbehind_size = 0, ++this.matches, this.emit("info", !0), this._bufpos = i + n;
        i += this._occ[E];
      }
      if (i < 0)
        for (; i < 0 && !this._sbmh_memcmp(s, i, r - i); )
          ++i;
      if (i >= 0)
        this.emit("info", !1, this._lookbehind, 0, this._lookbehind_size), this._lookbehind_size = 0;
      else {
        const a = this._lookbehind_size + i;
        return a > 0 && this.emit("info", !1, this._lookbehind, 0, a), this._lookbehind.copy(
          this._lookbehind,
          0,
          a,
          this._lookbehind_size - a
        ), this._lookbehind_size -= a, s.copy(this._lookbehind, this._lookbehind_size), this._lookbehind_size += r, this._bufpos = r, r;
      }
    }
    if (i += (i >= 0) * this._bufpos, s.indexOf(o, i) !== -1)
      return i = s.indexOf(o, i), ++this.matches, i > 0 ? this.emit("info", !0, s, this._bufpos, i) : this.emit("info", !0), this._bufpos = i + n;
    for (i = r - n; i < r && (s[i] !== o[0] || Buffer.compare(
      s.subarray(i, i + r - i),
      o.subarray(0, r - i)
    ) !== 0); )
      ++i;
    return i < r && (s.copy(this._lookbehind, 0, i, i + (r - i)), this._lookbehind_size = r - i), i > 0 && this.emit("info", !1, s, this._bufpos, i < r ? i : r), this._bufpos = r, r;
  }, t.prototype._sbmh_lookup_char = function(s, r) {
    return r < 0 ? this._lookbehind[this._lookbehind_size + r] : s[r];
  }, t.prototype._sbmh_memcmp = function(s, r, o) {
    for (var n = 0; n < o; ++n)
      if (this._sbmh_lookup_char(s, r + n) !== this._needle[n])
        return !1;
    return !0;
  }, cg = t, cg;
}
var Cg, wc;
function vy() {
  if (wc) return Cg;
  wc = 1;
  const e = Xs.inherits, A = ki.Readable;
  function t(s) {
    A.call(this, s);
  }
  return e(t, A), t.prototype._read = function(s) {
  }, Cg = t, Cg;
}
var Bg, Dc;
function vQ() {
  return Dc || (Dc = 1, Bg = function(A, t, s) {
    if (!A || A[t] === void 0 || A[t] === null)
      return s;
    if (typeof A[t] != "number" || isNaN(A[t]))
      throw new TypeError("Limit " + t + " is not a valid number");
    return A[t];
  }), Bg;
}
var Ig, Rc;
function Hy() {
  if (Rc) return Ig;
  Rc = 1;
  const e = _l.EventEmitter, A = Xs.inherits, t = vQ(), s = Uh(), r = Buffer.from(`\r
\r
`), o = /\r\n/g, n = /^([^:]+):[ \t]?([\x00-\xFF]+)?$/;
  function g(i) {
    e.call(this), i = i || {};
    const E = this;
    this.nread = 0, this.maxed = !1, this.npairs = 0, this.maxHeaderPairs = t(i, "maxHeaderPairs", 2e3), this.maxHeaderSize = t(i, "maxHeaderSize", 80 * 1024), this.buffer = "", this.header = {}, this.finished = !1, this.ss = new s(r), this.ss.on("info", function(a, Q, c, h) {
      Q && !E.maxed && (E.nread + h - c >= E.maxHeaderSize ? (h = E.maxHeaderSize - E.nread + c, E.nread = E.maxHeaderSize, E.maxed = !0) : E.nread += h - c, E.buffer += Q.toString("binary", c, h)), a && E._finish();
    });
  }
  return A(g, e), g.prototype.push = function(i) {
    const E = this.ss.push(i);
    if (this.finished)
      return E;
  }, g.prototype.reset = function() {
    this.finished = !1, this.buffer = "", this.header = {}, this.ss.reset();
  }, g.prototype._finish = function() {
    this.buffer && this._parseHeader(), this.ss.matches = this.ss.maxMatches;
    const i = this.header;
    this.header = {}, this.buffer = "", this.finished = !0, this.nread = this.npairs = 0, this.maxed = !1, this.emit("header", i);
  }, g.prototype._parseHeader = function() {
    if (this.npairs === this.maxHeaderPairs)
      return;
    const i = this.buffer.split(o), E = i.length;
    let a, Q;
    for (var c = 0; c < E; ++c) {
      if (i[c].length === 0)
        continue;
      if ((i[c][0] === "	" || i[c][0] === " ") && Q) {
        this.header[Q][this.header[Q].length - 1] += i[c];
        continue;
      }
      const h = i[c].indexOf(":");
      if (h === -1 || h === 0)
        return;
      if (a = n.exec(i[c]), Q = a[1].toLowerCase(), this.header[Q] = this.header[Q] || [], this.header[Q].push(a[2] || ""), ++this.npairs === this.maxHeaderPairs)
        break;
    }
  }, Ig = g, Ig;
}
var lg, mc;
function Lh() {
  if (mc) return lg;
  mc = 1;
  const e = ki.Writable, A = Xs.inherits, t = Uh(), s = vy(), r = Hy(), o = 45, n = Buffer.from("-"), g = Buffer.from(`\r
`), i = function() {
  };
  function E(a) {
    if (!(this instanceof E))
      return new E(a);
    if (e.call(this, a), !a || !a.headerFirst && typeof a.boundary != "string")
      throw new TypeError("Boundary required");
    typeof a.boundary == "string" ? this.setBoundary(a.boundary) : this._bparser = void 0, this._headerFirst = a.headerFirst, this._dashes = 0, this._parts = 0, this._finished = !1, this._realFinish = !1, this._isPreamble = !0, this._justMatched = !1, this._firstWrite = !0, this._inHeader = !0, this._part = void 0, this._cb = void 0, this._ignoreData = !1, this._partOpts = { highWaterMark: a.partHwm }, this._pause = !1;
    const Q = this;
    this._hparser = new r(a), this._hparser.on("header", function(c) {
      Q._inHeader = !1, Q._part.emit("header", c);
    });
  }
  return A(E, e), E.prototype.emit = function(a) {
    if (a === "finish" && !this._realFinish) {
      if (!this._finished) {
        const Q = this;
        process.nextTick(function() {
          if (Q.emit("error", new Error("Unexpected end of multipart data")), Q._part && !Q._ignoreData) {
            const c = Q._isPreamble ? "Preamble" : "Part";
            Q._part.emit("error", new Error(c + " terminated early due to unexpected end of multipart data")), Q._part.push(null), process.nextTick(function() {
              Q._realFinish = !0, Q.emit("finish"), Q._realFinish = !1;
            });
            return;
          }
          Q._realFinish = !0, Q.emit("finish"), Q._realFinish = !1;
        });
      }
    } else
      e.prototype.emit.apply(this, arguments);
  }, E.prototype._write = function(a, Q, c) {
    if (!this._hparser && !this._bparser)
      return c();
    if (this._headerFirst && this._isPreamble) {
      this._part || (this._part = new s(this._partOpts), this._events.preamble ? this.emit("preamble", this._part) : this._ignore());
      const h = this._hparser.push(a);
      if (!this._inHeader && h !== void 0 && h < a.length)
        a = a.slice(h);
      else
        return c();
    }
    this._firstWrite && (this._bparser.push(g), this._firstWrite = !1), this._bparser.push(a), this._pause ? this._cb = c : c();
  }, E.prototype.reset = function() {
    this._part = void 0, this._bparser = void 0, this._hparser = void 0;
  }, E.prototype.setBoundary = function(a) {
    const Q = this;
    this._bparser = new t(`\r
--` + a), this._bparser.on("info", function(c, h, u, I) {
      Q._oninfo(c, h, u, I);
    });
  }, E.prototype._ignore = function() {
    this._part && !this._ignoreData && (this._ignoreData = !0, this._part.on("error", i), this._part.resume());
  }, E.prototype._oninfo = function(a, Q, c, h) {
    let u;
    const I = this;
    let C = 0, f, B = !0;
    if (!this._part && this._justMatched && Q) {
      for (; this._dashes < 2 && c + C < h; )
        if (Q[c + C] === o)
          ++C, ++this._dashes;
        else {
          this._dashes && (u = n), this._dashes = 0;
          break;
        }
      if (this._dashes === 2 && (c + C < h && this._events.trailer && this.emit("trailer", Q.slice(c + C, h)), this.reset(), this._finished = !0, I._parts === 0 && (I._realFinish = !0, I.emit("finish"), I._realFinish = !1)), this._dashes)
        return;
    }
    this._justMatched && (this._justMatched = !1), this._part || (this._part = new s(this._partOpts), this._part._read = function(l) {
      I._unpause();
    }, this._isPreamble && this._events.preamble ? this.emit("preamble", this._part) : this._isPreamble !== !0 && this._events.part ? this.emit("part", this._part) : this._ignore(), this._isPreamble || (this._inHeader = !0)), Q && c < h && !this._ignoreData && (this._isPreamble || !this._inHeader ? (u && (B = this._part.push(u)), B = this._part.push(Q.slice(c, h)), B || (this._pause = !0)) : !this._isPreamble && this._inHeader && (u && this._hparser.push(u), f = this._hparser.push(Q.slice(c, h)), !this._inHeader && f !== void 0 && f < h && this._oninfo(!1, Q, c + f, h))), a && (this._hparser.reset(), this._isPreamble ? this._isPreamble = !1 : c !== h && (++this._parts, this._part.on("end", function() {
      --I._parts === 0 && (I._finished ? (I._realFinish = !0, I.emit("finish"), I._realFinish = !1) : I._unpause());
    })), this._part.push(null), this._part = void 0, this._ignoreData = !1, this._justMatched = !0, this._dashes = 0);
  }, E.prototype._unpause = function() {
    if (this._pause && (this._pause = !1, this._cb)) {
      const a = this._cb;
      this._cb = void 0, a();
    }
  }, lg = E, lg;
}
var hg, kc;
function HQ() {
  if (kc) return hg;
  kc = 1;
  const e = new TextDecoder("utf-8"), A = /* @__PURE__ */ new Map([
    ["utf-8", e],
    ["utf8", e]
  ]);
  function t(o) {
    let n;
    for (; ; )
      switch (o) {
        case "utf-8":
        case "utf8":
          return s.utf8;
        case "latin1":
        case "ascii":
        case "us-ascii":
        case "iso-8859-1":
        case "iso8859-1":
        case "iso88591":
        case "iso_8859-1":
        case "windows-1252":
        case "iso_8859-1:1987":
        case "cp1252":
        case "x-cp1252":
          return s.latin1;
        case "utf16le":
        case "utf-16le":
        case "ucs2":
        case "ucs-2":
          return s.utf16le;
        case "base64":
          return s.base64;
        default:
          if (n === void 0) {
            n = !0, o = o.toLowerCase();
            continue;
          }
          return s.other.bind(o);
      }
  }
  const s = {
    utf8: (o, n) => o.length === 0 ? "" : (typeof o == "string" && (o = Buffer.from(o, n)), o.utf8Slice(0, o.length)),
    latin1: (o, n) => o.length === 0 ? "" : typeof o == "string" ? o : o.latin1Slice(0, o.length),
    utf16le: (o, n) => o.length === 0 ? "" : (typeof o == "string" && (o = Buffer.from(o, n)), o.ucs2Slice(0, o.length)),
    base64: (o, n) => o.length === 0 ? "" : (typeof o == "string" && (o = Buffer.from(o, n)), o.base64Slice(0, o.length)),
    other: (o, n) => {
      if (o.length === 0)
        return "";
      if (typeof o == "string" && (o = Buffer.from(o, n)), A.has(this.toString()))
        try {
          return A.get(this).decode(o);
        } catch {
        }
      return typeof o == "string" ? o : o.toString();
    }
  };
  function r(o, n, g) {
    return o && t(g)(o, n);
  }
  return hg = r, hg;
}
var ug, Fc;
function Th() {
  if (Fc) return ug;
  Fc = 1;
  const e = HQ(), A = /%[a-fA-F0-9][a-fA-F0-9]/g, t = {
    "%00": "\0",
    "%01": "",
    "%02": "",
    "%03": "",
    "%04": "",
    "%05": "",
    "%06": "",
    "%07": "\x07",
    "%08": "\b",
    "%09": "	",
    "%0a": `
`,
    "%0A": `
`,
    "%0b": "\v",
    "%0B": "\v",
    "%0c": "\f",
    "%0C": "\f",
    "%0d": "\r",
    "%0D": "\r",
    "%0e": "",
    "%0E": "",
    "%0f": "",
    "%0F": "",
    "%10": "",
    "%11": "",
    "%12": "",
    "%13": "",
    "%14": "",
    "%15": "",
    "%16": "",
    "%17": "",
    "%18": "",
    "%19": "",
    "%1a": "",
    "%1A": "",
    "%1b": "\x1B",
    "%1B": "\x1B",
    "%1c": "",
    "%1C": "",
    "%1d": "",
    "%1D": "",
    "%1e": "",
    "%1E": "",
    "%1f": "",
    "%1F": "",
    "%20": " ",
    "%21": "!",
    "%22": '"',
    "%23": "#",
    "%24": "$",
    "%25": "%",
    "%26": "&",
    "%27": "'",
    "%28": "(",
    "%29": ")",
    "%2a": "*",
    "%2A": "*",
    "%2b": "+",
    "%2B": "+",
    "%2c": ",",
    "%2C": ",",
    "%2d": "-",
    "%2D": "-",
    "%2e": ".",
    "%2E": ".",
    "%2f": "/",
    "%2F": "/",
    "%30": "0",
    "%31": "1",
    "%32": "2",
    "%33": "3",
    "%34": "4",
    "%35": "5",
    "%36": "6",
    "%37": "7",
    "%38": "8",
    "%39": "9",
    "%3a": ":",
    "%3A": ":",
    "%3b": ";",
    "%3B": ";",
    "%3c": "<",
    "%3C": "<",
    "%3d": "=",
    "%3D": "=",
    "%3e": ">",
    "%3E": ">",
    "%3f": "?",
    "%3F": "?",
    "%40": "@",
    "%41": "A",
    "%42": "B",
    "%43": "C",
    "%44": "D",
    "%45": "E",
    "%46": "F",
    "%47": "G",
    "%48": "H",
    "%49": "I",
    "%4a": "J",
    "%4A": "J",
    "%4b": "K",
    "%4B": "K",
    "%4c": "L",
    "%4C": "L",
    "%4d": "M",
    "%4D": "M",
    "%4e": "N",
    "%4E": "N",
    "%4f": "O",
    "%4F": "O",
    "%50": "P",
    "%51": "Q",
    "%52": "R",
    "%53": "S",
    "%54": "T",
    "%55": "U",
    "%56": "V",
    "%57": "W",
    "%58": "X",
    "%59": "Y",
    "%5a": "Z",
    "%5A": "Z",
    "%5b": "[",
    "%5B": "[",
    "%5c": "\\",
    "%5C": "\\",
    "%5d": "]",
    "%5D": "]",
    "%5e": "^",
    "%5E": "^",
    "%5f": "_",
    "%5F": "_",
    "%60": "`",
    "%61": "a",
    "%62": "b",
    "%63": "c",
    "%64": "d",
    "%65": "e",
    "%66": "f",
    "%67": "g",
    "%68": "h",
    "%69": "i",
    "%6a": "j",
    "%6A": "j",
    "%6b": "k",
    "%6B": "k",
    "%6c": "l",
    "%6C": "l",
    "%6d": "m",
    "%6D": "m",
    "%6e": "n",
    "%6E": "n",
    "%6f": "o",
    "%6F": "o",
    "%70": "p",
    "%71": "q",
    "%72": "r",
    "%73": "s",
    "%74": "t",
    "%75": "u",
    "%76": "v",
    "%77": "w",
    "%78": "x",
    "%79": "y",
    "%7a": "z",
    "%7A": "z",
    "%7b": "{",
    "%7B": "{",
    "%7c": "|",
    "%7C": "|",
    "%7d": "}",
    "%7D": "}",
    "%7e": "~",
    "%7E": "~",
    "%7f": "",
    "%7F": "",
    "%80": "",
    "%81": "",
    "%82": "",
    "%83": "",
    "%84": "",
    "%85": "",
    "%86": "",
    "%87": "",
    "%88": "",
    "%89": "",
    "%8a": "",
    "%8A": "",
    "%8b": "",
    "%8B": "",
    "%8c": "",
    "%8C": "",
    "%8d": "",
    "%8D": "",
    "%8e": "",
    "%8E": "",
    "%8f": "",
    "%8F": "",
    "%90": "",
    "%91": "",
    "%92": "",
    "%93": "",
    "%94": "",
    "%95": "",
    "%96": "",
    "%97": "",
    "%98": "",
    "%99": "",
    "%9a": "",
    "%9A": "",
    "%9b": "",
    "%9B": "",
    "%9c": "",
    "%9C": "",
    "%9d": "",
    "%9D": "",
    "%9e": "",
    "%9E": "",
    "%9f": "",
    "%9F": "",
    "%a0": " ",
    "%A0": " ",
    "%a1": "¡",
    "%A1": "¡",
    "%a2": "¢",
    "%A2": "¢",
    "%a3": "£",
    "%A3": "£",
    "%a4": "¤",
    "%A4": "¤",
    "%a5": "¥",
    "%A5": "¥",
    "%a6": "¦",
    "%A6": "¦",
    "%a7": "§",
    "%A7": "§",
    "%a8": "¨",
    "%A8": "¨",
    "%a9": "©",
    "%A9": "©",
    "%aa": "ª",
    "%Aa": "ª",
    "%aA": "ª",
    "%AA": "ª",
    "%ab": "«",
    "%Ab": "«",
    "%aB": "«",
    "%AB": "«",
    "%ac": "¬",
    "%Ac": "¬",
    "%aC": "¬",
    "%AC": "¬",
    "%ad": "­",
    "%Ad": "­",
    "%aD": "­",
    "%AD": "­",
    "%ae": "®",
    "%Ae": "®",
    "%aE": "®",
    "%AE": "®",
    "%af": "¯",
    "%Af": "¯",
    "%aF": "¯",
    "%AF": "¯",
    "%b0": "°",
    "%B0": "°",
    "%b1": "±",
    "%B1": "±",
    "%b2": "²",
    "%B2": "²",
    "%b3": "³",
    "%B3": "³",
    "%b4": "´",
    "%B4": "´",
    "%b5": "µ",
    "%B5": "µ",
    "%b6": "¶",
    "%B6": "¶",
    "%b7": "·",
    "%B7": "·",
    "%b8": "¸",
    "%B8": "¸",
    "%b9": "¹",
    "%B9": "¹",
    "%ba": "º",
    "%Ba": "º",
    "%bA": "º",
    "%BA": "º",
    "%bb": "»",
    "%Bb": "»",
    "%bB": "»",
    "%BB": "»",
    "%bc": "¼",
    "%Bc": "¼",
    "%bC": "¼",
    "%BC": "¼",
    "%bd": "½",
    "%Bd": "½",
    "%bD": "½",
    "%BD": "½",
    "%be": "¾",
    "%Be": "¾",
    "%bE": "¾",
    "%BE": "¾",
    "%bf": "¿",
    "%Bf": "¿",
    "%bF": "¿",
    "%BF": "¿",
    "%c0": "À",
    "%C0": "À",
    "%c1": "Á",
    "%C1": "Á",
    "%c2": "Â",
    "%C2": "Â",
    "%c3": "Ã",
    "%C3": "Ã",
    "%c4": "Ä",
    "%C4": "Ä",
    "%c5": "Å",
    "%C5": "Å",
    "%c6": "Æ",
    "%C6": "Æ",
    "%c7": "Ç",
    "%C7": "Ç",
    "%c8": "È",
    "%C8": "È",
    "%c9": "É",
    "%C9": "É",
    "%ca": "Ê",
    "%Ca": "Ê",
    "%cA": "Ê",
    "%CA": "Ê",
    "%cb": "Ë",
    "%Cb": "Ë",
    "%cB": "Ë",
    "%CB": "Ë",
    "%cc": "Ì",
    "%Cc": "Ì",
    "%cC": "Ì",
    "%CC": "Ì",
    "%cd": "Í",
    "%Cd": "Í",
    "%cD": "Í",
    "%CD": "Í",
    "%ce": "Î",
    "%Ce": "Î",
    "%cE": "Î",
    "%CE": "Î",
    "%cf": "Ï",
    "%Cf": "Ï",
    "%cF": "Ï",
    "%CF": "Ï",
    "%d0": "Ð",
    "%D0": "Ð",
    "%d1": "Ñ",
    "%D1": "Ñ",
    "%d2": "Ò",
    "%D2": "Ò",
    "%d3": "Ó",
    "%D3": "Ó",
    "%d4": "Ô",
    "%D4": "Ô",
    "%d5": "Õ",
    "%D5": "Õ",
    "%d6": "Ö",
    "%D6": "Ö",
    "%d7": "×",
    "%D7": "×",
    "%d8": "Ø",
    "%D8": "Ø",
    "%d9": "Ù",
    "%D9": "Ù",
    "%da": "Ú",
    "%Da": "Ú",
    "%dA": "Ú",
    "%DA": "Ú",
    "%db": "Û",
    "%Db": "Û",
    "%dB": "Û",
    "%DB": "Û",
    "%dc": "Ü",
    "%Dc": "Ü",
    "%dC": "Ü",
    "%DC": "Ü",
    "%dd": "Ý",
    "%Dd": "Ý",
    "%dD": "Ý",
    "%DD": "Ý",
    "%de": "Þ",
    "%De": "Þ",
    "%dE": "Þ",
    "%DE": "Þ",
    "%df": "ß",
    "%Df": "ß",
    "%dF": "ß",
    "%DF": "ß",
    "%e0": "à",
    "%E0": "à",
    "%e1": "á",
    "%E1": "á",
    "%e2": "â",
    "%E2": "â",
    "%e3": "ã",
    "%E3": "ã",
    "%e4": "ä",
    "%E4": "ä",
    "%e5": "å",
    "%E5": "å",
    "%e6": "æ",
    "%E6": "æ",
    "%e7": "ç",
    "%E7": "ç",
    "%e8": "è",
    "%E8": "è",
    "%e9": "é",
    "%E9": "é",
    "%ea": "ê",
    "%Ea": "ê",
    "%eA": "ê",
    "%EA": "ê",
    "%eb": "ë",
    "%Eb": "ë",
    "%eB": "ë",
    "%EB": "ë",
    "%ec": "ì",
    "%Ec": "ì",
    "%eC": "ì",
    "%EC": "ì",
    "%ed": "í",
    "%Ed": "í",
    "%eD": "í",
    "%ED": "í",
    "%ee": "î",
    "%Ee": "î",
    "%eE": "î",
    "%EE": "î",
    "%ef": "ï",
    "%Ef": "ï",
    "%eF": "ï",
    "%EF": "ï",
    "%f0": "ð",
    "%F0": "ð",
    "%f1": "ñ",
    "%F1": "ñ",
    "%f2": "ò",
    "%F2": "ò",
    "%f3": "ó",
    "%F3": "ó",
    "%f4": "ô",
    "%F4": "ô",
    "%f5": "õ",
    "%F5": "õ",
    "%f6": "ö",
    "%F6": "ö",
    "%f7": "÷",
    "%F7": "÷",
    "%f8": "ø",
    "%F8": "ø",
    "%f9": "ù",
    "%F9": "ù",
    "%fa": "ú",
    "%Fa": "ú",
    "%fA": "ú",
    "%FA": "ú",
    "%fb": "û",
    "%Fb": "û",
    "%fB": "û",
    "%FB": "û",
    "%fc": "ü",
    "%Fc": "ü",
    "%fC": "ü",
    "%FC": "ü",
    "%fd": "ý",
    "%Fd": "ý",
    "%fD": "ý",
    "%FD": "ý",
    "%fe": "þ",
    "%Fe": "þ",
    "%fE": "þ",
    "%FE": "þ",
    "%ff": "ÿ",
    "%Ff": "ÿ",
    "%fF": "ÿ",
    "%FF": "ÿ"
  };
  function s(E) {
    return t[E];
  }
  const r = 0, o = 1, n = 2, g = 3;
  function i(E) {
    const a = [];
    let Q = r, c = "", h = !1, u = !1, I = 0, C = "";
    const f = E.length;
    for (var B = 0; B < f; ++B) {
      const l = E[B];
      if (l === "\\" && h)
        if (u)
          u = !1;
        else {
          u = !0;
          continue;
        }
      else if (l === '"')
        if (u)
          u = !1;
        else {
          h ? (h = !1, Q = r) : h = !0;
          continue;
        }
      else if (u && h && (C += "\\"), u = !1, (Q === n || Q === g) && l === "'") {
        Q === n ? (Q = g, c = C.substring(1)) : Q = o, C = "";
        continue;
      } else if (Q === r && (l === "*" || l === "=") && a.length) {
        Q = l === "*" ? n : o, a[I] = [C, void 0], C = "";
        continue;
      } else if (!h && l === ";") {
        Q = r, c ? (C.length && (C = e(
          C.replace(A, s),
          "binary",
          c
        )), c = "") : C.length && (C = e(C, "binary", "utf8")), a[I] === void 0 ? a[I] = C : a[I][1] = C, C = "", ++I;
        continue;
      } else if (!h && (l === " " || l === "	"))
        continue;
      C += l;
    }
    return c && C.length ? C = e(
      C.replace(A, s),
      "binary",
      c
    ) : C && (C = e(C, "binary", "utf8")), a[I] === void 0 ? C && (a[I] = C) : a[I][1] = C, a;
  }
  return ug = i, ug;
}
var dg, bc;
function Vy() {
  return bc || (bc = 1, dg = function(A) {
    if (typeof A != "string")
      return "";
    for (var t = A.length - 1; t >= 0; --t)
      switch (A.charCodeAt(t)) {
        case 47:
        case 92:
          return A = A.slice(t + 1), A === ".." || A === "." ? "" : A;
      }
    return A === ".." || A === "." ? "" : A;
  }), dg;
}
var fg, Nc;
function xy() {
  if (Nc) return fg;
  Nc = 1;
  const { Readable: e } = ki, { inherits: A } = Xs, t = Lh(), s = Th(), r = HQ(), o = Vy(), n = vQ(), g = /^boundary$/i, i = /^form-data$/i, E = /^charset$/i, a = /^filename$/i, Q = /^name$/i;
  c.detect = /^multipart\/form-data/i;
  function c(I, C) {
    let f, B;
    const l = this;
    let y;
    const d = C.limits, p = C.isPartAFile || ((N, O, Z) => O === "application/octet-stream" || Z !== void 0), R = C.parsedConType || [], D = C.defCharset || "utf8", b = C.preservePath, M = { highWaterMark: C.fileHwm };
    for (f = 0, B = R.length; f < B; ++f)
      if (Array.isArray(R[f]) && g.test(R[f][0])) {
        y = R[f][1];
        break;
      }
    function F() {
      eA === 0 && w && !I._done && (w = !1, l.end());
    }
    if (typeof y != "string")
      throw new Error("Multipart: Boundary not found");
    const z = n(d, "fieldSize", 1 * 1024 * 1024), U = n(d, "fileSize", 1 / 0), _ = n(d, "files", 1 / 0), q = n(d, "fields", 1 / 0), X = n(d, "parts", 1 / 0), nA = n(d, "headerPairs", 2e3), K = n(d, "headerSize", 80 * 1024);
    let P = 0, L = 0, eA = 0, v, Y, w = !1;
    this._needDrain = !1, this._pause = !1, this._cb = void 0, this._nparts = 0, this._boy = I;
    const k = {
      boundary: y,
      maxHeaderPairs: nA,
      maxHeaderSize: K,
      partHwm: M.highWaterMark,
      highWaterMark: C.highWaterMark
    };
    this.parser = new t(k), this.parser.on("drain", function() {
      if (l._needDrain = !1, l._cb && !l._pause) {
        const N = l._cb;
        l._cb = void 0, N();
      }
    }).on("part", function N(O) {
      if (++l._nparts > X)
        return l.parser.removeListener("part", N), l.parser.on("part", h), I.hitPartsLimit = !0, I.emit("partsLimit"), h(O);
      if (Y) {
        const Z = Y;
        Z.emit("end"), Z.removeAllListeners("end");
      }
      O.on("header", function(Z) {
        let x, H, iA, IA, EA, MA, kA = 0;
        if (Z["content-type"] && (iA = s(Z["content-type"][0]), iA[0])) {
          for (x = iA[0].toLowerCase(), f = 0, B = iA.length; f < B; ++f)
            if (E.test(iA[f][0])) {
              IA = iA[f][1].toLowerCase();
              break;
            }
        }
        if (x === void 0 && (x = "text/plain"), IA === void 0 && (IA = D), Z["content-disposition"]) {
          if (iA = s(Z["content-disposition"][0]), !i.test(iA[0]))
            return h(O);
          for (f = 0, B = iA.length; f < B; ++f)
            Q.test(iA[f][0]) ? H = iA[f][1] : a.test(iA[f][0]) && (MA = iA[f][1], b || (MA = o(MA)));
        } else
          return h(O);
        Z["content-transfer-encoding"] ? EA = Z["content-transfer-encoding"][0].toLowerCase() : EA = "7bit";
        let NA, DA;
        if (p(H, x, MA)) {
          if (P === _)
            return I.hitFilesLimit || (I.hitFilesLimit = !0, I.emit("filesLimit")), h(O);
          if (++P, !I._events.file) {
            l.parser._ignore();
            return;
          }
          ++eA;
          const pA = new u(M);
          v = pA, pA.on("end", function() {
            if (--eA, l._pause = !1, F(), l._cb && !l._needDrain) {
              const BA = l._cb;
              l._cb = void 0, BA();
            }
          }), pA._read = function(BA) {
            if (l._pause && (l._pause = !1, l._cb && !l._needDrain)) {
              const yA = l._cb;
              l._cb = void 0, yA();
            }
          }, I.emit("file", H, pA, MA, EA, x), NA = function(BA) {
            if ((kA += BA.length) > U) {
              const yA = U - kA + BA.length;
              yA > 0 && pA.push(BA.slice(0, yA)), pA.truncated = !0, pA.bytesRead = U, O.removeAllListeners("data"), pA.emit("limit");
              return;
            } else pA.push(BA) || (l._pause = !0);
            pA.bytesRead = kA;
          }, DA = function() {
            v = void 0, pA.push(null);
          };
        } else {
          if (L === q)
            return I.hitFieldsLimit || (I.hitFieldsLimit = !0, I.emit("fieldsLimit")), h(O);
          ++L, ++eA;
          let pA = "", BA = !1;
          Y = O, NA = function(yA) {
            if ((kA += yA.length) > z) {
              const GA = z - (kA - yA.length);
              pA += yA.toString("binary", 0, GA), BA = !0, O.removeAllListeners("data");
            } else
              pA += yA.toString("binary");
          }, DA = function() {
            Y = void 0, pA.length && (pA = r(pA, "binary", IA)), I.emit("field", H, pA, !1, BA, EA, x), --eA, F();
          };
        }
        O._readableState.sync = !1, O.on("data", NA), O.on("end", DA);
      }).on("error", function(Z) {
        v && v.emit("error", Z);
      });
    }).on("error", function(N) {
      I.emit("error", N);
    }).on("finish", function() {
      w = !0, F();
    });
  }
  c.prototype.write = function(I, C) {
    const f = this.parser.write(I);
    f && !this._pause ? C() : (this._needDrain = !f, this._cb = C);
  }, c.prototype.end = function() {
    const I = this;
    I.parser.writable ? I.parser.end() : I._boy._done || process.nextTick(function() {
      I._boy._done = !0, I._boy.emit("finish");
    });
  };
  function h(I) {
    I.resume();
  }
  function u(I) {
    e.call(this, I), this.bytesRead = 0, this.truncated = !1;
  }
  return A(u, e), u.prototype._read = function(I) {
  }, fg = c, fg;
}
var pg, Sc;
function Oy() {
  if (Sc) return pg;
  Sc = 1;
  const e = /\+/g, A = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ];
  function t() {
    this.buffer = void 0;
  }
  return t.prototype.write = function(s) {
    s = s.replace(e, " ");
    let r = "", o = 0, n = 0;
    const g = s.length;
    for (; o < g; ++o)
      this.buffer !== void 0 ? A[s.charCodeAt(o)] ? (this.buffer += s[o], ++n, this.buffer.length === 2 && (r += String.fromCharCode(parseInt(this.buffer, 16)), this.buffer = void 0)) : (r += "%" + this.buffer, this.buffer = void 0, --o) : s[o] === "%" && (o > n && (r += s.substring(n, o), n = o), this.buffer = "", ++n);
    return n < g && this.buffer === void 0 && (r += s.substring(n)), r;
  }, t.prototype.reset = function() {
    this.buffer = void 0;
  }, pg = t, pg;
}
var yg, Uc;
function Py() {
  if (Uc) return yg;
  Uc = 1;
  const e = Oy(), A = HQ(), t = vQ(), s = /^charset$/i;
  r.detect = /^application\/x-www-form-urlencoded/i;
  function r(o, n) {
    const g = n.limits, i = n.parsedConType;
    this.boy = o, this.fieldSizeLimit = t(g, "fieldSize", 1 * 1024 * 1024), this.fieldNameSizeLimit = t(g, "fieldNameSize", 100), this.fieldsLimit = t(g, "fields", 1 / 0);
    let E;
    for (var a = 0, Q = i.length; a < Q; ++a)
      if (Array.isArray(i[a]) && s.test(i[a][0])) {
        E = i[a][1].toLowerCase();
        break;
      }
    E === void 0 && (E = n.defCharset || "utf8"), this.decoder = new e(), this.charset = E, this._fields = 0, this._state = "key", this._checkingBytes = !0, this._bytesKey = 0, this._bytesVal = 0, this._key = "", this._val = "", this._keyTrunc = !1, this._valTrunc = !1, this._hitLimit = !1;
  }
  return r.prototype.write = function(o, n) {
    if (this._fields === this.fieldsLimit)
      return this.boy.hitFieldsLimit || (this.boy.hitFieldsLimit = !0, this.boy.emit("fieldsLimit")), n();
    let g, i, E, a = 0;
    const Q = o.length;
    for (; a < Q; )
      if (this._state === "key") {
        for (g = i = void 0, E = a; E < Q; ++E) {
          if (this._checkingBytes || ++a, o[E] === 61) {
            g = E;
            break;
          } else if (o[E] === 38) {
            i = E;
            break;
          }
          if (this._checkingBytes && this._bytesKey === this.fieldNameSizeLimit) {
            this._hitLimit = !0;
            break;
          } else this._checkingBytes && ++this._bytesKey;
        }
        if (g !== void 0)
          g > a && (this._key += this.decoder.write(o.toString("binary", a, g))), this._state = "val", this._hitLimit = !1, this._checkingBytes = !0, this._val = "", this._bytesVal = 0, this._valTrunc = !1, this.decoder.reset(), a = g + 1;
        else if (i !== void 0) {
          ++this._fields;
          let c;
          const h = this._keyTrunc;
          if (i > a ? c = this._key += this.decoder.write(o.toString("binary", a, i)) : c = this._key, this._hitLimit = !1, this._checkingBytes = !0, this._key = "", this._bytesKey = 0, this._keyTrunc = !1, this.decoder.reset(), c.length && this.boy.emit(
            "field",
            A(c, "binary", this.charset),
            "",
            h,
            !1
          ), a = i + 1, this._fields === this.fieldsLimit)
            return n();
        } else this._hitLimit ? (E > a && (this._key += this.decoder.write(o.toString("binary", a, E))), a = E, (this._bytesKey = this._key.length) === this.fieldNameSizeLimit && (this._checkingBytes = !1, this._keyTrunc = !0)) : (a < Q && (this._key += this.decoder.write(o.toString("binary", a))), a = Q);
      } else {
        for (i = void 0, E = a; E < Q; ++E) {
          if (this._checkingBytes || ++a, o[E] === 38) {
            i = E;
            break;
          }
          if (this._checkingBytes && this._bytesVal === this.fieldSizeLimit) {
            this._hitLimit = !0;
            break;
          } else this._checkingBytes && ++this._bytesVal;
        }
        if (i !== void 0) {
          if (++this._fields, i > a && (this._val += this.decoder.write(o.toString("binary", a, i))), this.boy.emit(
            "field",
            A(this._key, "binary", this.charset),
            A(this._val, "binary", this.charset),
            this._keyTrunc,
            this._valTrunc
          ), this._state = "key", this._hitLimit = !1, this._checkingBytes = !0, this._key = "", this._bytesKey = 0, this._keyTrunc = !1, this.decoder.reset(), a = i + 1, this._fields === this.fieldsLimit)
            return n();
        } else this._hitLimit ? (E > a && (this._val += this.decoder.write(o.toString("binary", a, E))), a = E, (this._val === "" && this.fieldSizeLimit === 0 || (this._bytesVal = this._val.length) === this.fieldSizeLimit) && (this._checkingBytes = !1, this._valTrunc = !0)) : (a < Q && (this._val += this.decoder.write(o.toString("binary", a))), a = Q);
      }
    n();
  }, r.prototype.end = function() {
    this.boy._done || (this._state === "key" && this._key.length > 0 ? this.boy.emit(
      "field",
      A(this._key, "binary", this.charset),
      "",
      this._keyTrunc,
      !1
    ) : this._state === "val" && this.boy.emit(
      "field",
      A(this._key, "binary", this.charset),
      A(this._val, "binary", this.charset),
      this._keyTrunc,
      this._valTrunc
    ), this.boy._done = !0, this.boy.emit("finish"));
  }, yg = r, yg;
}
var Lc;
function Mh() {
  if (Lc) return Is.exports;
  Lc = 1;
  const e = ki.Writable, { inherits: A } = Xs, t = Lh(), s = xy(), r = Py(), o = Th();
  function n(g) {
    if (!(this instanceof n))
      return new n(g);
    if (typeof g != "object")
      throw new TypeError("Busboy expected an options-Object.");
    if (typeof g.headers != "object")
      throw new TypeError("Busboy expected an options-Object with headers-attribute.");
    if (typeof g.headers["content-type"] != "string")
      throw new TypeError("Missing Content-Type-header.");
    const {
      headers: i,
      ...E
    } = g;
    this.opts = {
      autoDestroy: !1,
      ...E
    }, e.call(this, this.opts), this._done = !1, this._parser = this.getParserByHeaders(i), this._finished = !1;
  }
  return A(n, e), n.prototype.emit = function(g) {
    var i;
    if (g === "finish") {
      if (this._done) {
        if (this._finished)
          return;
      } else {
        (i = this._parser) == null || i.end();
        return;
      }
      this._finished = !0;
    }
    e.prototype.emit.apply(this, arguments);
  }, n.prototype.getParserByHeaders = function(g) {
    const i = o(g["content-type"]), E = {
      defCharset: this.opts.defCharset,
      fileHwm: this.opts.fileHwm,
      headers: g,
      highWaterMark: this.opts.highWaterMark,
      isPartAFile: this.opts.isPartAFile,
      limits: this.opts.limits,
      parsedConType: i,
      preservePath: this.opts.preservePath
    };
    if (s.detect.test(i[0]))
      return new s(this, E);
    if (r.detect.test(i[0]))
      return new r(this, E);
    throw new Error("Unsupported Content-Type.");
  }, n.prototype._write = function(g, i, E) {
    this._parser.write(g, E);
  }, Is.exports = n, Is.exports.default = n, Is.exports.Busboy = n, Is.exports.Dicer = t, Is.exports;
}
var wg, Tc;
function Cs() {
  if (Tc) return wg;
  Tc = 1;
  const { MessageChannel: e, receiveMessageOnPort: A } = Fi, t = ["GET", "HEAD", "POST"], s = new Set(t), r = [101, 204, 205, 304], o = [301, 302, 303, 307, 308], n = new Set(o), g = [
    "1",
    "7",
    "9",
    "11",
    "13",
    "15",
    "17",
    "19",
    "20",
    "21",
    "22",
    "23",
    "25",
    "37",
    "42",
    "43",
    "53",
    "69",
    "77",
    "79",
    "87",
    "95",
    "101",
    "102",
    "103",
    "104",
    "109",
    "110",
    "111",
    "113",
    "115",
    "117",
    "119",
    "123",
    "135",
    "137",
    "139",
    "143",
    "161",
    "179",
    "389",
    "427",
    "465",
    "512",
    "513",
    "514",
    "515",
    "526",
    "530",
    "531",
    "532",
    "540",
    "548",
    "554",
    "556",
    "563",
    "587",
    "601",
    "636",
    "989",
    "990",
    "993",
    "995",
    "1719",
    "1720",
    "1723",
    "2049",
    "3659",
    "4045",
    "5060",
    "5061",
    "6000",
    "6566",
    "6665",
    "6666",
    "6667",
    "6668",
    "6669",
    "6697",
    "10080"
  ], i = new Set(g), E = [
    "",
    "no-referrer",
    "no-referrer-when-downgrade",
    "same-origin",
    "origin",
    "strict-origin",
    "origin-when-cross-origin",
    "strict-origin-when-cross-origin",
    "unsafe-url"
  ], a = new Set(E), Q = ["follow", "manual", "error"], c = ["GET", "HEAD", "OPTIONS", "TRACE"], h = new Set(c), u = ["navigate", "same-origin", "no-cors", "cors"], I = ["omit", "same-origin", "include"], C = [
    "default",
    "no-store",
    "reload",
    "no-cache",
    "force-cache",
    "only-if-cached"
  ], f = [
    "content-encoding",
    "content-language",
    "content-location",
    "content-type",
    // See https://github.com/nodejs/undici/issues/2021
    // 'Content-Length' is a forbidden header name, which is typically
    // removed in the Headers implementation. However, undici doesn't
    // filter out headers, so we add it here.
    "content-length"
  ], B = [
    "half"
  ], l = ["CONNECT", "TRACE", "TRACK"], y = new Set(l), d = [
    "audio",
    "audioworklet",
    "font",
    "image",
    "manifest",
    "paintworklet",
    "script",
    "style",
    "track",
    "video",
    "xslt",
    ""
  ], p = new Set(d), R = globalThis.DOMException ?? (() => {
    try {
      atob("~");
    } catch (M) {
      return Object.getPrototypeOf(M).constructor;
    }
  })();
  let D;
  const b = globalThis.structuredClone ?? // https://github.com/nodejs/node/blob/b27ae24dcc4251bad726d9d84baf678d1f707fed/lib/internal/structured_clone.js
  // structuredClone was added in v17.0.0, but fetch supports v16.8
  function(F, z = void 0) {
    if (arguments.length === 0)
      throw new TypeError("missing argument");
    return D || (D = new e()), D.port1.unref(), D.port2.unref(), D.port1.postMessage(F, z == null ? void 0 : z.transfer), A(D.port2).message;
  };
  return wg = {
    DOMException: R,
    structuredClone: b,
    subresource: d,
    forbiddenMethods: l,
    requestBodyHeader: f,
    referrerPolicy: E,
    requestRedirect: Q,
    requestMode: u,
    requestCredentials: I,
    requestCache: C,
    redirectStatus: o,
    corsSafeListedMethods: t,
    nullBodyStatus: r,
    safeMethods: c,
    badPorts: g,
    requestDuplex: B,
    subresourceSet: p,
    badPortsSet: i,
    redirectStatusSet: n,
    corsSafeListedMethodsSet: s,
    safeMethodsSet: h,
    forbiddenMethodsSet: y,
    referrerPolicySet: a
  }, wg;
}
var Dg, Mc;
function Xo() {
  if (Mc) return Dg;
  Mc = 1;
  const e = Symbol.for("undici.globalOrigin.1");
  function A() {
    return globalThis[e];
  }
  function t(s) {
    if (s === void 0) {
      Object.defineProperty(globalThis, e, {
        value: void 0,
        writable: !0,
        enumerable: !1,
        configurable: !1
      });
      return;
    }
    const r = new URL(s);
    if (r.protocol !== "http:" && r.protocol !== "https:")
      throw new TypeError(`Only http & https urls are allowed, received ${r.protocol}`);
    Object.defineProperty(globalThis, e, {
      value: r,
      writable: !0,
      enumerable: !1,
      configurable: !1
    });
  }
  return Dg = {
    getGlobalOrigin: A,
    setGlobalOrigin: t
  }, Dg;
}
var Rg, Gc;
function Rt() {
  if (Gc) return Rg;
  Gc = 1;
  const { redirectStatusSet: e, referrerPolicySet: A, badPortsSet: t } = Cs(), { getGlobalOrigin: s } = Xo(), { performance: r } = $l, { isBlobLike: o, toUSVString: n, ReadableStreamFrom: g } = JA, i = bA, { isUint8Array: E } = bi;
  let a;
  try {
    a = require("crypto");
  } catch {
  }
  function Q(W) {
    const $ = W.urlList, oA = $.length;
    return oA === 0 ? null : $[oA - 1].toString();
  }
  function c(W, $) {
    if (!e.has(W.status))
      return null;
    let oA = W.headersList.get("location");
    return oA !== null && y(oA) && (oA = new URL(oA, Q(W))), oA && !oA.hash && (oA.hash = $), oA;
  }
  function h(W) {
    return W.urlList[W.urlList.length - 1];
  }
  function u(W) {
    const $ = h(W);
    return Ce($) && t.has($.port) ? "blocked" : "allowed";
  }
  function I(W) {
    var $, oA;
    return W instanceof Error || (($ = W == null ? void 0 : W.constructor) == null ? void 0 : $.name) === "Error" || ((oA = W == null ? void 0 : W.constructor) == null ? void 0 : oA.name) === "DOMException";
  }
  function C(W) {
    for (let $ = 0; $ < W.length; ++$) {
      const oA = W.charCodeAt($);
      if (!(oA === 9 || // HTAB
      oA >= 32 && oA <= 126 || // SP / VCHAR
      oA >= 128 && oA <= 255))
        return !1;
    }
    return !0;
  }
  function f(W) {
    switch (W) {
      case 34:
      case 40:
      case 41:
      case 44:
      case 47:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 91:
      case 92:
      case 93:
      case 123:
      case 125:
        return !1;
      default:
        return W >= 33 && W <= 126;
    }
  }
  function B(W) {
    if (W.length === 0)
      return !1;
    for (let $ = 0; $ < W.length; ++$)
      if (!f(W.charCodeAt($)))
        return !1;
    return !0;
  }
  function l(W) {
    return B(W);
  }
  function y(W) {
    return !(W.startsWith("	") || W.startsWith(" ") || W.endsWith("	") || W.endsWith(" ") || W.includes("\0") || W.includes("\r") || W.includes(`
`));
  }
  function d(W, $) {
    const { headersList: oA } = $, hA = (oA.get("referrer-policy") ?? "").split(",");
    let G = "";
    if (hA.length > 0)
      for (let AA = hA.length; AA !== 0; AA--) {
        const sA = hA[AA - 1].trim();
        if (A.has(sA)) {
          G = sA;
          break;
        }
      }
    G !== "" && (W.referrerPolicy = G);
  }
  function p() {
    return "allowed";
  }
  function R() {
    return "success";
  }
  function D() {
    return "success";
  }
  function b(W) {
    let $ = null;
    $ = W.mode, W.headersList.set("sec-fetch-mode", $);
  }
  function M(W) {
    let $ = W.origin;
    if (W.responseTainting === "cors" || W.mode === "websocket")
      $ && W.headersList.append("origin", $);
    else if (W.method !== "GET" && W.method !== "HEAD") {
      switch (W.referrerPolicy) {
        case "no-referrer":
          $ = null;
          break;
        case "no-referrer-when-downgrade":
        case "strict-origin":
        case "strict-origin-when-cross-origin":
          W.origin && GA(W.origin) && !GA(h(W)) && ($ = null);
          break;
        case "same-origin":
          v(W, h(W)) || ($ = null);
          break;
      }
      $ && W.headersList.append("origin", $);
    }
  }
  function F(W) {
    return r.now();
  }
  function z(W) {
    return {
      startTime: W.startTime ?? 0,
      redirectStartTime: 0,
      redirectEndTime: 0,
      postRedirectStartTime: W.startTime ?? 0,
      finalServiceWorkerStartTime: 0,
      finalNetworkResponseStartTime: 0,
      finalNetworkRequestStartTime: 0,
      endTime: 0,
      encodedBodySize: 0,
      decodedBodySize: 0,
      finalConnectionTimingInfo: null
    };
  }
  function U() {
    return {
      referrerPolicy: "strict-origin-when-cross-origin"
    };
  }
  function _(W) {
    return {
      referrerPolicy: W.referrerPolicy
    };
  }
  function q(W) {
    const $ = W.referrerPolicy;
    i($);
    let oA = null;
    if (W.referrer === "client") {
      const CA = s();
      if (!CA || CA.origin === "null")
        return "no-referrer";
      oA = new URL(CA);
    } else W.referrer instanceof URL && (oA = W.referrer);
    let hA = X(oA);
    const G = X(oA, !0);
    hA.toString().length > 4096 && (hA = G);
    const AA = v(W, hA), sA = nA(hA) && !nA(W.url);
    switch ($) {
      case "origin":
        return G ?? X(oA, !0);
      case "unsafe-url":
        return hA;
      case "same-origin":
        return AA ? G : "no-referrer";
      case "origin-when-cross-origin":
        return AA ? hA : G;
      case "strict-origin-when-cross-origin": {
        const CA = h(W);
        return v(hA, CA) ? hA : nA(hA) && !nA(CA) ? "no-referrer" : G;
      }
      case "strict-origin":
      case "no-referrer-when-downgrade":
      default:
        return sA ? "no-referrer" : G;
    }
  }
  function X(W, $) {
    return i(W instanceof URL), W.protocol === "file:" || W.protocol === "about:" || W.protocol === "blank:" ? "no-referrer" : (W.username = "", W.password = "", W.hash = "", $ && (W.pathname = "", W.search = ""), W);
  }
  function nA(W) {
    if (!(W instanceof URL))
      return !1;
    if (W.href === "about:blank" || W.href === "about:srcdoc" || W.protocol === "data:" || W.protocol === "file:") return !0;
    return $(W.origin);
    function $(oA) {
      if (oA == null || oA === "null") return !1;
      const hA = new URL(oA);
      return !!(hA.protocol === "https:" || hA.protocol === "wss:" || /^127(?:\.[0-9]+){0,2}\.[0-9]+$|^\[(?:0*:)*?:?0*1\]$/.test(hA.hostname) || hA.hostname === "localhost" || hA.hostname.includes("localhost.") || hA.hostname.endsWith(".localhost"));
    }
  }
  function K(W, $) {
    if (a === void 0)
      return !0;
    const oA = L($);
    if (oA === "no metadata" || oA.length === 0)
      return !0;
    const hA = oA.sort((sA, CA) => CA.algo.localeCompare(sA.algo)), G = hA[0].algo, AA = hA.filter((sA) => sA.algo === G);
    for (const sA of AA) {
      const CA = sA.algo;
      let RA = sA.hash;
      RA.endsWith("==") && (RA = RA.slice(0, -2));
      let HA = a.createHash(CA).update(W).digest("base64");
      if (HA.endsWith("==") && (HA = HA.slice(0, -2)), HA === RA)
        return !0;
      let $A = a.createHash(CA).update(W).digest("base64url");
      if ($A.endsWith("==") && ($A = $A.slice(0, -2)), $A === RA)
        return !0;
    }
    return !1;
  }
  const P = /((?<algo>sha256|sha384|sha512)-(?<hash>[A-z0-9+/]{1}.*={0,2}))( +[\x21-\x7e]?)?/i;
  function L(W) {
    const $ = [];
    let oA = !0;
    const hA = a.getHashes();
    for (const G of W.split(" ")) {
      oA = !1;
      const AA = P.exec(G);
      if (AA === null || AA.groups === void 0)
        continue;
      const sA = AA.groups.algo;
      hA.includes(sA.toLowerCase()) && $.push(AA.groups);
    }
    return oA === !0 ? "no metadata" : $;
  }
  function eA(W) {
  }
  function v(W, $) {
    return W.origin === $.origin && W.origin === "null" || W.protocol === $.protocol && W.hostname === $.hostname && W.port === $.port;
  }
  function Y() {
    let W, $;
    return { promise: new Promise((hA, G) => {
      W = hA, $ = G;
    }), resolve: W, reject: $ };
  }
  function w(W) {
    return W.controller.state === "aborted";
  }
  function k(W) {
    return W.controller.state === "aborted" || W.controller.state === "terminated";
  }
  const N = {
    delete: "DELETE",
    DELETE: "DELETE",
    get: "GET",
    GET: "GET",
    head: "HEAD",
    HEAD: "HEAD",
    options: "OPTIONS",
    OPTIONS: "OPTIONS",
    post: "POST",
    POST: "POST",
    put: "PUT",
    PUT: "PUT"
  };
  Object.setPrototypeOf(N, null);
  function O(W) {
    return N[W.toLowerCase()] ?? W;
  }
  function Z(W) {
    const $ = JSON.stringify(W);
    if ($ === void 0)
      throw new TypeError("Value is not JSON serializable");
    return i(typeof $ == "string"), $;
  }
  const x = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));
  function H(W, $, oA) {
    const hA = {
      index: 0,
      kind: oA,
      target: W
    }, G = {
      next() {
        if (Object.getPrototypeOf(this) !== G)
          throw new TypeError(
            `'next' called on an object that does not implement interface ${$} Iterator.`
          );
        const { index: AA, kind: sA, target: CA } = hA, RA = CA(), HA = RA.length;
        if (AA >= HA)
          return { value: void 0, done: !0 };
        const $A = RA[AA];
        return hA.index = AA + 1, iA($A, sA);
      },
      // The class string of an iterator prototype object for a given interface is the
      // result of concatenating the identifier of the interface and the string " Iterator".
      [Symbol.toStringTag]: `${$} Iterator`
    };
    return Object.setPrototypeOf(G, x), Object.setPrototypeOf({}, G);
  }
  function iA(W, $) {
    let oA;
    switch ($) {
      case "key": {
        oA = W[0];
        break;
      }
      case "value": {
        oA = W[1];
        break;
      }
      case "key+value": {
        oA = W;
        break;
      }
    }
    return { value: oA, done: !1 };
  }
  async function IA(W, $, oA) {
    const hA = $, G = oA;
    let AA;
    try {
      AA = W.stream.getReader();
    } catch (sA) {
      G(sA);
      return;
    }
    try {
      const sA = await BA(AA);
      hA(sA);
    } catch (sA) {
      G(sA);
    }
  }
  let EA = globalThis.ReadableStream;
  function MA(W) {
    return EA || (EA = Ge.ReadableStream), W instanceof EA || W[Symbol.toStringTag] === "ReadableStream" && typeof W.tee == "function";
  }
  const kA = 65535;
  function NA(W) {
    return W.length < kA ? String.fromCharCode(...W) : W.reduce(($, oA) => $ + String.fromCharCode(oA), "");
  }
  function DA(W) {
    try {
      W.close();
    } catch ($) {
      if (!$.message.includes("Controller is already closed"))
        throw $;
    }
  }
  function pA(W) {
    for (let $ = 0; $ < W.length; $++)
      i(W.charCodeAt($) <= 255);
    return W;
  }
  async function BA(W) {
    const $ = [];
    let oA = 0;
    for (; ; ) {
      const { done: hA, value: G } = await W.read();
      if (hA)
        return Buffer.concat($, oA);
      if (!E(G))
        throw new TypeError("Received non-Uint8Array chunk");
      $.push(G), oA += G.length;
    }
  }
  function yA(W) {
    i("protocol" in W);
    const $ = W.protocol;
    return $ === "about:" || $ === "blob:" || $ === "data:";
  }
  function GA(W) {
    return typeof W == "string" ? W.startsWith("https:") : W.protocol === "https:";
  }
  function Ce(W) {
    i("protocol" in W);
    const $ = W.protocol;
    return $ === "http:" || $ === "https:";
  }
  const $e = Object.hasOwn || ((W, $) => Object.prototype.hasOwnProperty.call(W, $));
  return Rg = {
    isAborted: w,
    isCancelled: k,
    createDeferredPromise: Y,
    ReadableStreamFrom: g,
    toUSVString: n,
    tryUpgradeRequestToAPotentiallyTrustworthyURL: eA,
    coarsenedSharedCurrentTime: F,
    determineRequestsReferrer: q,
    makePolicyContainer: U,
    clonePolicyContainer: _,
    appendFetchMetadata: b,
    appendRequestOriginHeader: M,
    TAOCheck: D,
    corsCheck: R,
    crossOriginResourcePolicyCheck: p,
    createOpaqueTimingInfo: z,
    setRequestReferrerPolicyOnRedirect: d,
    isValidHTTPToken: B,
    requestBadPort: u,
    requestCurrentURL: h,
    responseURL: Q,
    responseLocationURL: c,
    isBlobLike: o,
    isURLPotentiallyTrustworthy: nA,
    isValidReasonPhrase: C,
    sameOrigin: v,
    normalizeMethod: O,
    serializeJavascriptValueToJSONString: Z,
    makeIterator: H,
    isValidHeaderName: l,
    isValidHeaderValue: y,
    hasOwn: $e,
    isErrorLike: I,
    fullyReadBody: IA,
    bytesMatch: K,
    isReadableStreamLike: MA,
    readableStreamClose: DA,
    isomorphicEncode: pA,
    isomorphicDecode: NA,
    urlIsLocal: yA,
    urlHasHttpsScheme: GA,
    urlIsHttpHttpsScheme: Ce,
    readAllBytes: BA,
    normalizeMethodRecord: N
  }, Rg;
}
var mg, Yc;
function br() {
  return Yc || (Yc = 1, mg = {
    kUrl: Symbol("url"),
    kHeaders: Symbol("headers"),
    kSignal: Symbol("signal"),
    kState: Symbol("state"),
    kGuard: Symbol("guard"),
    kRealm: Symbol("realm")
  }), mg;
}
var kg, Jc;
function At() {
  if (Jc) return kg;
  Jc = 1;
  const { types: e } = le, { hasOwn: A, toUSVString: t } = Rt(), s = {};
  return s.converters = {}, s.util = {}, s.errors = {}, s.errors.exception = function(r) {
    return new TypeError(`${r.header}: ${r.message}`);
  }, s.errors.conversionFailed = function(r) {
    const o = r.types.length === 1 ? "" : " one of", n = `${r.argument} could not be converted to${o}: ${r.types.join(", ")}.`;
    return s.errors.exception({
      header: r.prefix,
      message: n
    });
  }, s.errors.invalidArgument = function(r) {
    return s.errors.exception({
      header: r.prefix,
      message: `"${r.value}" is an invalid ${r.type}.`
    });
  }, s.brandCheck = function(r, o, n = void 0) {
    if ((n == null ? void 0 : n.strict) !== !1 && !(r instanceof o))
      throw new TypeError("Illegal invocation");
    return (r == null ? void 0 : r[Symbol.toStringTag]) === o.prototype[Symbol.toStringTag];
  }, s.argumentLengthCheck = function({ length: r }, o, n) {
    if (r < o)
      throw s.errors.exception({
        message: `${o} argument${o !== 1 ? "s" : ""} required, but${r ? " only" : ""} ${r} found.`,
        ...n
      });
  }, s.illegalConstructor = function() {
    throw s.errors.exception({
      header: "TypeError",
      message: "Illegal constructor"
    });
  }, s.util.Type = function(r) {
    switch (typeof r) {
      case "undefined":
        return "Undefined";
      case "boolean":
        return "Boolean";
      case "string":
        return "String";
      case "symbol":
        return "Symbol";
      case "number":
        return "Number";
      case "bigint":
        return "BigInt";
      case "function":
      case "object":
        return r === null ? "Null" : "Object";
    }
  }, s.util.ConvertToInt = function(r, o, n, g = {}) {
    let i, E;
    o === 64 ? (i = Math.pow(2, 53) - 1, n === "unsigned" ? E = 0 : E = Math.pow(-2, 53) + 1) : n === "unsigned" ? (E = 0, i = Math.pow(2, o) - 1) : (E = Math.pow(-2, o) - 1, i = Math.pow(2, o - 1) - 1);
    let a = Number(r);
    if (a === 0 && (a = 0), g.enforceRange === !0) {
      if (Number.isNaN(a) || a === Number.POSITIVE_INFINITY || a === Number.NEGATIVE_INFINITY)
        throw s.errors.exception({
          header: "Integer conversion",
          message: `Could not convert ${r} to an integer.`
        });
      if (a = s.util.IntegerPart(a), a < E || a > i)
        throw s.errors.exception({
          header: "Integer conversion",
          message: `Value must be between ${E}-${i}, got ${a}.`
        });
      return a;
    }
    return !Number.isNaN(a) && g.clamp === !0 ? (a = Math.min(Math.max(a, E), i), Math.floor(a) % 2 === 0 ? a = Math.floor(a) : a = Math.ceil(a), a) : Number.isNaN(a) || a === 0 && Object.is(0, a) || a === Number.POSITIVE_INFINITY || a === Number.NEGATIVE_INFINITY ? 0 : (a = s.util.IntegerPart(a), a = a % Math.pow(2, o), n === "signed" && a >= Math.pow(2, o) - 1 ? a - Math.pow(2, o) : a);
  }, s.util.IntegerPart = function(r) {
    const o = Math.floor(Math.abs(r));
    return r < 0 ? -1 * o : o;
  }, s.sequenceConverter = function(r) {
    return (o) => {
      var i;
      if (s.util.Type(o) !== "Object")
        throw s.errors.exception({
          header: "Sequence",
          message: `Value of type ${s.util.Type(o)} is not an Object.`
        });
      const n = (i = o == null ? void 0 : o[Symbol.iterator]) == null ? void 0 : i.call(o), g = [];
      if (n === void 0 || typeof n.next != "function")
        throw s.errors.exception({
          header: "Sequence",
          message: "Object is not an iterator."
        });
      for (; ; ) {
        const { done: E, value: a } = n.next();
        if (E)
          break;
        g.push(r(a));
      }
      return g;
    };
  }, s.recordConverter = function(r, o) {
    return (n) => {
      if (s.util.Type(n) !== "Object")
        throw s.errors.exception({
          header: "Record",
          message: `Value of type ${s.util.Type(n)} is not an Object.`
        });
      const g = {};
      if (!e.isProxy(n)) {
        const E = Object.keys(n);
        for (const a of E) {
          const Q = r(a), c = o(n[a]);
          g[Q] = c;
        }
        return g;
      }
      const i = Reflect.ownKeys(n);
      for (const E of i) {
        const a = Reflect.getOwnPropertyDescriptor(n, E);
        if (a != null && a.enumerable) {
          const Q = r(E), c = o(n[E]);
          g[Q] = c;
        }
      }
      return g;
    };
  }, s.interfaceConverter = function(r) {
    return (o, n = {}) => {
      if (n.strict !== !1 && !(o instanceof r))
        throw s.errors.exception({
          header: r.name,
          message: `Expected ${o} to be an instance of ${r.name}.`
        });
      return o;
    };
  }, s.dictionaryConverter = function(r) {
    return (o) => {
      const n = s.util.Type(o), g = {};
      if (n === "Null" || n === "Undefined")
        return g;
      if (n !== "Object")
        throw s.errors.exception({
          header: "Dictionary",
          message: `Expected ${o} to be one of: Null, Undefined, Object.`
        });
      for (const i of r) {
        const { key: E, defaultValue: a, required: Q, converter: c } = i;
        if (Q === !0 && !A(o, E))
          throw s.errors.exception({
            header: "Dictionary",
            message: `Missing required key "${E}".`
          });
        let h = o[E];
        const u = A(i, "defaultValue");
        if (u && h !== null && (h = h ?? a), Q || u || h !== void 0) {
          if (h = c(h), i.allowedValues && !i.allowedValues.includes(h))
            throw s.errors.exception({
              header: "Dictionary",
              message: `${h} is not an accepted type. Expected one of ${i.allowedValues.join(", ")}.`
            });
          g[E] = h;
        }
      }
      return g;
    };
  }, s.nullableConverter = function(r) {
    return (o) => o === null ? o : r(o);
  }, s.converters.DOMString = function(r, o = {}) {
    if (r === null && o.legacyNullToEmptyString)
      return "";
    if (typeof r == "symbol")
      throw new TypeError("Could not convert argument of type symbol to string.");
    return String(r);
  }, s.converters.ByteString = function(r) {
    const o = s.converters.DOMString(r);
    for (let n = 0; n < o.length; n++)
      if (o.charCodeAt(n) > 255)
        throw new TypeError(
          `Cannot convert argument to a ByteString because the character at index ${n} has a value of ${o.charCodeAt(n)} which is greater than 255.`
        );
    return o;
  }, s.converters.USVString = t, s.converters.boolean = function(r) {
    return !!r;
  }, s.converters.any = function(r) {
    return r;
  }, s.converters["long long"] = function(r) {
    return s.util.ConvertToInt(r, 64, "signed");
  }, s.converters["unsigned long long"] = function(r) {
    return s.util.ConvertToInt(r, 64, "unsigned");
  }, s.converters["unsigned long"] = function(r) {
    return s.util.ConvertToInt(r, 32, "unsigned");
  }, s.converters["unsigned short"] = function(r, o) {
    return s.util.ConvertToInt(r, 16, "unsigned", o);
  }, s.converters.ArrayBuffer = function(r, o = {}) {
    if (s.util.Type(r) !== "Object" || !e.isAnyArrayBuffer(r))
      throw s.errors.conversionFailed({
        prefix: `${r}`,
        argument: `${r}`,
        types: ["ArrayBuffer"]
      });
    if (o.allowShared === !1 && e.isSharedArrayBuffer(r))
      throw s.errors.exception({
        header: "ArrayBuffer",
        message: "SharedArrayBuffer is not allowed."
      });
    return r;
  }, s.converters.TypedArray = function(r, o, n = {}) {
    if (s.util.Type(r) !== "Object" || !e.isTypedArray(r) || r.constructor.name !== o.name)
      throw s.errors.conversionFailed({
        prefix: `${o.name}`,
        argument: `${r}`,
        types: [o.name]
      });
    if (n.allowShared === !1 && e.isSharedArrayBuffer(r.buffer))
      throw s.errors.exception({
        header: "ArrayBuffer",
        message: "SharedArrayBuffer is not allowed."
      });
    return r;
  }, s.converters.DataView = function(r, o = {}) {
    if (s.util.Type(r) !== "Object" || !e.isDataView(r))
      throw s.errors.exception({
        header: "DataView",
        message: "Object is not a DataView."
      });
    if (o.allowShared === !1 && e.isSharedArrayBuffer(r.buffer))
      throw s.errors.exception({
        header: "ArrayBuffer",
        message: "SharedArrayBuffer is not allowed."
      });
    return r;
  }, s.converters.BufferSource = function(r, o = {}) {
    if (e.isAnyArrayBuffer(r))
      return s.converters.ArrayBuffer(r, o);
    if (e.isTypedArray(r))
      return s.converters.TypedArray(r, r.constructor);
    if (e.isDataView(r))
      return s.converters.DataView(r, o);
    throw new TypeError(`Could not convert ${r} to a BufferSource.`);
  }, s.converters["sequence<ByteString>"] = s.sequenceConverter(
    s.converters.ByteString
  ), s.converters["sequence<sequence<ByteString>>"] = s.sequenceConverter(
    s.converters["sequence<ByteString>"]
  ), s.converters["record<ByteString, ByteString>"] = s.recordConverter(
    s.converters.ByteString,
    s.converters.ByteString
  ), kg = {
    webidl: s
  }, kg;
}
var Fg, vc;
function Pt() {
  if (vc) return Fg;
  vc = 1;
  const e = bA, { atob: A } = ze, { isomorphicDecode: t } = Rt(), s = new TextEncoder(), r = /^[!#$%&'*+-.^_|~A-Za-z0-9]+$/, o = /(\u000A|\u000D|\u0009|\u0020)/, n = /[\u0009|\u0020-\u007E|\u0080-\u00FF]/;
  function g(d) {
    e(d.protocol === "data:");
    let p = i(d, !0);
    p = p.slice(5);
    const R = { position: 0 };
    let D = a(
      ",",
      p,
      R
    );
    const b = D.length;
    if (D = y(D, !0, !0), R.position >= p.length)
      return "failure";
    R.position++;
    const M = p.slice(b + 1);
    let F = Q(M);
    if (/;(\u0020){0,}base64$/i.test(D)) {
      const U = t(F);
      if (F = u(U), F === "failure")
        return "failure";
      D = D.slice(0, -6), D = D.replace(/(\u0020)+$/, ""), D = D.slice(0, -1);
    }
    D.startsWith(";") && (D = "text/plain" + D);
    let z = h(D);
    return z === "failure" && (z = h("text/plain;charset=US-ASCII")), { mimeType: z, body: F };
  }
  function i(d, p = !1) {
    if (!p)
      return d.href;
    const R = d.href, D = d.hash.length;
    return D === 0 ? R : R.substring(0, R.length - D);
  }
  function E(d, p, R) {
    let D = "";
    for (; R.position < p.length && d(p[R.position]); )
      D += p[R.position], R.position++;
    return D;
  }
  function a(d, p, R) {
    const D = p.indexOf(d, R.position), b = R.position;
    return D === -1 ? (R.position = p.length, p.slice(b)) : (R.position = D, p.slice(b, R.position));
  }
  function Q(d) {
    const p = s.encode(d);
    return c(p);
  }
  function c(d) {
    const p = [];
    for (let R = 0; R < d.length; R++) {
      const D = d[R];
      if (D !== 37)
        p.push(D);
      else if (D === 37 && !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(d[R + 1], d[R + 2])))
        p.push(37);
      else {
        const b = String.fromCharCode(d[R + 1], d[R + 2]), M = Number.parseInt(b, 16);
        p.push(M), R += 2;
      }
    }
    return Uint8Array.from(p);
  }
  function h(d) {
    d = B(d, !0, !0);
    const p = { position: 0 }, R = a(
      "/",
      d,
      p
    );
    if (R.length === 0 || !r.test(R) || p.position > d.length)
      return "failure";
    p.position++;
    let D = a(
      ";",
      d,
      p
    );
    if (D = B(D, !1, !0), D.length === 0 || !r.test(D))
      return "failure";
    const b = R.toLowerCase(), M = D.toLowerCase(), F = {
      type: b,
      subtype: M,
      /** @type {Map<string, string>} */
      parameters: /* @__PURE__ */ new Map(),
      // https://mimesniff.spec.whatwg.org/#mime-type-essence
      essence: `${b}/${M}`
    };
    for (; p.position < d.length; ) {
      p.position++, E(
        // https://fetch.spec.whatwg.org/#http-whitespace
        (_) => o.test(_),
        d,
        p
      );
      let z = E(
        (_) => _ !== ";" && _ !== "=",
        d,
        p
      );
      if (z = z.toLowerCase(), p.position < d.length) {
        if (d[p.position] === ";")
          continue;
        p.position++;
      }
      if (p.position > d.length)
        break;
      let U = null;
      if (d[p.position] === '"')
        U = I(d, p, !0), a(
          ";",
          d,
          p
        );
      else if (U = a(
        ";",
        d,
        p
      ), U = B(U, !1, !0), U.length === 0)
        continue;
      z.length !== 0 && r.test(z) && (U.length === 0 || n.test(U)) && !F.parameters.has(z) && F.parameters.set(z, U);
    }
    return F;
  }
  function u(d) {
    if (d = d.replace(/[\u0009\u000A\u000C\u000D\u0020]/g, ""), d.length % 4 === 0 && (d = d.replace(/=?=$/, "")), d.length % 4 === 1 || /[^+/0-9A-Za-z]/.test(d))
      return "failure";
    const p = A(d), R = new Uint8Array(p.length);
    for (let D = 0; D < p.length; D++)
      R[D] = p.charCodeAt(D);
    return R;
  }
  function I(d, p, R) {
    const D = p.position;
    let b = "";
    for (e(d[p.position] === '"'), p.position++; b += E(
      (F) => F !== '"' && F !== "\\",
      d,
      p
    ), !(p.position >= d.length); ) {
      const M = d[p.position];
      if (p.position++, M === "\\") {
        if (p.position >= d.length) {
          b += "\\";
          break;
        }
        b += d[p.position], p.position++;
      } else {
        e(M === '"');
        break;
      }
    }
    return R ? b : d.slice(D, p.position);
  }
  function C(d) {
    e(d !== "failure");
    const { parameters: p, essence: R } = d;
    let D = R;
    for (let [b, M] of p.entries())
      D += ";", D += b, D += "=", r.test(M) || (M = M.replace(/(\\|")/g, "\\$1"), M = '"' + M, M += '"'), D += M;
    return D;
  }
  function f(d) {
    return d === "\r" || d === `
` || d === "	" || d === " ";
  }
  function B(d, p = !0, R = !0) {
    let D = 0, b = d.length - 1;
    if (p)
      for (; D < d.length && f(d[D]); D++) ;
    if (R)
      for (; b > 0 && f(d[b]); b--) ;
    return d.slice(D, b + 1);
  }
  function l(d) {
    return d === "\r" || d === `
` || d === "	" || d === "\f" || d === " ";
  }
  function y(d, p = !0, R = !0) {
    let D = 0, b = d.length - 1;
    if (p)
      for (; D < d.length && l(d[D]); D++) ;
    if (R)
      for (; b > 0 && l(d[b]); b--) ;
    return d.slice(D, b + 1);
  }
  return Fg = {
    dataURLProcessor: g,
    URLSerializer: i,
    collectASequenceOfCodePoints: E,
    collectASequenceOfCodePointsFast: a,
    stringPercentDecode: Q,
    parseMIMEType: h,
    collectAnHTTPQuotedString: I,
    serializeAMimeType: C
  }, Fg;
}
var bg, Hc;
function VQ() {
  if (Hc) return bg;
  Hc = 1;
  const { Blob: e, File: A } = ze, { types: t } = le, { kState: s } = br(), { isBlobLike: r } = Rt(), { webidl: o } = At(), { parseMIMEType: n, serializeAMimeType: g } = Pt(), { kEnumerableProperty: i } = JA, E = new TextEncoder();
  class a extends e {
    constructor(C, f, B = {}) {
      o.argumentLengthCheck(arguments, 2, { header: "File constructor" }), C = o.converters["sequence<BlobPart>"](C), f = o.converters.USVString(f), B = o.converters.FilePropertyBag(B);
      const l = f;
      let y = B.type, d;
      A: {
        if (y) {
          if (y = n(y), y === "failure") {
            y = "";
            break A;
          }
          y = g(y).toLowerCase();
        }
        d = B.lastModified;
      }
      super(c(C, B), { type: y }), this[s] = {
        name: l,
        lastModified: d,
        type: y
      };
    }
    get name() {
      return o.brandCheck(this, a), this[s].name;
    }
    get lastModified() {
      return o.brandCheck(this, a), this[s].lastModified;
    }
    get type() {
      return o.brandCheck(this, a), this[s].type;
    }
  }
  class Q {
    constructor(C, f, B = {}) {
      const l = f, y = B.type, d = B.lastModified ?? Date.now();
      this[s] = {
        blobLike: C,
        name: l,
        type: y,
        lastModified: d
      };
    }
    stream(...C) {
      return o.brandCheck(this, Q), this[s].blobLike.stream(...C);
    }
    arrayBuffer(...C) {
      return o.brandCheck(this, Q), this[s].blobLike.arrayBuffer(...C);
    }
    slice(...C) {
      return o.brandCheck(this, Q), this[s].blobLike.slice(...C);
    }
    text(...C) {
      return o.brandCheck(this, Q), this[s].blobLike.text(...C);
    }
    get size() {
      return o.brandCheck(this, Q), this[s].blobLike.size;
    }
    get type() {
      return o.brandCheck(this, Q), this[s].blobLike.type;
    }
    get name() {
      return o.brandCheck(this, Q), this[s].name;
    }
    get lastModified() {
      return o.brandCheck(this, Q), this[s].lastModified;
    }
    get [Symbol.toStringTag]() {
      return "File";
    }
  }
  Object.defineProperties(a.prototype, {
    [Symbol.toStringTag]: {
      value: "File",
      configurable: !0
    },
    name: i,
    lastModified: i
  }), o.converters.Blob = o.interfaceConverter(e), o.converters.BlobPart = function(I, C) {
    if (o.util.Type(I) === "Object") {
      if (r(I))
        return o.converters.Blob(I, { strict: !1 });
      if (ArrayBuffer.isView(I) || t.isAnyArrayBuffer(I))
        return o.converters.BufferSource(I, C);
    }
    return o.converters.USVString(I, C);
  }, o.converters["sequence<BlobPart>"] = o.sequenceConverter(
    o.converters.BlobPart
  ), o.converters.FilePropertyBag = o.dictionaryConverter([
    {
      key: "lastModified",
      converter: o.converters["long long"],
      get defaultValue() {
        return Date.now();
      }
    },
    {
      key: "type",
      converter: o.converters.DOMString,
      defaultValue: ""
    },
    {
      key: "endings",
      converter: (I) => (I = o.converters.DOMString(I), I = I.toLowerCase(), I !== "native" && (I = "transparent"), I),
      defaultValue: "transparent"
    }
  ]);
  function c(I, C) {
    const f = [];
    for (const B of I)
      if (typeof B == "string") {
        let l = B;
        C.endings === "native" && (l = h(l)), f.push(E.encode(l));
      } else t.isAnyArrayBuffer(B) || t.isTypedArray(B) ? B.buffer ? f.push(
        new Uint8Array(B.buffer, B.byteOffset, B.byteLength)
      ) : f.push(new Uint8Array(B)) : r(B) && f.push(B);
    return f;
  }
  function h(I) {
    let C = `
`;
    return process.platform === "win32" && (C = `\r
`), I.replace(/\r?\n/g, C);
  }
  function u(I) {
    return A && I instanceof A || I instanceof a || I && (typeof I.stream == "function" || typeof I.arrayBuffer == "function") && I[Symbol.toStringTag] === "File";
  }
  return bg = { File: a, FileLike: Q, isFileLike: u }, bg;
}
var Ng, Vc;
function xQ() {
  if (Vc) return Ng;
  Vc = 1;
  const { isBlobLike: e, toUSVString: A, makeIterator: t } = Rt(), { kState: s } = br(), { File: r, FileLike: o, isFileLike: n } = VQ(), { webidl: g } = At(), { Blob: i, File: E } = ze, a = E ?? r;
  class Q {
    constructor(u) {
      if (u !== void 0)
        throw g.errors.conversionFailed({
          prefix: "FormData constructor",
          argument: "Argument 1",
          types: ["undefined"]
        });
      this[s] = [];
    }
    append(u, I, C = void 0) {
      if (g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 2, { header: "FormData.append" }), arguments.length === 3 && !e(I))
        throw new TypeError(
          "Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'"
        );
      u = g.converters.USVString(u), I = e(I) ? g.converters.Blob(I, { strict: !1 }) : g.converters.USVString(I), C = arguments.length === 3 ? g.converters.USVString(C) : void 0;
      const f = c(u, I, C);
      this[s].push(f);
    }
    delete(u) {
      g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 1, { header: "FormData.delete" }), u = g.converters.USVString(u), this[s] = this[s].filter((I) => I.name !== u);
    }
    get(u) {
      g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 1, { header: "FormData.get" }), u = g.converters.USVString(u);
      const I = this[s].findIndex((C) => C.name === u);
      return I === -1 ? null : this[s][I].value;
    }
    getAll(u) {
      return g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 1, { header: "FormData.getAll" }), u = g.converters.USVString(u), this[s].filter((I) => I.name === u).map((I) => I.value);
    }
    has(u) {
      return g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 1, { header: "FormData.has" }), u = g.converters.USVString(u), this[s].findIndex((I) => I.name === u) !== -1;
    }
    set(u, I, C = void 0) {
      if (g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 2, { header: "FormData.set" }), arguments.length === 3 && !e(I))
        throw new TypeError(
          "Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'"
        );
      u = g.converters.USVString(u), I = e(I) ? g.converters.Blob(I, { strict: !1 }) : g.converters.USVString(I), C = arguments.length === 3 ? A(C) : void 0;
      const f = c(u, I, C), B = this[s].findIndex((l) => l.name === u);
      B !== -1 ? this[s] = [
        ...this[s].slice(0, B),
        f,
        ...this[s].slice(B + 1).filter((l) => l.name !== u)
      ] : this[s].push(f);
    }
    entries() {
      return g.brandCheck(this, Q), t(
        () => this[s].map((u) => [u.name, u.value]),
        "FormData",
        "key+value"
      );
    }
    keys() {
      return g.brandCheck(this, Q), t(
        () => this[s].map((u) => [u.name, u.value]),
        "FormData",
        "key"
      );
    }
    values() {
      return g.brandCheck(this, Q), t(
        () => this[s].map((u) => [u.name, u.value]),
        "FormData",
        "value"
      );
    }
    /**
     * @param {(value: string, key: string, self: FormData) => void} callbackFn
     * @param {unknown} thisArg
     */
    forEach(u, I = globalThis) {
      if (g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 1, { header: "FormData.forEach" }), typeof u != "function")
        throw new TypeError(
          "Failed to execute 'forEach' on 'FormData': parameter 1 is not of type 'Function'."
        );
      for (const [C, f] of this)
        u.apply(I, [f, C, this]);
    }
  }
  Q.prototype[Symbol.iterator] = Q.prototype.entries, Object.defineProperties(Q.prototype, {
    [Symbol.toStringTag]: {
      value: "FormData",
      configurable: !0
    }
  });
  function c(h, u, I) {
    if (h = Buffer.from(h).toString("utf8"), typeof u == "string")
      u = Buffer.from(u).toString("utf8");
    else if (n(u) || (u = u instanceof i ? new a([u], "blob", { type: u.type }) : new o(u, "blob", { type: u.type })), I !== void 0) {
      const C = {
        type: u.type,
        lastModified: u.lastModified
      };
      u = E && u instanceof E || u instanceof r ? new a([u], I, C) : new o(u, I, C);
    }
    return { name: h, value: u };
  }
  return Ng = { FormData: Q }, Ng;
}
var Sg, xc;
function Si() {
  if (xc) return Sg;
  xc = 1;
  const e = Mh(), A = JA, {
    ReadableStreamFrom: t,
    isBlobLike: s,
    isReadableStreamLike: r,
    readableStreamClose: o,
    createDeferredPromise: n,
    fullyReadBody: g
  } = Rt(), { FormData: i } = xQ(), { kState: E } = br(), { webidl: a } = At(), { DOMException: Q, structuredClone: c } = Cs(), { Blob: h, File: u } = ze, { kBodyUsed: I } = zA, C = bA, { isErrored: f } = JA, { isUint8Array: B, isArrayBuffer: l } = bi, { File: y } = VQ(), { parseMIMEType: d, serializeAMimeType: p } = Pt();
  let R = globalThis.ReadableStream;
  const D = u ?? y, b = new TextEncoder(), M = new TextDecoder();
  function F(Y, w = !1) {
    R || (R = Ge.ReadableStream);
    let k = null;
    Y instanceof R ? k = Y : s(Y) ? k = Y.stream() : k = new R({
      async pull(iA) {
        iA.enqueue(
          typeof O == "string" ? b.encode(O) : O
        ), queueMicrotask(() => o(iA));
      },
      start() {
      },
      type: void 0
    }), C(r(k));
    let N = null, O = null, Z = null, x = null;
    if (typeof Y == "string")
      O = Y, x = "text/plain;charset=UTF-8";
    else if (Y instanceof URLSearchParams)
      O = Y.toString(), x = "application/x-www-form-urlencoded;charset=UTF-8";
    else if (l(Y))
      O = new Uint8Array(Y.slice());
    else if (ArrayBuffer.isView(Y))
      O = new Uint8Array(Y.buffer.slice(Y.byteOffset, Y.byteOffset + Y.byteLength));
    else if (A.isFormDataLike(Y)) {
      const iA = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11, "0")}`, IA = `--${iA}\r
Content-Disposition: form-data`;
      /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
      const EA = (BA) => BA.replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/"/g, "%22"), MA = (BA) => BA.replace(/\r?\n|\r/g, `\r
`), kA = [], NA = new Uint8Array([13, 10]);
      Z = 0;
      let DA = !1;
      for (const [BA, yA] of Y)
        if (typeof yA == "string") {
          const GA = b.encode(IA + `; name="${EA(MA(BA))}"\r
\r
${MA(yA)}\r
`);
          kA.push(GA), Z += GA.byteLength;
        } else {
          const GA = b.encode(`${IA}; name="${EA(MA(BA))}"` + (yA.name ? `; filename="${EA(yA.name)}"` : "") + `\r
Content-Type: ${yA.type || "application/octet-stream"}\r
\r
`);
          kA.push(GA, yA, NA), typeof yA.size == "number" ? Z += GA.byteLength + yA.size + NA.byteLength : DA = !0;
        }
      const pA = b.encode(`--${iA}--`);
      kA.push(pA), Z += pA.byteLength, DA && (Z = null), O = Y, N = async function* () {
        for (const BA of kA)
          BA.stream ? yield* BA.stream() : yield BA;
      }, x = "multipart/form-data; boundary=" + iA;
    } else if (s(Y))
      O = Y, Z = Y.size, Y.type && (x = Y.type);
    else if (typeof Y[Symbol.asyncIterator] == "function") {
      if (w)
        throw new TypeError("keepalive");
      if (A.isDisturbed(Y) || Y.locked)
        throw new TypeError(
          "Response body object should not be disturbed or locked"
        );
      k = Y instanceof R ? Y : t(Y);
    }
    if ((typeof O == "string" || A.isBuffer(O)) && (Z = Buffer.byteLength(O)), N != null) {
      let iA;
      k = new R({
        async start() {
          iA = N(Y)[Symbol.asyncIterator]();
        },
        async pull(IA) {
          const { value: EA, done: MA } = await iA.next();
          return MA ? queueMicrotask(() => {
            IA.close();
          }) : f(k) || IA.enqueue(new Uint8Array(EA)), IA.desiredSize > 0;
        },
        async cancel(IA) {
          await iA.return();
        },
        type: void 0
      });
    }
    return [{ stream: k, source: O, length: Z }, x];
  }
  function z(Y, w = !1) {
    return R || (R = Ge.ReadableStream), Y instanceof R && (C(!A.isDisturbed(Y), "The body has already been consumed."), C(!Y.locked, "The stream is locked.")), F(Y, w);
  }
  function U(Y) {
    const [w, k] = Y.stream.tee(), N = c(k, { transfer: [k] }), [, O] = N.tee();
    return Y.stream = w, {
      stream: O,
      length: Y.length,
      source: Y.source
    };
  }
  async function* _(Y) {
    if (Y)
      if (B(Y))
        yield Y;
      else {
        const w = Y.stream;
        if (A.isDisturbed(w))
          throw new TypeError("The body has already been consumed.");
        if (w.locked)
          throw new TypeError("The stream is locked.");
        w[I] = !0, yield* w;
      }
  }
  function q(Y) {
    if (Y.aborted)
      throw new Q("The operation was aborted.", "AbortError");
  }
  function X(Y) {
    return {
      blob() {
        return K(this, (k) => {
          let N = v(this);
          return N === "failure" ? N = "" : N && (N = p(N)), new h([k], { type: N });
        }, Y);
      },
      arrayBuffer() {
        return K(this, (k) => new Uint8Array(k).buffer, Y);
      },
      text() {
        return K(this, L, Y);
      },
      json() {
        return K(this, eA, Y);
      },
      async formData() {
        a.brandCheck(this, Y), q(this[E]);
        const k = this.headers.get("Content-Type");
        if (/multipart\/form-data/.test(k)) {
          const N = {};
          for (const [H, iA] of this.headers) N[H.toLowerCase()] = iA;
          const O = new i();
          let Z;
          try {
            Z = new e({
              headers: N,
              preservePath: !0
            });
          } catch (H) {
            throw new Q(`${H}`, "AbortError");
          }
          Z.on("field", (H, iA) => {
            O.append(H, iA);
          }), Z.on("file", (H, iA, IA, EA, MA) => {
            const kA = [];
            if (EA === "base64" || EA.toLowerCase() === "base64") {
              let NA = "";
              iA.on("data", (DA) => {
                NA += DA.toString().replace(/[\r\n]/gm, "");
                const pA = NA.length - NA.length % 4;
                kA.push(Buffer.from(NA.slice(0, pA), "base64")), NA = NA.slice(pA);
              }), iA.on("end", () => {
                kA.push(Buffer.from(NA, "base64")), O.append(H, new D(kA, IA, { type: MA }));
              });
            } else
              iA.on("data", (NA) => {
                kA.push(NA);
              }), iA.on("end", () => {
                O.append(H, new D(kA, IA, { type: MA }));
              });
          });
          const x = new Promise((H, iA) => {
            Z.on("finish", H), Z.on("error", (IA) => iA(new TypeError(IA)));
          });
          if (this.body !== null) for await (const H of _(this[E].body)) Z.write(H);
          return Z.end(), await x, O;
        } else if (/application\/x-www-form-urlencoded/.test(k)) {
          let N;
          try {
            let Z = "";
            const x = new TextDecoder("utf-8", { ignoreBOM: !0 });
            for await (const H of _(this[E].body)) {
              if (!B(H))
                throw new TypeError("Expected Uint8Array chunk");
              Z += x.decode(H, { stream: !0 });
            }
            Z += x.decode(), N = new URLSearchParams(Z);
          } catch (Z) {
            throw Object.assign(new TypeError(), { cause: Z });
          }
          const O = new i();
          for (const [Z, x] of N)
            O.append(Z, x);
          return O;
        } else
          throw await Promise.resolve(), q(this[E]), a.errors.exception({
            header: `${Y.name}.formData`,
            message: "Could not parse content as FormData."
          });
      }
    };
  }
  function nA(Y) {
    Object.assign(Y.prototype, X(Y));
  }
  async function K(Y, w, k) {
    if (a.brandCheck(Y, k), q(Y[E]), P(Y[E].body))
      throw new TypeError("Body is unusable");
    const N = n(), O = (x) => N.reject(x), Z = (x) => {
      try {
        N.resolve(w(x));
      } catch (H) {
        O(H);
      }
    };
    return Y[E].body == null ? (Z(new Uint8Array()), N.promise) : (await g(Y[E].body, Z, O), N.promise);
  }
  function P(Y) {
    return Y != null && (Y.stream.locked || A.isDisturbed(Y.stream));
  }
  function L(Y) {
    return Y.length === 0 ? "" : (Y[0] === 239 && Y[1] === 187 && Y[2] === 191 && (Y = Y.subarray(3)), M.decode(Y));
  }
  function eA(Y) {
    return JSON.parse(L(Y));
  }
  function v(Y) {
    const { headersList: w } = Y[E], k = w.get("content-type");
    return k === null ? "failure" : d(k);
  }
  return Sg = {
    extractBody: F,
    safelyExtractBody: z,
    cloneBody: U,
    mixinBody: nA
  }, Sg;
}
const {
  InvalidArgumentError: PA,
  NotSupportedError: Wy
} = qA, $t = bA, { kHTTP2BuildRequest: qy, kHTTP2CopyHeaders: _y, kHTTP1BuildRequest: $y } = zA, Ze = JA, Gh = /^[\^_`a-zA-Z\-0-9!#$%&'*+.|~]+$/, Yh = /[^\t\x20-\x7e\x80-\xff]/, Zy = /[^\u0021-\u00ff]/, dt = Symbol("handler"), Be = {};
let Ug;
try {
  const e = require("diagnostics_channel");
  Be.create = e.channel("undici:request:create"), Be.bodySent = e.channel("undici:request:bodySent"), Be.headers = e.channel("undici:request:headers"), Be.trailers = e.channel("undici:request:trailers"), Be.error = e.channel("undici:request:error");
} catch {
  Be.create = { hasSubscribers: !1 }, Be.bodySent = { hasSubscribers: !1 }, Be.headers = { hasSubscribers: !1 }, Be.trailers = { hasSubscribers: !1 }, Be.error = { hasSubscribers: !1 };
}
let Xy = class AQ {
  constructor(A, {
    path: t,
    method: s,
    body: r,
    headers: o,
    query: n,
    idempotent: g,
    blocking: i,
    upgrade: E,
    headersTimeout: a,
    bodyTimeout: Q,
    reset: c,
    throwOnError: h,
    expectContinue: u
  }, I) {
    if (typeof t != "string")
      throw new PA("path must be a string");
    if (t[0] !== "/" && !(t.startsWith("http://") || t.startsWith("https://")) && s !== "CONNECT")
      throw new PA("path must be an absolute URL or start with a slash");
    if (Zy.exec(t) !== null)
      throw new PA("invalid request path");
    if (typeof s != "string")
      throw new PA("method must be a string");
    if (Gh.exec(s) === null)
      throw new PA("invalid request method");
    if (E && typeof E != "string")
      throw new PA("upgrade must be a string");
    if (a != null && (!Number.isFinite(a) || a < 0))
      throw new PA("invalid headersTimeout");
    if (Q != null && (!Number.isFinite(Q) || Q < 0))
      throw new PA("invalid bodyTimeout");
    if (c != null && typeof c != "boolean")
      throw new PA("invalid reset");
    if (u != null && typeof u != "boolean")
      throw new PA("invalid expectContinue");
    if (this.headersTimeout = a, this.bodyTimeout = Q, this.throwOnError = h === !0, this.method = s, this.abort = null, r == null)
      this.body = null;
    else if (Ze.isStream(r)) {
      this.body = r;
      const C = this.body._readableState;
      (!C || !C.autoDestroy) && (this.endHandler = function() {
        Ze.destroy(this);
      }, this.body.on("end", this.endHandler)), this.errorHandler = (f) => {
        this.abort ? this.abort(f) : this.error = f;
      }, this.body.on("error", this.errorHandler);
    } else if (Ze.isBuffer(r))
      this.body = r.byteLength ? r : null;
    else if (ArrayBuffer.isView(r))
      this.body = r.buffer.byteLength ? Buffer.from(r.buffer, r.byteOffset, r.byteLength) : null;
    else if (r instanceof ArrayBuffer)
      this.body = r.byteLength ? Buffer.from(r) : null;
    else if (typeof r == "string")
      this.body = r.length ? Buffer.from(r) : null;
    else if (Ze.isFormDataLike(r) || Ze.isIterable(r) || Ze.isBlobLike(r))
      this.body = r;
    else
      throw new PA("body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable");
    if (this.completed = !1, this.aborted = !1, this.upgrade = E || null, this.path = n ? Ze.buildURL(t, n) : t, this.origin = A, this.idempotent = g ?? (s === "HEAD" || s === "GET"), this.blocking = i ?? !1, this.reset = c ?? null, this.host = null, this.contentLength = null, this.contentType = null, this.headers = "", this.expectContinue = u ?? !1, Array.isArray(o)) {
      if (o.length % 2 !== 0)
        throw new PA("headers array must be even");
      for (let C = 0; C < o.length; C += 2)
        ao(this, o[C], o[C + 1]);
    } else if (o && typeof o == "object") {
      const C = Object.keys(o);
      for (let f = 0; f < C.length; f++) {
        const B = C[f];
        ao(this, B, o[B]);
      }
    } else if (o != null)
      throw new PA("headers must be an object or an array");
    if (Ze.isFormDataLike(this.body)) {
      if (Ze.nodeMajor < 16 || Ze.nodeMajor === 16 && Ze.nodeMinor < 8)
        throw new PA("Form-Data bodies are only supported in node v16.8 and newer.");
      Ug || (Ug = Si().extractBody);
      const [C, f] = Ug(r);
      this.contentType == null && (this.contentType = f, this.headers += `content-type: ${f}\r
`), this.body = C.stream, this.contentLength = C.length;
    } else Ze.isBlobLike(r) && this.contentType == null && r.type && (this.contentType = r.type, this.headers += `content-type: ${r.type}\r
`);
    Ze.validateHandler(I, s, E), this.servername = Ze.getServerName(this.host), this[dt] = I, Be.create.hasSubscribers && Be.create.publish({ request: this });
  }
  onBodySent(A) {
    if (this[dt].onBodySent)
      try {
        return this[dt].onBodySent(A);
      } catch (t) {
        this.abort(t);
      }
  }
  onRequestSent() {
    if (Be.bodySent.hasSubscribers && Be.bodySent.publish({ request: this }), this[dt].onRequestSent)
      try {
        return this[dt].onRequestSent();
      } catch (A) {
        this.abort(A);
      }
  }
  onConnect(A) {
    if ($t(!this.aborted), $t(!this.completed), this.error)
      A(this.error);
    else
      return this.abort = A, this[dt].onConnect(A);
  }
  onHeaders(A, t, s, r) {
    $t(!this.aborted), $t(!this.completed), Be.headers.hasSubscribers && Be.headers.publish({ request: this, response: { statusCode: A, headers: t, statusText: r } });
    try {
      return this[dt].onHeaders(A, t, s, r);
    } catch (o) {
      this.abort(o);
    }
  }
  onData(A) {
    $t(!this.aborted), $t(!this.completed);
    try {
      return this[dt].onData(A);
    } catch (t) {
      return this.abort(t), !1;
    }
  }
  onUpgrade(A, t, s) {
    return $t(!this.aborted), $t(!this.completed), this[dt].onUpgrade(A, t, s);
  }
  onComplete(A) {
    this.onFinally(), $t(!this.aborted), this.completed = !0, Be.trailers.hasSubscribers && Be.trailers.publish({ request: this, trailers: A });
    try {
      return this[dt].onComplete(A);
    } catch (t) {
      this.onError(t);
    }
  }
  onError(A) {
    if (this.onFinally(), Be.error.hasSubscribers && Be.error.publish({ request: this, error: A }), !this.aborted)
      return this.aborted = !0, this[dt].onError(A);
  }
  onFinally() {
    this.errorHandler && (this.body.off("error", this.errorHandler), this.errorHandler = null), this.endHandler && (this.body.off("end", this.endHandler), this.endHandler = null);
  }
  // TODO: adjust to support H2
  addHeader(A, t) {
    return ao(this, A, t), this;
  }
  static [$y](A, t, s) {
    return new AQ(A, t, s);
  }
  static [qy](A, t, s) {
    const r = t.headers;
    t = { ...t, headers: null };
    const o = new AQ(A, t, s);
    if (o.headers = {}, Array.isArray(r)) {
      if (r.length % 2 !== 0)
        throw new PA("headers array must be even");
      for (let n = 0; n < r.length; n += 2)
        ao(o, r[n], r[n + 1], !0);
    } else if (r && typeof r == "object") {
      const n = Object.keys(r);
      for (let g = 0; g < n.length; g++) {
        const i = n[g];
        ao(o, i, r[i], !0);
      }
    } else if (r != null)
      throw new PA("headers must be an object or an array");
    return o;
  }
  static [_y](A) {
    const t = A.split(`\r
`), s = {};
    for (const r of t) {
      const [o, n] = r.split(": ");
      n == null || n.length === 0 || (s[o] ? s[o] += `,${n}` : s[o] = n);
    }
    return s;
  }
};
function Gr(e, A, t) {
  if (A && typeof A == "object")
    throw new PA(`invalid ${e} header`);
  if (A = A != null ? `${A}` : "", Yh.exec(A) !== null)
    throw new PA(`invalid ${e} header`);
  return t ? A : `${e}: ${A}\r
`;
}
function ao(e, A, t, s = !1) {
  if (t && typeof t == "object" && !Array.isArray(t))
    throw new PA(`invalid ${A} header`);
  if (t === void 0)
    return;
  if (e.host === null && A.length === 4 && A.toLowerCase() === "host") {
    if (Yh.exec(t) !== null)
      throw new PA(`invalid ${A} header`);
    e.host = t;
  } else if (e.contentLength === null && A.length === 14 && A.toLowerCase() === "content-length") {
    if (e.contentLength = parseInt(t, 10), !Number.isFinite(e.contentLength))
      throw new PA("invalid content-length header");
  } else if (e.contentType === null && A.length === 12 && A.toLowerCase() === "content-type")
    e.contentType = t, s ? e.headers[A] = Gr(A, t, s) : e.headers += Gr(A, t);
  else {
    if (A.length === 17 && A.toLowerCase() === "transfer-encoding")
      throw new PA("invalid transfer-encoding header");
    if (A.length === 10 && A.toLowerCase() === "connection") {
      const r = typeof t == "string" ? t.toLowerCase() : null;
      if (r !== "close" && r !== "keep-alive")
        throw new PA("invalid connection header");
      r === "close" && (e.reset = !0);
    } else {
      if (A.length === 10 && A.toLowerCase() === "keep-alive")
        throw new PA("invalid keep-alive header");
      if (A.length === 7 && A.toLowerCase() === "upgrade")
        throw new PA("invalid upgrade header");
      if (A.length === 6 && A.toLowerCase() === "expect")
        throw new Wy("expect header not supported");
      if (Gh.exec(A) === null)
        throw new PA("invalid header key");
      if (Array.isArray(t))
        for (let r = 0; r < t.length; r++)
          s ? e.headers[A] ? e.headers[A] += `,${Gr(A, t[r], s)}` : e.headers[A] = Gr(A, t[r], s) : e.headers += Gr(A, t[r]);
      else
        s ? e.headers[A] = Gr(A, t, s) : e.headers += Gr(A, t);
    }
  }
}
var Ky = Xy;
const jy = xt;
let zy = class extends jy {
  dispatch() {
    throw new Error("not implemented");
  }
  close() {
    throw new Error("not implemented");
  }
  destroy() {
    throw new Error("not implemented");
  }
};
var OQ = zy;
const Aw = OQ, {
  ClientDestroyedError: Lg,
  ClientClosedError: ew,
  InvalidArgumentError: ls
} = qA, { kDestroy: tw, kClose: rw, kDispatch: Tg, kInterceptors: Yr } = zA, hs = Symbol("destroyed"), Eo = Symbol("closed"), Zt = Symbol("onDestroyed"), us = Symbol("onClosed"), cn = Symbol("Intercepted Dispatch");
let sw = class extends Aw {
  constructor() {
    super(), this[hs] = !1, this[Zt] = null, this[Eo] = !1, this[us] = [];
  }
  get destroyed() {
    return this[hs];
  }
  get closed() {
    return this[Eo];
  }
  get interceptors() {
    return this[Yr];
  }
  set interceptors(A) {
    if (A) {
      for (let t = A.length - 1; t >= 0; t--)
        if (typeof this[Yr][t] != "function")
          throw new ls("interceptor must be an function");
    }
    this[Yr] = A;
  }
  close(A) {
    if (A === void 0)
      return new Promise((s, r) => {
        this.close((o, n) => o ? r(o) : s(n));
      });
    if (typeof A != "function")
      throw new ls("invalid callback");
    if (this[hs]) {
      queueMicrotask(() => A(new Lg(), null));
      return;
    }
    if (this[Eo]) {
      this[us] ? this[us].push(A) : queueMicrotask(() => A(null, null));
      return;
    }
    this[Eo] = !0, this[us].push(A);
    const t = () => {
      const s = this[us];
      this[us] = null;
      for (let r = 0; r < s.length; r++)
        s[r](null, null);
    };
    this[rw]().then(() => this.destroy()).then(() => {
      queueMicrotask(t);
    });
  }
  destroy(A, t) {
    if (typeof A == "function" && (t = A, A = null), t === void 0)
      return new Promise((r, o) => {
        this.destroy(A, (n, g) => n ? (
          /* istanbul ignore next: should never error */
          o(n)
        ) : r(g));
      });
    if (typeof t != "function")
      throw new ls("invalid callback");
    if (this[hs]) {
      this[Zt] ? this[Zt].push(t) : queueMicrotask(() => t(null, null));
      return;
    }
    A || (A = new Lg()), this[hs] = !0, this[Zt] = this[Zt] || [], this[Zt].push(t);
    const s = () => {
      const r = this[Zt];
      this[Zt] = null;
      for (let o = 0; o < r.length; o++)
        r[o](null, null);
    };
    this[tw](A).then(() => {
      queueMicrotask(s);
    });
  }
  [cn](A, t) {
    if (!this[Yr] || this[Yr].length === 0)
      return this[cn] = this[Tg], this[Tg](A, t);
    let s = this[Tg].bind(this);
    for (let r = this[Yr].length - 1; r >= 0; r--)
      s = this[Yr][r](s);
    return this[cn] = s, s(A, t);
  }
  dispatch(A, t) {
    if (!t || typeof t != "object")
      throw new ls("handler must be an object");
    try {
      if (!A || typeof A != "object")
        throw new ls("opts must be an object.");
      if (this[hs] || this[Zt])
        throw new Lg();
      if (this[Eo])
        throw new ew();
      return this[cn](A, t);
    } catch (s) {
      if (typeof t.onError != "function")
        throw new ls("invalid onError method");
      return t.onError(s), !1;
    }
  }
};
var Ui = sw;
const ow = Zs, Oc = bA, Jh = JA, { InvalidArgumentError: nw, ConnectTimeoutError: iw } = qA;
let Mg, eQ;
rA.FinalizationRegistry && !process.env.NODE_V8_COVERAGE ? eQ = class {
  constructor(A) {
    this._maxCachedSessions = A, this._sessionCache = /* @__PURE__ */ new Map(), this._sessionRegistry = new rA.FinalizationRegistry((t) => {
      if (this._sessionCache.size < this._maxCachedSessions)
        return;
      const s = this._sessionCache.get(t);
      s !== void 0 && s.deref() === void 0 && this._sessionCache.delete(t);
    });
  }
  get(A) {
    const t = this._sessionCache.get(A);
    return t ? t.deref() : null;
  }
  set(A, t) {
    this._maxCachedSessions !== 0 && (this._sessionCache.set(A, new WeakRef(t)), this._sessionRegistry.register(t, A));
  }
} : eQ = class {
  constructor(A) {
    this._maxCachedSessions = A, this._sessionCache = /* @__PURE__ */ new Map();
  }
  get(A) {
    return this._sessionCache.get(A);
  }
  set(A, t) {
    if (this._maxCachedSessions !== 0) {
      if (this._sessionCache.size >= this._maxCachedSessions) {
        const { value: s } = this._sessionCache.keys().next();
        this._sessionCache.delete(s);
      }
      this._sessionCache.set(A, t);
    }
  }
};
function gw({ allowH2: e, maxCachedSessions: A, socketPath: t, timeout: s, ...r }) {
  if (A != null && (!Number.isInteger(A) || A < 0))
    throw new nw("maxCachedSessions must be a positive integer or zero");
  const o = { path: t, ...r }, n = new eQ(A ?? 100);
  return s = s ?? 1e4, e = e ?? !1, function({ hostname: i, host: E, protocol: a, port: Q, servername: c, localAddress: h, httpSocket: u }, I) {
    let C;
    if (a === "https:") {
      Mg || (Mg = SQ), c = c || o.servername || Jh.getServerName(E) || null;
      const B = c || i, l = n.get(B) || null;
      Oc(B), C = Mg.connect({
        highWaterMark: 16384,
        // TLS in node can't have bigger HWM anyway...
        ...o,
        servername: c,
        session: l,
        localAddress: h,
        // TODO(HTTP/2): Add support for h2c
        ALPNProtocols: e ? ["http/1.1", "h2"] : ["http/1.1"],
        socket: u,
        // upgrade socket connection
        port: Q || 443,
        host: i
      }), C.on("session", function(y) {
        n.set(B, y);
      });
    } else
      Oc(!u, "httpSocket can only be sent on TLS update"), C = ow.connect({
        highWaterMark: 64 * 1024,
        // Same as nodejs fs streams.
        ...o,
        localAddress: h,
        port: Q || 80,
        host: i
      });
    if (o.keepAlive == null || o.keepAlive) {
      const B = o.keepAliveInitialDelay === void 0 ? 6e4 : o.keepAliveInitialDelay;
      C.setKeepAlive(!0, B);
    }
    const f = aw(() => Ew(C), s);
    return C.setNoDelay(!0).once(a === "https:" ? "secureConnect" : "connect", function() {
      if (f(), I) {
        const B = I;
        I = null, B(null, this);
      }
    }).on("error", function(B) {
      if (f(), I) {
        const l = I;
        I = null, l(B);
      }
    }), C;
  };
}
function aw(e, A) {
  if (!A)
    return () => {
    };
  let t = null, s = null;
  const r = setTimeout(() => {
    t = setImmediate(() => {
      process.platform === "win32" ? s = setImmediate(() => e()) : e();
    });
  }, A);
  return () => {
    clearTimeout(r), clearImmediate(t), clearImmediate(s);
  };
}
function Ew(e) {
  Jh.destroy(e, new iw());
}
var Li = gw, Gg = {}, Qo = {}, Pc;
function Qw() {
  if (Pc) return Qo;
  Pc = 1, Object.defineProperty(Qo, "__esModule", { value: !0 }), Qo.enumToMap = void 0;
  function e(A) {
    const t = {};
    return Object.keys(A).forEach((s) => {
      const r = A[s];
      typeof r == "number" && (t[s] = r);
    }), t;
  }
  return Qo.enumToMap = e, Qo;
}
var Wc;
function cw() {
  return Wc || (Wc = 1, function(e) {
    Object.defineProperty(e, "__esModule", { value: !0 }), e.SPECIAL_HEADERS = e.HEADER_STATE = e.MINOR = e.MAJOR = e.CONNECTION_TOKEN_CHARS = e.HEADER_CHARS = e.TOKEN = e.STRICT_TOKEN = e.HEX = e.URL_CHAR = e.STRICT_URL_CHAR = e.USERINFO_CHARS = e.MARK = e.ALPHANUM = e.NUM = e.HEX_MAP = e.NUM_MAP = e.ALPHA = e.FINISH = e.H_METHOD_MAP = e.METHOD_MAP = e.METHODS_RTSP = e.METHODS_ICE = e.METHODS_HTTP = e.METHODS = e.LENIENT_FLAGS = e.FLAGS = e.TYPE = e.ERROR = void 0;
    const A = Qw();
    (function(r) {
      r[r.OK = 0] = "OK", r[r.INTERNAL = 1] = "INTERNAL", r[r.STRICT = 2] = "STRICT", r[r.LF_EXPECTED = 3] = "LF_EXPECTED", r[r.UNEXPECTED_CONTENT_LENGTH = 4] = "UNEXPECTED_CONTENT_LENGTH", r[r.CLOSED_CONNECTION = 5] = "CLOSED_CONNECTION", r[r.INVALID_METHOD = 6] = "INVALID_METHOD", r[r.INVALID_URL = 7] = "INVALID_URL", r[r.INVALID_CONSTANT = 8] = "INVALID_CONSTANT", r[r.INVALID_VERSION = 9] = "INVALID_VERSION", r[r.INVALID_HEADER_TOKEN = 10] = "INVALID_HEADER_TOKEN", r[r.INVALID_CONTENT_LENGTH = 11] = "INVALID_CONTENT_LENGTH", r[r.INVALID_CHUNK_SIZE = 12] = "INVALID_CHUNK_SIZE", r[r.INVALID_STATUS = 13] = "INVALID_STATUS", r[r.INVALID_EOF_STATE = 14] = "INVALID_EOF_STATE", r[r.INVALID_TRANSFER_ENCODING = 15] = "INVALID_TRANSFER_ENCODING", r[r.CB_MESSAGE_BEGIN = 16] = "CB_MESSAGE_BEGIN", r[r.CB_HEADERS_COMPLETE = 17] = "CB_HEADERS_COMPLETE", r[r.CB_MESSAGE_COMPLETE = 18] = "CB_MESSAGE_COMPLETE", r[r.CB_CHUNK_HEADER = 19] = "CB_CHUNK_HEADER", r[r.CB_CHUNK_COMPLETE = 20] = "CB_CHUNK_COMPLETE", r[r.PAUSED = 21] = "PAUSED", r[r.PAUSED_UPGRADE = 22] = "PAUSED_UPGRADE", r[r.PAUSED_H2_UPGRADE = 23] = "PAUSED_H2_UPGRADE", r[r.USER = 24] = "USER";
    })(e.ERROR || (e.ERROR = {})), function(r) {
      r[r.BOTH = 0] = "BOTH", r[r.REQUEST = 1] = "REQUEST", r[r.RESPONSE = 2] = "RESPONSE";
    }(e.TYPE || (e.TYPE = {})), function(r) {
      r[r.CONNECTION_KEEP_ALIVE = 1] = "CONNECTION_KEEP_ALIVE", r[r.CONNECTION_CLOSE = 2] = "CONNECTION_CLOSE", r[r.CONNECTION_UPGRADE = 4] = "CONNECTION_UPGRADE", r[r.CHUNKED = 8] = "CHUNKED", r[r.UPGRADE = 16] = "UPGRADE", r[r.CONTENT_LENGTH = 32] = "CONTENT_LENGTH", r[r.SKIPBODY = 64] = "SKIPBODY", r[r.TRAILING = 128] = "TRAILING", r[r.TRANSFER_ENCODING = 512] = "TRANSFER_ENCODING";
    }(e.FLAGS || (e.FLAGS = {})), function(r) {
      r[r.HEADERS = 1] = "HEADERS", r[r.CHUNKED_LENGTH = 2] = "CHUNKED_LENGTH", r[r.KEEP_ALIVE = 4] = "KEEP_ALIVE";
    }(e.LENIENT_FLAGS || (e.LENIENT_FLAGS = {}));
    var t;
    (function(r) {
      r[r.DELETE = 0] = "DELETE", r[r.GET = 1] = "GET", r[r.HEAD = 2] = "HEAD", r[r.POST = 3] = "POST", r[r.PUT = 4] = "PUT", r[r.CONNECT = 5] = "CONNECT", r[r.OPTIONS = 6] = "OPTIONS", r[r.TRACE = 7] = "TRACE", r[r.COPY = 8] = "COPY", r[r.LOCK = 9] = "LOCK", r[r.MKCOL = 10] = "MKCOL", r[r.MOVE = 11] = "MOVE", r[r.PROPFIND = 12] = "PROPFIND", r[r.PROPPATCH = 13] = "PROPPATCH", r[r.SEARCH = 14] = "SEARCH", r[r.UNLOCK = 15] = "UNLOCK", r[r.BIND = 16] = "BIND", r[r.REBIND = 17] = "REBIND", r[r.UNBIND = 18] = "UNBIND", r[r.ACL = 19] = "ACL", r[r.REPORT = 20] = "REPORT", r[r.MKACTIVITY = 21] = "MKACTIVITY", r[r.CHECKOUT = 22] = "CHECKOUT", r[r.MERGE = 23] = "MERGE", r[r["M-SEARCH"] = 24] = "M-SEARCH", r[r.NOTIFY = 25] = "NOTIFY", r[r.SUBSCRIBE = 26] = "SUBSCRIBE", r[r.UNSUBSCRIBE = 27] = "UNSUBSCRIBE", r[r.PATCH = 28] = "PATCH", r[r.PURGE = 29] = "PURGE", r[r.MKCALENDAR = 30] = "MKCALENDAR", r[r.LINK = 31] = "LINK", r[r.UNLINK = 32] = "UNLINK", r[r.SOURCE = 33] = "SOURCE", r[r.PRI = 34] = "PRI", r[r.DESCRIBE = 35] = "DESCRIBE", r[r.ANNOUNCE = 36] = "ANNOUNCE", r[r.SETUP = 37] = "SETUP", r[r.PLAY = 38] = "PLAY", r[r.PAUSE = 39] = "PAUSE", r[r.TEARDOWN = 40] = "TEARDOWN", r[r.GET_PARAMETER = 41] = "GET_PARAMETER", r[r.SET_PARAMETER = 42] = "SET_PARAMETER", r[r.REDIRECT = 43] = "REDIRECT", r[r.RECORD = 44] = "RECORD", r[r.FLUSH = 45] = "FLUSH";
    })(t = e.METHODS || (e.METHODS = {})), e.METHODS_HTTP = [
      t.DELETE,
      t.GET,
      t.HEAD,
      t.POST,
      t.PUT,
      t.CONNECT,
      t.OPTIONS,
      t.TRACE,
      t.COPY,
      t.LOCK,
      t.MKCOL,
      t.MOVE,
      t.PROPFIND,
      t.PROPPATCH,
      t.SEARCH,
      t.UNLOCK,
      t.BIND,
      t.REBIND,
      t.UNBIND,
      t.ACL,
      t.REPORT,
      t.MKACTIVITY,
      t.CHECKOUT,
      t.MERGE,
      t["M-SEARCH"],
      t.NOTIFY,
      t.SUBSCRIBE,
      t.UNSUBSCRIBE,
      t.PATCH,
      t.PURGE,
      t.MKCALENDAR,
      t.LINK,
      t.UNLINK,
      t.PRI,
      // TODO(indutny): should we allow it with HTTP?
      t.SOURCE
    ], e.METHODS_ICE = [
      t.SOURCE
    ], e.METHODS_RTSP = [
      t.OPTIONS,
      t.DESCRIBE,
      t.ANNOUNCE,
      t.SETUP,
      t.PLAY,
      t.PAUSE,
      t.TEARDOWN,
      t.GET_PARAMETER,
      t.SET_PARAMETER,
      t.REDIRECT,
      t.RECORD,
      t.FLUSH,
      // For AirPlay
      t.GET,
      t.POST
    ], e.METHOD_MAP = A.enumToMap(t), e.H_METHOD_MAP = {}, Object.keys(e.METHOD_MAP).forEach((r) => {
      /^H/.test(r) && (e.H_METHOD_MAP[r] = e.METHOD_MAP[r]);
    }), function(r) {
      r[r.SAFE = 0] = "SAFE", r[r.SAFE_WITH_CB = 1] = "SAFE_WITH_CB", r[r.UNSAFE = 2] = "UNSAFE";
    }(e.FINISH || (e.FINISH = {})), e.ALPHA = [];
    for (let r = 65; r <= 90; r++)
      e.ALPHA.push(String.fromCharCode(r)), e.ALPHA.push(String.fromCharCode(r + 32));
    e.NUM_MAP = {
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      8: 8,
      9: 9
    }, e.HEX_MAP = {
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      8: 8,
      9: 9,
      A: 10,
      B: 11,
      C: 12,
      D: 13,
      E: 14,
      F: 15,
      a: 10,
      b: 11,
      c: 12,
      d: 13,
      e: 14,
      f: 15
    }, e.NUM = [
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9"
    ], e.ALPHANUM = e.ALPHA.concat(e.NUM), e.MARK = ["-", "_", ".", "!", "~", "*", "'", "(", ")"], e.USERINFO_CHARS = e.ALPHANUM.concat(e.MARK).concat(["%", ";", ":", "&", "=", "+", "$", ","]), e.STRICT_URL_CHAR = [
      "!",
      '"',
      "$",
      "%",
      "&",
      "'",
      "(",
      ")",
      "*",
      "+",
      ",",
      "-",
      ".",
      "/",
      ":",
      ";",
      "<",
      "=",
      ">",
      "@",
      "[",
      "\\",
      "]",
      "^",
      "_",
      "`",
      "{",
      "|",
      "}",
      "~"
    ].concat(e.ALPHANUM), e.URL_CHAR = e.STRICT_URL_CHAR.concat(["	", "\f"]);
    for (let r = 128; r <= 255; r++)
      e.URL_CHAR.push(r);
    e.HEX = e.NUM.concat(["a", "b", "c", "d", "e", "f", "A", "B", "C", "D", "E", "F"]), e.STRICT_TOKEN = [
      "!",
      "#",
      "$",
      "%",
      "&",
      "'",
      "*",
      "+",
      "-",
      ".",
      "^",
      "_",
      "`",
      "|",
      "~"
    ].concat(e.ALPHANUM), e.TOKEN = e.STRICT_TOKEN.concat([" "]), e.HEADER_CHARS = ["	"];
    for (let r = 32; r <= 255; r++)
      r !== 127 && e.HEADER_CHARS.push(r);
    e.CONNECTION_TOKEN_CHARS = e.HEADER_CHARS.filter((r) => r !== 44), e.MAJOR = e.NUM_MAP, e.MINOR = e.MAJOR;
    var s;
    (function(r) {
      r[r.GENERAL = 0] = "GENERAL", r[r.CONNECTION = 1] = "CONNECTION", r[r.CONTENT_LENGTH = 2] = "CONTENT_LENGTH", r[r.TRANSFER_ENCODING = 3] = "TRANSFER_ENCODING", r[r.UPGRADE = 4] = "UPGRADE", r[r.CONNECTION_KEEP_ALIVE = 5] = "CONNECTION_KEEP_ALIVE", r[r.CONNECTION_CLOSE = 6] = "CONNECTION_CLOSE", r[r.CONNECTION_UPGRADE = 7] = "CONNECTION_UPGRADE", r[r.TRANSFER_ENCODING_CHUNKED = 8] = "TRANSFER_ENCODING_CHUNKED";
    })(s = e.HEADER_STATE || (e.HEADER_STATE = {})), e.SPECIAL_HEADERS = {
      connection: s.CONNECTION,
      "content-length": s.CONTENT_LENGTH,
      "proxy-connection": s.CONNECTION,
      "transfer-encoding": s.TRANSFER_ENCODING,
      upgrade: s.UPGRADE
    };
  }(Gg)), Gg;
}
const ds = JA, { kBodyUsed: Jo } = zA, PQ = bA, { InvalidArgumentError: Cw } = qA, Bw = xt, Iw = [300, 301, 302, 303, 307, 308], qc = Symbol("body");
let _c = class {
  constructor(A) {
    this[qc] = A, this[Jo] = !1;
  }
  async *[Symbol.asyncIterator]() {
    PQ(!this[Jo], "disturbed"), this[Jo] = !0, yield* this[qc];
  }
}, lw = class {
  constructor(A, t, s, r) {
    if (t != null && (!Number.isInteger(t) || t < 0))
      throw new Cw("maxRedirections must be a positive number");
    ds.validateHandler(r, s.method, s.upgrade), this.dispatch = A, this.location = null, this.abort = null, this.opts = { ...s, maxRedirections: 0 }, this.maxRedirections = t, this.handler = r, this.history = [], ds.isStream(this.opts.body) ? (ds.bodyLength(this.opts.body) === 0 && this.opts.body.on("data", function() {
      PQ(!1);
    }), typeof this.opts.body.readableDidRead != "boolean" && (this.opts.body[Jo] = !1, Bw.prototype.on.call(this.opts.body, "data", function() {
      this[Jo] = !0;
    }))) : this.opts.body && typeof this.opts.body.pipeTo == "function" ? this.opts.body = new _c(this.opts.body) : this.opts.body && typeof this.opts.body != "string" && !ArrayBuffer.isView(this.opts.body) && ds.isIterable(this.opts.body) && (this.opts.body = new _c(this.opts.body));
  }
  onConnect(A) {
    this.abort = A, this.handler.onConnect(A, { history: this.history });
  }
  onUpgrade(A, t, s) {
    this.handler.onUpgrade(A, t, s);
  }
  onError(A) {
    this.handler.onError(A);
  }
  onHeaders(A, t, s, r) {
    if (this.location = this.history.length >= this.maxRedirections || ds.isDisturbed(this.opts.body) ? null : hw(A, t), this.opts.origin && this.history.push(new URL(this.opts.path, this.opts.origin)), !this.location)
      return this.handler.onHeaders(A, t, s, r);
    const { origin: o, pathname: n, search: g } = ds.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin))), i = g ? `${n}${g}` : n;
    this.opts.headers = uw(this.opts.headers, A === 303, this.opts.origin !== o), this.opts.path = i, this.opts.origin = o, this.opts.maxRedirections = 0, this.opts.query = null, A === 303 && this.opts.method !== "HEAD" && (this.opts.method = "GET", this.opts.body = null);
  }
  onData(A) {
    if (!this.location) return this.handler.onData(A);
  }
  onComplete(A) {
    this.location ? (this.location = null, this.abort = null, this.dispatch(this.opts, this)) : this.handler.onComplete(A);
  }
  onBodySent(A) {
    this.handler.onBodySent && this.handler.onBodySent(A);
  }
};
function hw(e, A) {
  if (Iw.indexOf(e) === -1)
    return null;
  for (let t = 0; t < A.length; t += 2)
    if (A[t].toString().toLowerCase() === "location")
      return A[t + 1];
}
function $c(e, A, t) {
  return e.length === 4 && e.toString().toLowerCase() === "host" || A && e.toString().toLowerCase().indexOf("content-") === 0 || t && e.length === 13 && e.toString().toLowerCase() === "authorization" || t && e.length === 6 && e.toString().toLowerCase() === "cookie";
}
function uw(e, A, t) {
  const s = [];
  if (Array.isArray(e))
    for (let r = 0; r < e.length; r += 2)
      $c(e[r], A, t) || s.push(e[r], e[r + 1]);
  else if (e && typeof e == "object")
    for (const r of Object.keys(e))
      $c(r, A, t) || s.push(r, e[r]);
  else
    PQ(e == null, "headers must be an object or an array");
  return s;
}
var vh = lw;
const dw = vh;
function fw({ maxRedirections: e }) {
  return (A) => function(s, r) {
    const { maxRedirections: o = e } = s;
    if (!o)
      return A(s, r);
    const n = new dw(A, o, s, r);
    return s = { ...s, maxRedirections: 0 }, A(s, n);
  };
}
var WQ = fw, Yg, Zc;
function Xc() {
  return Zc || (Zc = 1, Yg = ""), Yg;
}
var Jg, Kc;
function pw() {
  return Kc || (Kc = 1, Jg = "AGFzbQEAAAABMAhgAX8Bf2ADf39/AX9gBH9/f38Bf2AAAGADf39/AGABfwBgAn9/AGAGf39/f39/AALLAQgDZW52GHdhc21fb25faGVhZGVyc19jb21wbGV0ZQACA2VudhV3YXNtX29uX21lc3NhZ2VfYmVnaW4AAANlbnYLd2FzbV9vbl91cmwAAQNlbnYOd2FzbV9vbl9zdGF0dXMAAQNlbnYUd2FzbV9vbl9oZWFkZXJfZmllbGQAAQNlbnYUd2FzbV9vbl9oZWFkZXJfdmFsdWUAAQNlbnYMd2FzbV9vbl9ib2R5AAEDZW52GHdhc21fb25fbWVzc2FnZV9jb21wbGV0ZQAAA0ZFAwMEAAAFAAAAAAAABQEFAAUFBQAABgAAAAAGBgYGAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQABAAABAQcAAAUFAwABBAUBcAESEgUDAQACBggBfwFBgNQECwfRBSIGbWVtb3J5AgALX2luaXRpYWxpemUACRlfX2luZGlyZWN0X2Z1bmN0aW9uX3RhYmxlAQALbGxodHRwX2luaXQAChhsbGh0dHBfc2hvdWxkX2tlZXBfYWxpdmUAQQxsbGh0dHBfYWxsb2MADAZtYWxsb2MARgtsbGh0dHBfZnJlZQANBGZyZWUASA9sbGh0dHBfZ2V0X3R5cGUADhVsbGh0dHBfZ2V0X2h0dHBfbWFqb3IADxVsbGh0dHBfZ2V0X2h0dHBfbWlub3IAEBFsbGh0dHBfZ2V0X21ldGhvZAARFmxsaHR0cF9nZXRfc3RhdHVzX2NvZGUAEhJsbGh0dHBfZ2V0X3VwZ3JhZGUAEwxsbGh0dHBfcmVzZXQAFA5sbGh0dHBfZXhlY3V0ZQAVFGxsaHR0cF9zZXR0aW5nc19pbml0ABYNbGxodHRwX2ZpbmlzaAAXDGxsaHR0cF9wYXVzZQAYDWxsaHR0cF9yZXN1bWUAGRtsbGh0dHBfcmVzdW1lX2FmdGVyX3VwZ3JhZGUAGhBsbGh0dHBfZ2V0X2Vycm5vABsXbGxodHRwX2dldF9lcnJvcl9yZWFzb24AHBdsbGh0dHBfc2V0X2Vycm9yX3JlYXNvbgAdFGxsaHR0cF9nZXRfZXJyb3JfcG9zAB4RbGxodHRwX2Vycm5vX25hbWUAHxJsbGh0dHBfbWV0aG9kX25hbWUAIBJs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IAH9CwMAIABBMGogAf0LAwAgAEEgaiAB/QsDACAAQd0BNgIcQQALewEBfwJAIAAoAgwiAw0AAkAgACgCBEUNACAAIAE2AgQLAkAgACABIAIQxICAgAAiAw0AIAAoAgwPCyAAIAM2AhxBACEDIAAoAgQiAUUNACAAIAEgAiAAKAIIEYGAgIAAACIBRQ0AIAAgAjYCFCAAIAE2AgwgASEDCyADC+TzAQMOfwN+BH8jgICAgABBEGsiAySAgICAACABIQQgASEFIAEhBiABIQcgASEIIAEhCSABIQogASELIAEhDCABIQ0gASEOIAEhDwJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCAAKAIcIhBBf2oO3QHaAQHZAQIDBAUGBwgJCgsMDQ7YAQ8Q1wEREtYBExQVFhcYGRob4AHfARwdHtUBHyAhIiMkJdQBJicoKSorLNMB0gEtLtEB0AEvMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUbbAUdISUrPAc4BS80BTMwBTU5PUFFSU1RVVldYWVpbXF1eX2BhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ent8fX5/gAGBAYIBgwGEAYUBhgGHAYgBiQGKAYsBjAGNAY4BjwGQAZEB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QAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIBAOxwEAAQID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YWNrIGVycm9yAGBvbl9jaHVua19leHRlbnNpb25fdmFsdWVgIGNhbGxiYWNrIGVycm9yAGBvbl9zdGF0dXNfY29tcGxldGVgIGNhbGxiYWNrIGVycm9yAGBvbl92ZXJzaW9uX2NvbXBsZXRlYCBjYWxsYmFjayBlcnJvcgBgb25fdXJsX2NvbXBsZXRlYCBjYWxsYmFjayBlcnJvcgBgb25fY2h1bmtfY29tcGxldGVgIGNhbGxiYWNrIGVycm9yAGBvbl9oZWFkZXJfdmFsdWVfY29tcGxldGVgIGNhbGxiYWNrIGVycm9yAGBvbl9tZXNzYWdlX2NvbXBsZXRlYCBjYWxsYmFjayBlcnJvcgBgb25fbWV0aG9kX2NvbXBsZXRlYCBjYWxsYmFjayBlcnJvcgBgb25faGVhZGVyX2ZpZWxkX2NvbXBsZXRlYCBjYWxsYmFjayBlcnJvcgBgb25fY2h1bmtfZXh0ZW5zaW9uX25hbWVgIGNhbGxiYWNrIGVycm9yAFVuZXhwZWN0ZWQgY2hhciBpbiB1cmwgc2VydmVyAEludmFsaWQgaGVhZGVyIHZhbHVlIGNoYXIASW52YWxpZCBoZWFkZXIgZmllbGQgY2hhcgBTcGFuIGNhbGxiYWNrIGVycm9yIGluIG9uX3ZlcnNpb24ASW52YWxpZCBtaW5vciB2ZXJzaW9uAEludmFsaWQgbWFqb3IgdmVyc2lvbgBFeHBlY3RlZCBzcGFjZSBhZnRlciB2ZXJzaW9uAEV4cGVjdGVkIENSTEYgYWZ0ZXIgdmVyc2lvbgBJbnZhbGlkIEhUVFAgdmVyc2lvbgBJbnZhbGlkIGhlYWRlciB0b2tlbgBTcGFuIGNhbGxiYWNrIGVycm9yIGluIG9uX3VybABJbnZhbGlkIGNoYXJhY3RlcnMgaW4gdXJsAFVuZXhwZWN0ZWQgc3RhcnQgY2hhciBpbiB1cmwARG91YmxlIEAgaW4gdXJsAEVtcHR5IENvbnRlbnQtTGVuZ3RoAEludmFsaWQgY2hhcmFjdGVyIGluIENvbnRlbnQtTGVuZ3RoAER1cGxpY2F0ZSBDb250ZW50LUxlbmd0aABJbnZhbGlkIGNoYXIgaW4gdXJsIHBhdGgAQ29udGVudC1MZW5ndGggY2FuJ3QgYmUgcHJlc2VudCB3aXRoIFRyYW5zZmVyLUVuY29kaW5nAEludmFsaWQgY2hhcmFjdGVyIGluIGNodW5rIHNpemUAU3BhbiBjYWxsYmFjayBlcnJvciBpbiBvbl9oZWFkZXJfdmFsdWUAU3BhbiBjYWxsYmFjayBlcnJvciBpbiBvbl9jaHVua19leHRlbnNpb25fdmFsdWUASW52YWxpZCBjaGFyYWN0ZXIgaW4gY2h1bmsgZXh0ZW5zaW9ucyB2YWx1ZQBNaXNzaW5nIGV4cGVjdGVkIExGIGFmdGVyIGhlYWRlciB2YWx1ZQBJbnZhbGlkIGBUcmFuc2Zlci1FbmNvZGluZ2AgaGVhZGVyIHZhbHVlAEludmFsaWQgY2hhcmFjdGVyIGluIGNodW5rIGV4dGVuc2lvbnMgcXVvdGUgdmFsdWUASW52YWxpZCBjaGFyYWN0ZXIgaW4gY2h1bmsgZXh0ZW5zaW9ucyBxdW90ZWQgdmFsdWUAUGF1c2VkIGJ5IG9uX2hlYWRlcnNfY29tcGxldGUASW52YWxpZCBFT0Ygc3RhdGUAb25fcmVzZXQgcGF1c2UAb25fY2h1bmtfaGVhZGVyIHBhdXNlAG9uX21lc3NhZ2VfYmVnaW4gcGF1c2UAb25fY2h1bmtfZXh0ZW5zaW9uX3ZhbHVlIHBhdXNlAG9uX3N0YXR1c19jb21wbGV0ZSBwYXVzZQBvbl92ZXJzaW9uX2NvbXBsZXRlIHBhdXNlAG9uX3VybF9jb21wbGV0ZSBwYXVzZQBvbl9jaHVua19jb21wbGV0ZSBwYXVzZQBvbl9oZWFkZXJfdmFsdWVfY29tcGxldGUgcGF1c2UAb25fbWVzc2FnZV9jb21wbGV0ZSBwYXVzZQBvbl9tZXRob2RfY29tcGxldGUgcGF1c2UAb25faGVhZGVyX2ZpZWxkX2NvbXBsZXRlIHBhdXNlAG9uX2NodW5rX2V4dGVuc2lvbl9uYW1lIHBhdXNlAFVuZXhwZWN0ZWQgc3BhY2UgYWZ0ZXIgc3RhcnQgbGluZQBTcGFuIGNhbGxiYWNrIGVycm9yIGluIG9uX2NodW5rX2V4dGVuc2lvbl9uYW1lAEludmFsaWQgY2hhcmFjdGVyIGluIGNodW5rIGV4dGVuc2lvbnMgbmFtZQBQYXVzZSBvbiBDT05ORUNUL1VwZ3JhZGUAUGF1c2Ugb24gUFJJL1VwZ3JhZGUARXhwZWN0ZWQgSFRUUC8yIENvbm5lY3Rpb24gUHJlZmFjZQBTcGFuIGNhbGxiYWNrIGVycm9yIGluIG9uX21ldGhvZABFeHBlY3RlZCBzcGFjZSBhZnRlciBtZXRob2QAU3BhbiBjYWxsYmFjayBlcnJvciBpbiBvbl9oZWFkZXJfZmllbGQAUGF1c2VkAEludmFsaWQgd29yZCBlbmNvdW50ZXJlZABJbnZhbGlkIG1ldGhvZCBlbmNvdW50ZXJlZABVbmV4cGVjdGVkIGNoYXIgaW4gdXJsIHNjaGVtYQBSZXF1ZXN0IGhhcyBpbnZhbGlkIGBUcmFuc2Zlci1FbmNvZGluZ2AAU1dJVENIX1BST1hZAFVTRV9QUk9YWQBNS0FDVElWSVRZAFVOUFJPQ0VTU0FCTEVfRU5USVRZAENPUFkATU9WRURfUEVSTUFORU5UTFkAVE9PX0VBUkxZAE5PVElGWQBGQUlMRURfREVQRU5ERU5DWQBCQURfR0FURVdBWQBQTEFZAFBVVABDSEVDS09VVABHQVRFV0FZX1RJTUVPVVQAUkVRVUVTVF9USU1FT1VUAE5FVFdPUktfQ09OTkVDVF9USU1FT1VUAENPTk5FQ1RJT05fVElNRU9VVABMT0dJTl9USU1FT1VUAE5FVFdPUktfUkVBRF9USU1FT1VUAFBPU1QATUlTRElSRUNURURfUkVRVUVTVABDTElFTlRfQ0xPU0VEX1JFUVVFU1QAQ0xJRU5UX0NMT1NFRF9MT0FEX0JBTEFOQ0VEX1JFUVVFU1QAQkFEX1JFUVVFU1QASFRUUF9SRVFVRVNUX1NFTlRfVE9fSFRUUFNfUE9SVABSRVBPUlQASU1fQV9URUFQT1QAUkVTRVRfQ09OVEVOVABOT19DT05URU5UAFBBUlRJQUxfQ09OVEVOVABIUEVfSU5WQUxJRF9DT05TVEFOVABIUEVfQ0JfUkVTRVQAR0VUAEhQRV9TVFJJQ1QAQ09ORkxJQ1QAVEVNUE9SQVJZX1JFRElSRUNUAFBFUk1BTkVOVF9SRURJUkVDVABDT05ORUNUAE1VTFRJX1NUQVRVUwBIUEVfSU5WQUxJRF9TVEFUVVMAVE9PX01BTllfUkVRVUVTVFMARUFSTFlfSElOVFMAVU5BVkFJTEFCTEVfRk9SX0xFR0FMX1JFQVNPTlMAT1BUSU9OUwBTV0lUQ0hJTkdfUFJPVE9DT0xTAFZBUklBTlRfQUxTT19ORUdPVElBVEVTAE1VTFRJUExFX0NIT0lDRVMASU5URVJOQUxfU0VSVkVSX0VSUk9SAFdFQl9TRVJWRVJfVU5LTk9XTl9FUlJPUgBSQUlMR1VOX0VSUk9SAElERU5USVRZX1BST1ZJREVSX0FVVEhFTlRJQ0FUSU9OX0VSUk9SAFNTTF9DRVJUSUZJQ0FURV9FUlJPUgBJTlZBTElEX1hfRk9SV0FSREVEX0ZPUgBTRVRfUEFSQU1FVEVSAEdFVF9QQVJBTUVURVIASFBFX1VTRVIAU0VFX09USEVSAEhQRV9DQl9DSFVOS19IRUFERVIATUtDQUxFTkRBUgBTRVRVUABXRUJfU0VSVkVSX0lTX0RPV04AVEVBUkRPV04ASFBFX0NMT1NFRF9DT05ORUNUSU9OAEhFVVJJU1RJQ19FWFBJUkFUSU9OAERJU0NPTk5FQ1RFRF9PUEVSQVRJT04ATk9OX0FVVEhPUklUQVRJVkVfSU5GT1JNQVRJT04ASFBFX0lOVkFMSURfVkVSU0lPTgBIUEVfQ0JfTUVTU0FHRV9CRUdJTgBTSVRFX0lTX0ZST1pFTgBIUEVfSU5WQUxJRF9IRUFERVJfVE9LRU4ASU5WQUxJRF9UT0tFTgBGT1JCSURERU4ARU5IQU5DRV9ZT1VSX0NBTE0ASFBFX0lOVkFMSURfVVJMAEJMT0NLRURfQllfUEFSRU5UQUxfQ09OVFJPTABNS0NPTABBQ0wASFBFX0lOVEVSTkFMAFJFUVVFU1RfSEVBREVSX0ZJRUxEU19UT09fTEFSR0VfVU5PRkZJQ0lBTABIUEVfT0sAVU5MSU5LAFVOTE9DSwBQUkkAUkVUUllfV0lUSABIUEVfSU5WQUxJRF9DT05URU5UX0xFTkdUSABIUEVfVU5FWFBFQ1RFRF9DT05URU5UX0xFTkdUSABGTFVTSABQUk9QUEFUQ0gATS1TRUFSQ0gAVVJJX1RPT19MT05HAFBST0NFU1NJTkcATUlTQ0VMTEFORU9VU19QRVJTSVNURU5UX1dBUk5JTkcATUlTQ0VMTEFORU9VU19XQVJOSU5HAEhQRV9JTlZBTElEX1RSQU5TRkVSX0VOQ09ESU5HAEV4cGVjdGVkIENSTEYASFBFX0lOVkFMSURfQ0hVTktfU0laRQBNT1ZFAENPTlRJTlVFAEhQRV9DQl9TVEFUVVNfQ09NUExFVEUASFBFX0NCX0hFQURFUlNfQ09NUExFVEUASFBFX0NCX1ZFUlNJT05fQ09NUExFVEUASFBFX0NCX1VSTF9DT01QTEVURQBIUEVfQ0JfQ0hVTktfQ09NUExFVEUASFBFX0NCX0hFQURFUl9WQUxVRV9DT01QTEVURQBIUEVfQ0JfQ0hVTktfRVhURU5TSU9OX1ZBTFVFX0NPTVBMRVRFAEhQRV9DQl9DSFVOS19FWFRFTlNJT05fTkFNRV9DT01QTEVURQBIUEVfQ0JfTUVTU0FHRV9DT01QTEVURQBIUEVfQ0JfTUVUSE9EX0NPTVBMRVRFAEhQRV9DQl9IRUFERVJfRklFTERfQ09NUExFVEUAREVMRVRFAEhQRV9JTlZBTElEX0VPRl9TVEFURQBJTlZBTElEX1NTTF9DRVJUSUZJQ0FURQBQQVVTRQBOT19SRVNQT05TRQBVTlNVUFBPUlRFRF9NRURJQV9UWVBFAEdPTkUATk9UX0FDQ0VQVEFCTEUAU0VSVklDRV9VTkFWQUlMQUJMRQBSQU5HRV9OT1RfU0FUSVNGSUFCTEUAT1JJR0lOX0lTX1VOUkVBQ0hBQkxFAFJFU1BPTlNFX0lTX1NUQUxFAFBVUkdFAE1FUkdFAFJFUVVFU1RfSEVBREVSX0ZJRUxEU19UT09fTEFSR0UAUkVRVUVTVF9IRUFERVJfVE9PX0xBUkdFAFBBWUxPQURfVE9PX0xBUkdFAElOU1VGRklDSUVOVF9TVE9SQUdFAEhQRV9QQVVTRURfVVBHUkFERQBIUEVfUEFVU0VEX0gyX1VQR1JBREUAU09VUkNFAEFOTk9VTkNFAFRSQUNFAEhQRV9VTkVYUEVDVEVEX1NQQUNFAERFU0NSSUJFAFVOU1VCU0NSSUJFAFJFQ09SRABIUEVfSU5WQUxJRF9NRVRIT0QATk9UX0ZPVU5EAFBST1BGSU5EAFVOQklORABSRUJJTkQAVU5BVVRIT1JJWkVEAE1FVEhPRF9OT1RfQUxMT1dFRABIVFRQX1ZFUlNJT05fTk9UX1NVUFBPUlRFRABBTFJFQURZX1JFUE9SVEVEAEFDQ0VQVEVEAE5PVF9JTVBMRU1FTlRFRABMT09QX0RFVEVDVEVEAEhQRV9DUl9FWFBFQ1RFRABIUEVfTEZfRVhQRUNURUQAQ1JFQVRFRABJTV9VU0VEAEhQRV9QQVVTRUQAVElNRU9VVF9PQ0NVUkVEAFBBWU1FTlRfUkVRVUlSRUQAUFJFQ09ORElUSU9OX1JFUVVJUkVEAFBST1hZX0FVVEhFTlRJQ0FUSU9OX1JFUVVJUkVEAE5FVFdPUktfQVVUSEVOVElDQVRJT05fUkVRVUlSRUQATEVOR1RIX1JFUVVJUkVEAFNTTF9DRVJUSUZJQ0FURV9SRVFVSVJFRABVUEdSQURFX1JFUVVJUkVEAFBBR0VfRVhQSVJFRABQUkVDT05ESVRJT05fRkFJTEVEAEVYUEVDVEFUSU9OX0ZBSUxFRABSRVZBTElEQVRJT05fRkFJTEVEAFNTTF9IQU5EU0hBS0VfRkFJTEVEAExPQ0tFRABUUkFOU0ZPUk1BVElPTl9BUFBMSUVEAE5PVF9NT0RJRklFRABOT1RfRVhURU5ERUQAQkFORFdJRFRIX0xJTUlUX0VYQ0VFREVEAFNJVEVfSVNfT1ZFUkxPQURFRABIRUFEAEV4cGVjdGVkIEhUVFAvAABeEwAAJhMAADAQAADwFwAAnRMAABUSAAA5FwAA8BIAAAoQAAB1EgAArRIAAIITAABPFAAAfxAAAKAVAAAjFAAAiRIAAIsUAABNFQAA1BEAAM8UAAAQGAAAyRYAANwWAADBEQAA4BcAALsUAAB0FAAAfBUAAOUUAAAIFwAAHxAAAGUVAACjFAAAKBUAAAIVAACZFQAALBAAAIsZAABPDwAA1A4AAGoQAADOEAAAAhcAAIkOAABuEwAAHBMAAGYUAABWFwAAwRMAAM0TAABsEwAAaBcAAGYXAABfFwAAIhMAAM4PAABpDgAA2A4AAGMWAADLEwAAqg4AACgXAAAmFwAAxRMAAF0WAADoEQAAZxMAAGUTAADyFgAAcxMAAB0XAAD5FgAA8xEAAM8OAADOFQAADBIAALMRAAClEQAAYRAAADIXAAC7EwAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAgEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgMCAgICAgAAAgIAAgIAAgICAgICAgICAgAEAAAAAAACAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAIAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgICAgIAAAICAAICAAICAgICAgICAgIAAwAEAAAAAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgACAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsb3NlZWVwLWFsaXZlAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQEBAQEBAQEBAgEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQFjaHVua2VkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQABAQEBAQAAAQEAAQEAAQEBAQEBAQEBAQAAAAAAAAABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAAAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGVjdGlvbmVudC1sZW5ndGhvbnJveHktY29ubmVjdGlvbgAAAAAAAAAAAAAAAAAAAHJhbnNmZXItZW5jb2RpbmdwZ3JhZGUNCg0KDQpTTQ0KDQpUVFAvQ0UvVFNQLwAAAAAAAAAAAAAAAAECAAEDAAAAAAAAAAAAAAAAAAAAAAAABAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAAAAAAAAAAAABAgABAwAAAAAAAAAAAAAAAAAAAAAAAAQBAQUBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAAAAAAAAQAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAQEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAAAAAAAAAAAAABAAACAAAAAAAAAAAAAAAAAAAAAAAAAwQAAAQEBAQEBAQEBAQEBQQEBAQEBAQEBAQEBAAEAAYHBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAAQABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAQAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAAAAAAAAAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAEAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAgAAAAACAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwAAAAAAAAMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE5PVU5DRUVDS09VVE5FQ1RFVEVDUklCRUxVU0hFVEVBRFNFQVJDSFJHRUNUSVZJVFlMRU5EQVJWRU9USUZZUFRJT05TQ0hTRUFZU1RBVENIR0VPUkRJUkVDVE9SVFJDSFBBUkFNRVRFUlVSQ0VCU0NSSUJFQVJET1dOQUNFSU5ETktDS1VCU0NSSUJFSFRUUC9BRFRQLw=="), Jg;
}
const QA = bA, Hh = Zs, yw = Vt, { pipeline: ww } = Ye, dA = JA, vg = Jy, tQ = Ky, Dw = Ui, {
  RequestContentLengthMismatchError: er,
  ResponseContentLengthMismatchError: Rw,
  InvalidArgumentError: Ee,
  RequestAbortedError: qQ,
  HeadersTimeoutError: mw,
  HeadersOverflowError: kw,
  SocketError: xs,
  InformationalError: Mt,
  BodyTimeoutError: Fw,
  HTTPParserError: bw,
  ResponseExceededMaxSizeError: Nw,
  ClientDestroyedError: Sw
} = qA, Uw = Li, {
  kUrl: Fe,
  kReset: Pe,
  kServerName: hr,
  kClient: Yt,
  kBusy: rQ,
  kParser: se,
  kConnect: Lw,
  kBlocking: Os,
  kResuming: As,
  kRunning: te,
  kPending: Es,
  kSize: ss,
  kWriting: rr,
  kQueue: ZA,
  kConnected: Tw,
  kConnecting: Ss,
  kNeedDrain: wr,
  kNoRef: Uo,
  kKeepAliveDefaultTimeout: sQ,
  kHostHeader: Vh,
  kPendingIdx: ot,
  kRunningIdx: XA,
  kError: Se,
  kPipelining: Dr,
  kSocket: ne,
  kKeepAliveTimeoutValue: xo,
  kMaxHeadersSize: si,
  kKeepAliveMaxTimeout: xh,
  kKeepAliveTimeoutThreshold: Oh,
  kHeadersTimeout: Ph,
  kBodyTimeout: Wh,
  kStrictContentLength: Oo,
  kConnector: Lo,
  kMaxRedirections: Mw,
  kMaxRequests: Po,
  kCounter: qh,
  kClose: Gw,
  kDestroy: Yw,
  kDispatch: Jw,
  kInterceptors: vw,
  kLocalAddress: To,
  kMaxResponseSize: _h,
  kHTTPConnVersion: Jt,
  // HTTP2
  kHost: $h,
  kHTTP2Session: nt,
  kHTTP2SessionState: ui,
  kHTTP2BuildRequest: Hw,
  kHTTP2CopyHeaders: Vw,
  kHTTP1BuildRequest: xw
} = zA;
let di;
try {
  di = require("http2");
} catch {
  di = { constants: {} };
}
const {
  constants: {
    HTTP2_HEADER_AUTHORITY: Ow,
    HTTP2_HEADER_METHOD: Pw,
    HTTP2_HEADER_PATH: Ww,
    HTTP2_HEADER_SCHEME: qw,
    HTTP2_HEADER_CONTENT_LENGTH: _w,
    HTTP2_HEADER_EXPECT: $w,
    HTTP2_HEADER_STATUS: Zw
  }
} = di;
let jc = !1;
const Cn = Buffer[Symbol.species], ur = Symbol("kClosedResolve"), Te = {};
try {
  const e = require("diagnostics_channel");
  Te.sendHeaders = e.channel("undici:client:sendHeaders"), Te.beforeConnect = e.channel("undici:client:beforeConnect"), Te.connectError = e.channel("undici:client:connectError"), Te.connected = e.channel("undici:client:connected");
} catch {
  Te.sendHeaders = { hasSubscribers: !1 }, Te.beforeConnect = { hasSubscribers: !1 }, Te.connectError = { hasSubscribers: !1 }, Te.connected = { hasSubscribers: !1 };
}
let Xw = class extends Dw {
  /**
   *
   * @param {string|URL} url
   * @param {import('../types/client').Client.Options} options
   */
  constructor(A, {
    interceptors: t,
    maxHeaderSize: s,
    headersTimeout: r,
    socketTimeout: o,
    requestTimeout: n,
    connectTimeout: g,
    bodyTimeout: i,
    idleTimeout: E,
    keepAlive: a,
    keepAliveTimeout: Q,
    maxKeepAliveTimeout: c,
    keepAliveMaxTimeout: h,
    keepAliveTimeoutThreshold: u,
    socketPath: I,
    pipelining: C,
    tls: f,
    strictContentLength: B,
    maxCachedSessions: l,
    maxRedirections: y,
    connect: d,
    maxRequestsPerClient: p,
    localAddress: R,
    maxResponseSize: D,
    autoSelectFamily: b,
    autoSelectFamilyAttemptTimeout: M,
    // h2
    allowH2: F,
    maxConcurrentStreams: z
  } = {}) {
    if (super(), a !== void 0)
      throw new Ee("unsupported keepAlive, use pipelining=0 instead");
    if (o !== void 0)
      throw new Ee("unsupported socketTimeout, use headersTimeout & bodyTimeout instead");
    if (n !== void 0)
      throw new Ee("unsupported requestTimeout, use headersTimeout & bodyTimeout instead");
    if (E !== void 0)
      throw new Ee("unsupported idleTimeout, use keepAliveTimeout instead");
    if (c !== void 0)
      throw new Ee("unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead");
    if (s != null && !Number.isFinite(s))
      throw new Ee("invalid maxHeaderSize");
    if (I != null && typeof I != "string")
      throw new Ee("invalid socketPath");
    if (g != null && (!Number.isFinite(g) || g < 0))
      throw new Ee("invalid connectTimeout");
    if (Q != null && (!Number.isFinite(Q) || Q <= 0))
      throw new Ee("invalid keepAliveTimeout");
    if (h != null && (!Number.isFinite(h) || h <= 0))
      throw new Ee("invalid keepAliveMaxTimeout");
    if (u != null && !Number.isFinite(u))
      throw new Ee("invalid keepAliveTimeoutThreshold");
    if (r != null && (!Number.isInteger(r) || r < 0))
      throw new Ee("headersTimeout must be a positive integer or zero");
    if (i != null && (!Number.isInteger(i) || i < 0))
      throw new Ee("bodyTimeout must be a positive integer or zero");
    if (d != null && typeof d != "function" && typeof d != "object")
      throw new Ee("connect must be a function or an object");
    if (y != null && (!Number.isInteger(y) || y < 0))
      throw new Ee("maxRedirections must be a positive number");
    if (p != null && (!Number.isInteger(p) || p < 0))
      throw new Ee("maxRequestsPerClient must be a positive number");
    if (R != null && (typeof R != "string" || Hh.isIP(R) === 0))
      throw new Ee("localAddress must be valid string IP address");
    if (D != null && (!Number.isInteger(D) || D < -1))
      throw new Ee("maxResponseSize must be a positive number");
    if (M != null && (!Number.isInteger(M) || M < -1))
      throw new Ee("autoSelectFamilyAttemptTimeout must be a positive number");
    if (F != null && typeof F != "boolean")
      throw new Ee("allowH2 must be a valid boolean value");
    if (z != null && (typeof z != "number" || z < 1))
      throw new Ee("maxConcurrentStreams must be a possitive integer, greater than 0");
    typeof d != "function" && (d = Uw({
      ...f,
      maxCachedSessions: l,
      allowH2: F,
      socketPath: I,
      timeout: g,
      ...dA.nodeHasAutoSelectFamily && b ? { autoSelectFamily: b, autoSelectFamilyAttemptTimeout: M } : void 0,
      ...d
    })), this[vw] = t && t.Client && Array.isArray(t.Client) ? t.Client : [eD({ maxRedirections: y })], this[Fe] = dA.parseOrigin(A), this[Lo] = d, this[ne] = null, this[Dr] = C ?? 1, this[si] = s || yw.maxHeaderSize, this[sQ] = Q ?? 4e3, this[xh] = h ?? 6e5, this[Oh] = u ?? 1e3, this[xo] = this[sQ], this[hr] = null, this[To] = R ?? null, this[As] = 0, this[wr] = 0, this[Vh] = `host: ${this[Fe].hostname}${this[Fe].port ? `:${this[Fe].port}` : ""}\r
`, this[Wh] = i ?? 3e5, this[Ph] = r ?? 3e5, this[Oo] = B ?? !0, this[Mw] = y, this[Po] = p, this[ur] = null, this[_h] = D > -1 ? D : -1, this[Jt] = "h1", this[nt] = null, this[ui] = F ? {
      // streams: null, // Fixed queue of streams - For future support of `push`
      openStreams: 0,
      // Keep track of them to decide wether or not unref the session
      maxConcurrentStreams: z ?? 100
      // Max peerConcurrentStreams for a Node h2 server
    } : null, this[$h] = `${this[Fe].hostname}${this[Fe].port ? `:${this[Fe].port}` : ""}`, this[ZA] = [], this[XA] = 0, this[ot] = 0;
  }
  get pipelining() {
    return this[Dr];
  }
  set pipelining(A) {
    this[Dr] = A, it(this, !0);
  }
  get [Es]() {
    return this[ZA].length - this[ot];
  }
  get [te]() {
    return this[ot] - this[XA];
  }
  get [ss]() {
    return this[ZA].length - this[XA];
  }
  get [Tw]() {
    return !!this[ne] && !this[Ss] && !this[ne].destroyed;
  }
  get [rQ]() {
    const A = this[ne];
    return A && (A[Pe] || A[rr] || A[Os]) || this[ss] >= (this[Dr] || 1) || this[Es] > 0;
  }
  /* istanbul ignore: only used for test */
  [Lw](A) {
    jh(this), this.once("connect", A);
  }
  [Jw](A, t) {
    const s = A.origin || this[Fe].origin, r = this[Jt] === "h2" ? tQ[Hw](s, A, t) : tQ[xw](s, A, t);
    return this[ZA].push(r), this[As] || (dA.bodyLength(r.body) == null && dA.isIterable(r.body) ? (this[As] = 1, process.nextTick(it, this)) : it(this, !0)), this[As] && this[wr] !== 2 && this[rQ] && (this[wr] = 2), this[wr] < 2;
  }
  async [Gw]() {
    return new Promise((A) => {
      this[ss] ? this[ur] = A : A(null);
    });
  }
  async [Yw](A) {
    return new Promise((t) => {
      const s = this[ZA].splice(this[ot]);
      for (let o = 0; o < s.length; o++) {
        const n = s[o];
        qe(this, n, A);
      }
      const r = () => {
        this[ur] && (this[ur](), this[ur] = null), t();
      };
      this[nt] != null && (dA.destroy(this[nt], A), this[nt] = null, this[ui] = null), this[ne] ? dA.destroy(this[ne].on("close", r), A) : queueMicrotask(r), it(this);
    });
  }
};
function Kw(e) {
  QA(e.code !== "ERR_TLS_CERT_ALTNAME_INVALID"), this[ne][Se] = e, Ti(this[Yt], e);
}
function jw(e, A, t) {
  const s = new Mt(`HTTP/2: "frameError" received - type ${e}, code ${A}`);
  t === 0 && (this[ne][Se] = s, Ti(this[Yt], s));
}
function zw() {
  dA.destroy(this, new xs("other side closed")), dA.destroy(this[ne], new xs("other side closed"));
}
function AD(e) {
  const A = this[Yt], t = new Mt(`HTTP/2: "GOAWAY" frame received with code ${e}`);
  if (A[ne] = null, A[nt] = null, A.destroyed) {
    QA(this[Es] === 0);
    const s = A[ZA].splice(A[XA]);
    for (let r = 0; r < s.length; r++) {
      const o = s[r];
      qe(this, o, t);
    }
  } else if (A[te] > 0) {
    const s = A[ZA][A[XA]];
    A[ZA][A[XA]++] = null, qe(A, s, t);
  }
  A[ot] = A[XA], QA(A[te] === 0), A.emit(
    "disconnect",
    A[Fe],
    [A],
    t
  ), it(A);
}
const kt = cw(), eD = WQ, tD = Buffer.alloc(0);
async function rD() {
  const e = process.env.JEST_WORKER_ID ? Xc() : void 0;
  let A;
  try {
    A = await WebAssembly.compile(Buffer.from(pw(), "base64"));
  } catch {
    A = await WebAssembly.compile(Buffer.from(e || Xc(), "base64"));
  }
  return await WebAssembly.instantiate(A, {
    env: {
      /* eslint-disable camelcase */
      wasm_on_url: (t, s, r) => 0,
      wasm_on_status: (t, s, r) => {
        QA.strictEqual(he.ptr, t);
        const o = s - Lt + St.byteOffset;
        return he.onStatus(new Cn(St.buffer, o, r)) || 0;
      },
      wasm_on_message_begin: (t) => (QA.strictEqual(he.ptr, t), he.onMessageBegin() || 0),
      wasm_on_header_field: (t, s, r) => {
        QA.strictEqual(he.ptr, t);
        const o = s - Lt + St.byteOffset;
        return he.onHeaderField(new Cn(St.buffer, o, r)) || 0;
      },
      wasm_on_header_value: (t, s, r) => {
        QA.strictEqual(he.ptr, t);
        const o = s - Lt + St.byteOffset;
        return he.onHeaderValue(new Cn(St.buffer, o, r)) || 0;
      },
      wasm_on_headers_complete: (t, s, r, o) => (QA.strictEqual(he.ptr, t), he.onHeadersComplete(s, !!r, !!o) || 0),
      wasm_on_body: (t, s, r) => {
        QA.strictEqual(he.ptr, t);
        const o = s - Lt + St.byteOffset;
        return he.onBody(new Cn(St.buffer, o, r)) || 0;
      },
      wasm_on_message_complete: (t) => (QA.strictEqual(he.ptr, t), he.onMessageComplete() || 0)
      /* eslint-enable camelcase */
    }
  });
}
let Hg = null, oQ = rD();
oQ.catch();
let he = null, St = null, Bn = 0, Lt = null;
const Ps = 1, oi = 2, nQ = 3;
let sD = class {
  constructor(A, t, { exports: s }) {
    QA(Number.isFinite(A[si]) && A[si] > 0), this.llhttp = s, this.ptr = this.llhttp.llhttp_alloc(kt.TYPE.RESPONSE), this.client = A, this.socket = t, this.timeout = null, this.timeoutValue = null, this.timeoutType = null, this.statusCode = null, this.statusText = "", this.upgrade = !1, this.headers = [], this.headersSize = 0, this.headersMaxSize = A[si], this.shouldKeepAlive = !1, this.paused = !1, this.resume = this.resume.bind(this), this.bytesRead = 0, this.keepAlive = "", this.contentLength = "", this.connection = "", this.maxResponseSize = A[_h];
  }
  setTimeout(A, t) {
    this.timeoutType = t, A !== this.timeoutValue ? (vg.clearTimeout(this.timeout), A ? (this.timeout = vg.setTimeout(oD, A, this), this.timeout.unref && this.timeout.unref()) : this.timeout = null, this.timeoutValue = A) : this.timeout && this.timeout.refresh && this.timeout.refresh();
  }
  resume() {
    this.socket.destroyed || !this.paused || (QA(this.ptr != null), QA(he == null), this.llhttp.llhttp_resume(this.ptr), QA(this.timeoutType === oi), this.timeout && this.timeout.refresh && this.timeout.refresh(), this.paused = !1, this.execute(this.socket.read() || tD), this.readMore());
  }
  readMore() {
    for (; !this.paused && this.ptr; ) {
      const A = this.socket.read();
      if (A === null)
        break;
      this.execute(A);
    }
  }
  execute(A) {
    QA(this.ptr != null), QA(he == null), QA(!this.paused);
    const { socket: t, llhttp: s } = this;
    A.length > Bn && (Lt && s.free(Lt), Bn = Math.ceil(A.length / 4096) * 4096, Lt = s.malloc(Bn)), new Uint8Array(s.memory.buffer, Lt, Bn).set(A);
    try {
      let r;
      try {
        St = A, he = this, r = s.llhttp_execute(this.ptr, Lt, A.length);
      } catch (n) {
        throw n;
      } finally {
        he = null, St = null;
      }
      const o = s.llhttp_get_error_pos(this.ptr) - Lt;
      if (r === kt.ERROR.PAUSED_UPGRADE)
        this.onUpgrade(A.slice(o));
      else if (r === kt.ERROR.PAUSED)
        this.paused = !0, t.unshift(A.slice(o));
      else if (r !== kt.ERROR.OK) {
        const n = s.llhttp_get_error_reason(this.ptr);
        let g = "";
        if (n) {
          const i = new Uint8Array(s.memory.buffer, n).indexOf(0);
          g = "Response does not match the HTTP/1.1 protocol (" + Buffer.from(s.memory.buffer, n, i).toString() + ")";
        }
        throw new bw(g, kt.ERROR[r], A.slice(o));
      }
    } catch (r) {
      dA.destroy(t, r);
    }
  }
  destroy() {
    QA(this.ptr != null), QA(he == null), this.llhttp.llhttp_free(this.ptr), this.ptr = null, vg.clearTimeout(this.timeout), this.timeout = null, this.timeoutValue = null, this.timeoutType = null, this.paused = !1;
  }
  onStatus(A) {
    this.statusText = A.toString();
  }
  onMessageBegin() {
    const { socket: A, client: t } = this;
    if (A.destroyed || !t[ZA][t[XA]])
      return -1;
  }
  onHeaderField(A) {
    const t = this.headers.length;
    t & 1 ? this.headers[t - 1] = Buffer.concat([this.headers[t - 1], A]) : this.headers.push(A), this.trackHeader(A.length);
  }
  onHeaderValue(A) {
    let t = this.headers.length;
    (t & 1) === 1 ? (this.headers.push(A), t += 1) : this.headers[t - 1] = Buffer.concat([this.headers[t - 1], A]);
    const s = this.headers[t - 2];
    s.length === 10 && s.toString().toLowerCase() === "keep-alive" ? this.keepAlive += A.toString() : s.length === 10 && s.toString().toLowerCase() === "connection" ? this.connection += A.toString() : s.length === 14 && s.toString().toLowerCase() === "content-length" && (this.contentLength += A.toString()), this.trackHeader(A.length);
  }
  trackHeader(A) {
    this.headersSize += A, this.headersSize >= this.headersMaxSize && dA.destroy(this.socket, new kw());
  }
  onUpgrade(A) {
    const { upgrade: t, client: s, socket: r, headers: o, statusCode: n } = this;
    QA(t);
    const g = s[ZA][s[XA]];
    QA(g), QA(!r.destroyed), QA(r === s[ne]), QA(!this.paused), QA(g.upgrade || g.method === "CONNECT"), this.statusCode = null, this.statusText = "", this.shouldKeepAlive = null, QA(this.headers.length % 2 === 0), this.headers = [], this.headersSize = 0, r.unshift(A), r[se].destroy(), r[se] = null, r[Yt] = null, r[Se] = null, r.removeListener("error", Xh).removeListener("readable", Zh).removeListener("end", Kh).removeListener("close", iQ), s[ne] = null, s[ZA][s[XA]++] = null, s.emit("disconnect", s[Fe], [s], new Mt("upgrade"));
    try {
      g.onUpgrade(n, o, r);
    } catch (i) {
      dA.destroy(r, i);
    }
    it(s);
  }
  onHeadersComplete(A, t, s) {
    const { client: r, socket: o, headers: n, statusText: g } = this;
    if (o.destroyed)
      return -1;
    const i = r[ZA][r[XA]];
    if (!i)
      return -1;
    if (QA(!this.upgrade), QA(this.statusCode < 200), A === 100)
      return dA.destroy(o, new xs("bad response", dA.getSocketInfo(o))), -1;
    if (t && !i.upgrade)
      return dA.destroy(o, new xs("bad upgrade", dA.getSocketInfo(o))), -1;
    if (QA.strictEqual(this.timeoutType, Ps), this.statusCode = A, this.shouldKeepAlive = s || // Override llhttp value which does not allow keepAlive for HEAD.
    i.method === "HEAD" && !o[Pe] && this.connection.toLowerCase() === "keep-alive", this.statusCode >= 200) {
      const a = i.bodyTimeout != null ? i.bodyTimeout : r[Wh];
      this.setTimeout(a, oi);
    } else this.timeout && this.timeout.refresh && this.timeout.refresh();
    if (i.method === "CONNECT")
      return QA(r[te] === 1), this.upgrade = !0, 2;
    if (t)
      return QA(r[te] === 1), this.upgrade = !0, 2;
    if (QA(this.headers.length % 2 === 0), this.headers = [], this.headersSize = 0, this.shouldKeepAlive && r[Dr]) {
      const a = this.keepAlive ? dA.parseKeepAliveTimeout(this.keepAlive) : null;
      if (a != null) {
        const Q = Math.min(
          a - r[Oh],
          r[xh]
        );
        Q <= 0 ? o[Pe] = !0 : r[xo] = Q;
      } else
        r[xo] = r[sQ];
    } else
      o[Pe] = !0;
    const E = i.onHeaders(A, n, this.resume, g) === !1;
    return i.aborted ? -1 : i.method === "HEAD" || A < 200 ? 1 : (o[Os] && (o[Os] = !1, it(r)), E ? kt.ERROR.PAUSED : 0);
  }
  onBody(A) {
    const { client: t, socket: s, statusCode: r, maxResponseSize: o } = this;
    if (s.destroyed)
      return -1;
    const n = t[ZA][t[XA]];
    if (QA(n), QA.strictEqual(this.timeoutType, oi), this.timeout && this.timeout.refresh && this.timeout.refresh(), QA(r >= 200), o > -1 && this.bytesRead + A.length > o)
      return dA.destroy(s, new Nw()), -1;
    if (this.bytesRead += A.length, n.onData(A) === !1)
      return kt.ERROR.PAUSED;
  }
  onMessageComplete() {
    const { client: A, socket: t, statusCode: s, upgrade: r, headers: o, contentLength: n, bytesRead: g, shouldKeepAlive: i } = this;
    if (t.destroyed && (!s || i))
      return -1;
    if (r)
      return;
    const E = A[ZA][A[XA]];
    if (QA(E), QA(s >= 100), this.statusCode = null, this.statusText = "", this.bytesRead = 0, this.contentLength = "", this.keepAlive = "", this.connection = "", QA(this.headers.length % 2 === 0), this.headers = [], this.headersSize = 0, !(s < 200)) {
      if (E.method !== "HEAD" && n && g !== parseInt(n, 10))
        return dA.destroy(t, new Rw()), -1;
      if (E.onComplete(o), A[ZA][A[XA]++] = null, t[rr])
        return QA.strictEqual(A[te], 0), dA.destroy(t, new Mt("reset")), kt.ERROR.PAUSED;
      if (i) {
        if (t[Pe] && A[te] === 0)
          return dA.destroy(t, new Mt("reset")), kt.ERROR.PAUSED;
        A[Dr] === 1 ? setImmediate(it, A) : it(A);
      } else return dA.destroy(t, new Mt("reset")), kt.ERROR.PAUSED;
    }
  }
};
function oD(e) {
  const { socket: A, timeoutType: t, client: s } = e;
  t === Ps ? (!A[rr] || A.writableNeedDrain || s[te] > 1) && (QA(!e.paused, "cannot be paused while waiting for headers"), dA.destroy(A, new mw())) : t === oi ? e.paused || dA.destroy(A, new Fw()) : t === nQ && (QA(s[te] === 0 && s[xo]), dA.destroy(A, new Mt("socket idle timeout")));
}
function Zh() {
  const { [se]: e } = this;
  e && e.readMore();
}
function Xh(e) {
  const { [Yt]: A, [se]: t } = this;
  if (QA(e.code !== "ERR_TLS_CERT_ALTNAME_INVALID"), A[Jt] !== "h2" && e.code === "ECONNRESET" && t.statusCode && !t.shouldKeepAlive) {
    t.onMessageComplete();
    return;
  }
  this[Se] = e, Ti(this[Yt], e);
}
function Ti(e, A) {
  if (e[te] === 0 && A.code !== "UND_ERR_INFO" && A.code !== "UND_ERR_SOCKET") {
    QA(e[ot] === e[XA]);
    const t = e[ZA].splice(e[XA]);
    for (let s = 0; s < t.length; s++) {
      const r = t[s];
      qe(e, r, A);
    }
    QA(e[ss] === 0);
  }
}
function Kh() {
  const { [se]: e, [Yt]: A } = this;
  if (A[Jt] !== "h2" && e.statusCode && !e.shouldKeepAlive) {
    e.onMessageComplete();
    return;
  }
  dA.destroy(this, new xs("other side closed", dA.getSocketInfo(this)));
}
function iQ() {
  const { [Yt]: e, [se]: A } = this;
  e[Jt] === "h1" && A && (!this[Se] && A.statusCode && !A.shouldKeepAlive && A.onMessageComplete(), this[se].destroy(), this[se] = null);
  const t = this[Se] || new xs("closed", dA.getSocketInfo(this));
  if (e[ne] = null, e.destroyed) {
    QA(e[Es] === 0);
    const s = e[ZA].splice(e[XA]);
    for (let r = 0; r < s.length; r++) {
      const o = s[r];
      qe(e, o, t);
    }
  } else if (e[te] > 0 && t.code !== "UND_ERR_INFO") {
    const s = e[ZA][e[XA]];
    e[ZA][e[XA]++] = null, qe(e, s, t);
  }
  e[ot] = e[XA], QA(e[te] === 0), e.emit("disconnect", e[Fe], [e], t), it(e);
}
async function jh(e) {
  QA(!e[Ss]), QA(!e[ne]);
  let { host: A, hostname: t, protocol: s, port: r } = e[Fe];
  if (t[0] === "[") {
    const o = t.indexOf("]");
    QA(o !== -1);
    const n = t.substring(1, o);
    QA(Hh.isIP(n)), t = n;
  }
  e[Ss] = !0, Te.beforeConnect.hasSubscribers && Te.beforeConnect.publish({
    connectParams: {
      host: A,
      hostname: t,
      protocol: s,
      port: r,
      servername: e[hr],
      localAddress: e[To]
    },
    connector: e[Lo]
  });
  try {
    const o = await new Promise((g, i) => {
      e[Lo]({
        host: A,
        hostname: t,
        protocol: s,
        port: r,
        servername: e[hr],
        localAddress: e[To]
      }, (E, a) => {
        E ? i(E) : g(a);
      });
    });
    if (e.destroyed) {
      dA.destroy(o.on("error", () => {
      }), new Sw());
      return;
    }
    if (e[Ss] = !1, QA(o), o.alpnProtocol === "h2") {
      jc || (jc = !0, process.emitWarning("H2 support is experimental, expect them to change at any time.", {
        code: "UNDICI-H2"
      }));
      const g = di.connect(e[Fe], {
        createConnection: () => o,
        peerMaxConcurrentStreams: e[ui].maxConcurrentStreams
      });
      e[Jt] = "h2", g[Yt] = e, g[ne] = o, g.on("error", Kw), g.on("frameError", jw), g.on("end", zw), g.on("goaway", AD), g.on("close", iQ), g.unref(), e[nt] = g, o[nt] = g;
    } else
      Hg || (Hg = await oQ, oQ = null), o[Uo] = !1, o[rr] = !1, o[Pe] = !1, o[Os] = !1, o[se] = new sD(e, o, Hg);
    o[qh] = 0, o[Po] = e[Po], o[Yt] = e, o[Se] = null, o.on("error", Xh).on("readable", Zh).on("end", Kh).on("close", iQ), e[ne] = o, Te.connected.hasSubscribers && Te.connected.publish({
      connectParams: {
        host: A,
        hostname: t,
        protocol: s,
        port: r,
        servername: e[hr],
        localAddress: e[To]
      },
      connector: e[Lo],
      socket: o
    }), e.emit("connect", e[Fe], [e]);
  } catch (o) {
    if (e.destroyed)
      return;
    if (e[Ss] = !1, Te.connectError.hasSubscribers && Te.connectError.publish({
      connectParams: {
        host: A,
        hostname: t,
        protocol: s,
        port: r,
        servername: e[hr],
        localAddress: e[To]
      },
      connector: e[Lo],
      error: o
    }), o.code === "ERR_TLS_CERT_ALTNAME_INVALID")
      for (QA(e[te] === 0); e[Es] > 0 && e[ZA][e[ot]].servername === e[hr]; ) {
        const n = e[ZA][e[ot]++];
        qe(e, n, o);
      }
    else
      Ti(e, o);
    e.emit("connectionError", e[Fe], [e], o);
  }
  it(e);
}
function zc(e) {
  e[wr] = 0, e.emit("drain", e[Fe], [e]);
}
function it(e, A) {
  e[As] !== 2 && (e[As] = 2, nD(e, A), e[As] = 0, e[XA] > 256 && (e[ZA].splice(0, e[XA]), e[ot] -= e[XA], e[XA] = 0));
}
function nD(e, A) {
  for (; ; ) {
    if (e.destroyed) {
      QA(e[Es] === 0);
      return;
    }
    if (e[ur] && !e[ss]) {
      e[ur](), e[ur] = null;
      return;
    }
    const t = e[ne];
    if (t && !t.destroyed && t.alpnProtocol !== "h2") {
      if (e[ss] === 0 ? !t[Uo] && t.unref && (t.unref(), t[Uo] = !0) : t[Uo] && t.ref && (t.ref(), t[Uo] = !1), e[ss] === 0)
        t[se].timeoutType !== nQ && t[se].setTimeout(e[xo], nQ);
      else if (e[te] > 0 && t[se].statusCode < 200 && t[se].timeoutType !== Ps) {
        const r = e[ZA][e[XA]], o = r.headersTimeout != null ? r.headersTimeout : e[Ph];
        t[se].setTimeout(o, Ps);
      }
    }
    if (e[rQ])
      e[wr] = 2;
    else if (e[wr] === 2) {
      A ? (e[wr] = 1, process.nextTick(zc, e)) : zc(e);
      continue;
    }
    if (e[Es] === 0 || e[te] >= (e[Dr] || 1))
      return;
    const s = e[ZA][e[ot]];
    if (e[Fe].protocol === "https:" && e[hr] !== s.servername) {
      if (e[te] > 0)
        return;
      if (e[hr] = s.servername, t && t.servername !== s.servername) {
        dA.destroy(t, new Mt("servername changed"));
        return;
      }
    }
    if (e[Ss])
      return;
    if (!t && !e[nt]) {
      jh(e);
      return;
    }
    if (t.destroyed || t[rr] || t[Pe] || t[Os] || e[te] > 0 && !s.idempotent || e[te] > 0 && (s.upgrade || s.method === "CONNECT") || e[te] > 0 && dA.bodyLength(s.body) !== 0 && (dA.isStream(s.body) || dA.isAsyncIterable(s.body)))
      return;
    !s.aborted && iD(e, s) ? e[ot]++ : e[ZA].splice(e[ot], 1);
  }
}
function zh(e) {
  return e !== "GET" && e !== "HEAD" && e !== "OPTIONS" && e !== "TRACE" && e !== "CONNECT";
}
function iD(e, A) {
  if (e[Jt] === "h2") {
    gD(e, e[nt], A);
    return;
  }
  const { body: t, method: s, path: r, host: o, upgrade: n, headers: g, blocking: i, reset: E } = A, a = s === "PUT" || s === "POST" || s === "PATCH";
  t && typeof t.read == "function" && t.read(0);
  const Q = dA.bodyLength(t);
  let c = Q;
  if (c === null && (c = A.contentLength), c === 0 && !a && (c = null), zh(s) && c > 0 && A.contentLength !== null && A.contentLength !== c) {
    if (e[Oo])
      return qe(e, A, new er()), !1;
    process.emitWarning(new er());
  }
  const h = e[ne];
  try {
    A.onConnect((I) => {
      A.aborted || A.completed || (qe(e, A, I || new qQ()), dA.destroy(h, new Mt("aborted")));
    });
  } catch (I) {
    qe(e, A, I);
  }
  if (A.aborted)
    return !1;
  s === "HEAD" && (h[Pe] = !0), (n || s === "CONNECT") && (h[Pe] = !0), E != null && (h[Pe] = E), e[Po] && h[qh]++ >= e[Po] && (h[Pe] = !0), i && (h[Os] = !0);
  let u = `${s} ${r} HTTP/1.1\r
`;
  return typeof o == "string" ? u += `host: ${o}\r
` : u += e[Vh], n ? u += `connection: upgrade\r
upgrade: ${n}\r
` : e[Dr] && !h[Pe] ? u += `connection: keep-alive\r
` : u += `connection: close\r
`, g && (u += g), Te.sendHeaders.hasSubscribers && Te.sendHeaders.publish({ request: A, headers: u, socket: h }), !t || Q === 0 ? (c === 0 ? h.write(`${u}content-length: 0\r
\r
`, "latin1") : (QA(c === null, "no body must not have content length"), h.write(`${u}\r
`, "latin1")), A.onRequestSent()) : dA.isBuffer(t) ? (QA(c === t.byteLength, "buffer body must have content length"), h.cork(), h.write(`${u}content-length: ${c}\r
\r
`, "latin1"), h.write(t), h.uncork(), A.onBodySent(t), A.onRequestSent(), a || (h[Pe] = !0)) : dA.isBlobLike(t) ? typeof t.stream == "function" ? fi({ body: t.stream(), client: e, request: A, socket: h, contentLength: c, header: u, expectsPayload: a }) : eu({ body: t, client: e, request: A, socket: h, contentLength: c, header: u, expectsPayload: a }) : dA.isStream(t) ? Au({ body: t, client: e, request: A, socket: h, contentLength: c, header: u, expectsPayload: a }) : dA.isIterable(t) ? fi({ body: t, client: e, request: A, socket: h, contentLength: c, header: u, expectsPayload: a }) : QA(!1), !0;
}
function gD(e, A, t) {
  const { body: s, method: r, path: o, host: n, upgrade: g, expectContinue: i, signal: E, headers: a } = t;
  let Q;
  if (typeof a == "string" ? Q = tQ[Vw](a.trim()) : Q = a, g)
    return qe(e, t, new Error("Upgrade not supported for H2")), !1;
  try {
    t.onConnect((B) => {
      t.aborted || t.completed || qe(e, t, B || new qQ());
    });
  } catch (B) {
    qe(e, t, B);
  }
  if (t.aborted)
    return !1;
  let c;
  const h = e[ui];
  if (Q[Ow] = n || e[$h], Q[Pw] = r, r === "CONNECT")
    return A.ref(), c = A.request(Q, { endStream: !1, signal: E }), c.id && !c.pending ? (t.onUpgrade(null, null, c), ++h.openStreams) : c.once("ready", () => {
      t.onUpgrade(null, null, c), ++h.openStreams;
    }), c.once("close", () => {
      h.openStreams -= 1, h.openStreams === 0 && A.unref();
    }), !0;
  Q[Ww] = o, Q[qw] = "https";
  const u = r === "PUT" || r === "POST" || r === "PATCH";
  s && typeof s.read == "function" && s.read(0);
  let I = dA.bodyLength(s);
  if (I == null && (I = t.contentLength), (I === 0 || !u) && (I = null), zh(r) && I > 0 && t.contentLength != null && t.contentLength !== I) {
    if (e[Oo])
      return qe(e, t, new er()), !1;
    process.emitWarning(new er());
  }
  I != null && (QA(s, "no body must not have content length"), Q[_w] = `${I}`), A.ref();
  const C = r === "GET" || r === "HEAD";
  return i ? (Q[$w] = "100-continue", c = A.request(Q, { endStream: C, signal: E }), c.once("continue", f)) : (c = A.request(Q, {
    endStream: C,
    signal: E
  }), f()), ++h.openStreams, c.once("response", (B) => {
    const { [Zw]: l, ...y } = B;
    t.onHeaders(Number(l), y, c.resume.bind(c), "") === !1 && c.pause();
  }), c.once("end", () => {
    t.onComplete([]);
  }), c.on("data", (B) => {
    t.onData(B) === !1 && c.pause();
  }), c.once("close", () => {
    h.openStreams -= 1, h.openStreams === 0 && A.unref();
  }), c.once("error", function(B) {
    e[nt] && !e[nt].destroyed && !this.closed && !this.destroyed && (h.streams -= 1, dA.destroy(c, B));
  }), c.once("frameError", (B, l) => {
    const y = new Mt(`HTTP/2: "frameError" received - type ${B}, code ${l}`);
    qe(e, t, y), e[nt] && !e[nt].destroyed && !this.closed && !this.destroyed && (h.streams -= 1, dA.destroy(c, y));
  }), !0;
  function f() {
    s ? dA.isBuffer(s) ? (QA(I === s.byteLength, "buffer body must have content length"), c.cork(), c.write(s), c.uncork(), c.end(), t.onBodySent(s), t.onRequestSent()) : dA.isBlobLike(s) ? typeof s.stream == "function" ? fi({
      client: e,
      request: t,
      contentLength: I,
      h2stream: c,
      expectsPayload: u,
      body: s.stream(),
      socket: e[ne],
      header: ""
    }) : eu({
      body: s,
      client: e,
      request: t,
      contentLength: I,
      expectsPayload: u,
      h2stream: c,
      header: "",
      socket: e[ne]
    }) : dA.isStream(s) ? Au({
      body: s,
      client: e,
      request: t,
      contentLength: I,
      expectsPayload: u,
      socket: e[ne],
      h2stream: c,
      header: ""
    }) : dA.isIterable(s) ? fi({
      body: s,
      client: e,
      request: t,
      contentLength: I,
      expectsPayload: u,
      header: "",
      h2stream: c,
      socket: e[ne]
    }) : QA(!1) : t.onRequestSent();
  }
}
function Au({ h2stream: e, body: A, client: t, request: s, socket: r, contentLength: o, header: n, expectsPayload: g }) {
  if (QA(o !== 0 || t[te] === 0, "stream body cannot be pipelined"), t[Jt] === "h2") {
    let I = function(C) {
      s.onBodySent(C);
    };
    const u = ww(
      A,
      e,
      (C) => {
        C ? (dA.destroy(A, C), dA.destroy(e, C)) : s.onRequestSent();
      }
    );
    u.on("data", I), u.once("end", () => {
      u.removeListener("data", I), dA.destroy(u);
    });
    return;
  }
  let i = !1;
  const E = new tu({ socket: r, request: s, contentLength: o, client: t, expectsPayload: g, header: n }), a = function(u) {
    if (!i)
      try {
        !E.write(u) && this.pause && this.pause();
      } catch (I) {
        dA.destroy(this, I);
      }
  }, Q = function() {
    i || A.resume && A.resume();
  }, c = function() {
    if (i)
      return;
    const u = new qQ();
    queueMicrotask(() => h(u));
  }, h = function(u) {
    if (!i) {
      if (i = !0, QA(r.destroyed || r[rr] && t[te] <= 1), r.off("drain", Q).off("error", h), A.removeListener("data", a).removeListener("end", h).removeListener("error", h).removeListener("close", c), !u)
        try {
          E.end();
        } catch (I) {
          u = I;
        }
      E.destroy(u), u && (u.code !== "UND_ERR_INFO" || u.message !== "reset") ? dA.destroy(A, u) : dA.destroy(A);
    }
  };
  A.on("data", a).on("end", h).on("error", h).on("close", c), A.resume && A.resume(), r.on("drain", Q).on("error", h);
}
async function eu({ h2stream: e, body: A, client: t, request: s, socket: r, contentLength: o, header: n, expectsPayload: g }) {
  QA(o === A.size, "blob body must have content length");
  const i = t[Jt] === "h2";
  try {
    if (o != null && o !== A.size)
      throw new er();
    const E = Buffer.from(await A.arrayBuffer());
    i ? (e.cork(), e.write(E), e.uncork()) : (r.cork(), r.write(`${n}content-length: ${o}\r
\r
`, "latin1"), r.write(E), r.uncork()), s.onBodySent(E), s.onRequestSent(), g || (r[Pe] = !0), it(t);
  } catch (E) {
    dA.destroy(i ? e : r, E);
  }
}
async function fi({ h2stream: e, body: A, client: t, request: s, socket: r, contentLength: o, header: n, expectsPayload: g }) {
  QA(o !== 0 || t[te] === 0, "iterator body cannot be pipelined");
  let i = null;
  function E() {
    if (i) {
      const c = i;
      i = null, c();
    }
  }
  const a = () => new Promise((c, h) => {
    QA(i === null), r[Se] ? h(r[Se]) : i = c;
  });
  if (t[Jt] === "h2") {
    e.on("close", E).on("drain", E);
    try {
      for await (const c of A) {
        if (r[Se])
          throw r[Se];
        const h = e.write(c);
        s.onBodySent(c), h || await a();
      }
    } catch (c) {
      e.destroy(c);
    } finally {
      s.onRequestSent(), e.end(), e.off("close", E).off("drain", E);
    }
    return;
  }
  r.on("close", E).on("drain", E);
  const Q = new tu({ socket: r, request: s, contentLength: o, client: t, expectsPayload: g, header: n });
  try {
    for await (const c of A) {
      if (r[Se])
        throw r[Se];
      Q.write(c) || await a();
    }
    Q.end();
  } catch (c) {
    Q.destroy(c);
  } finally {
    r.off("close", E).off("drain", E);
  }
}
let tu = class {
  constructor({ socket: A, request: t, contentLength: s, client: r, expectsPayload: o, header: n }) {
    this.socket = A, this.request = t, this.contentLength = s, this.client = r, this.bytesWritten = 0, this.expectsPayload = o, this.header = n, A[rr] = !0;
  }
  write(A) {
    const { socket: t, request: s, contentLength: r, client: o, bytesWritten: n, expectsPayload: g, header: i } = this;
    if (t[Se])
      throw t[Se];
    if (t.destroyed)
      return !1;
    const E = Buffer.byteLength(A);
    if (!E)
      return !0;
    if (r !== null && n + E > r) {
      if (o[Oo])
        throw new er();
      process.emitWarning(new er());
    }
    t.cork(), n === 0 && (g || (t[Pe] = !0), r === null ? t.write(`${i}transfer-encoding: chunked\r
`, "latin1") : t.write(`${i}content-length: ${r}\r
\r
`, "latin1")), r === null && t.write(`\r
${E.toString(16)}\r
`, "latin1"), this.bytesWritten += E;
    const a = t.write(A);
    return t.uncork(), s.onBodySent(A), a || t[se].timeout && t[se].timeoutType === Ps && t[se].timeout.refresh && t[se].timeout.refresh(), a;
  }
  end() {
    const { socket: A, contentLength: t, client: s, bytesWritten: r, expectsPayload: o, header: n, request: g } = this;
    if (g.onRequestSent(), A[rr] = !1, A[Se])
      throw A[Se];
    if (!A.destroyed) {
      if (r === 0 ? o ? A.write(`${n}content-length: 0\r
\r
`, "latin1") : A.write(`${n}\r
`, "latin1") : t === null && A.write(`\r
0\r
\r
`, "latin1"), t !== null && r !== t) {
        if (s[Oo])
          throw new er();
        process.emitWarning(new er());
      }
      A[se].timeout && A[se].timeoutType === Ps && A[se].timeout.refresh && A[se].timeout.refresh(), it(s);
    }
  }
  destroy(A) {
    const { socket: t, client: s } = this;
    t[rr] = !1, A && (QA(s[te] <= 1, "pipeline should only contain this request"), dA.destroy(t, A));
  }
};
function qe(e, A, t) {
  try {
    A.onError(t), QA(A.aborted);
  } catch (s) {
    e.emit("error", s);
  }
}
var Mi = Xw;
const ru = 2048, Vg = ru - 1;
let AC = class {
  constructor() {
    this.bottom = 0, this.top = 0, this.list = new Array(ru), this.next = null;
  }
  isEmpty() {
    return this.top === this.bottom;
  }
  isFull() {
    return (this.top + 1 & Vg) === this.bottom;
  }
  push(A) {
    this.list[this.top] = A, this.top = this.top + 1 & Vg;
  }
  shift() {
    const A = this.list[this.bottom];
    return A === void 0 ? null : (this.list[this.bottom] = void 0, this.bottom = this.bottom + 1 & Vg, A);
  }
};
var aD = class {
  constructor() {
    this.head = this.tail = new AC();
  }
  isEmpty() {
    return this.head.isEmpty();
  }
  push(A) {
    this.head.isFull() && (this.head = this.head.next = new AC()), this.head.push(A);
  }
  shift() {
    const A = this.tail, t = A.shift();
    return A.isEmpty() && A.next !== null && (this.tail = A.next), t;
  }
};
const { kFree: ED, kConnected: QD, kPending: cD, kQueued: CD, kRunning: BD, kSize: ID } = zA, Jr = Symbol("pool");
let lD = class {
  constructor(A) {
    this[Jr] = A;
  }
  get connected() {
    return this[Jr][QD];
  }
  get free() {
    return this[Jr][ED];
  }
  get pending() {
    return this[Jr][cD];
  }
  get queued() {
    return this[Jr][CD];
  }
  get running() {
    return this[Jr][BD];
  }
  get size() {
    return this[Jr][ID];
  }
};
var hD = lD;
const uD = Ui, dD = aD, { kConnected: xg, kSize: eC, kRunning: tC, kPending: rC, kQueued: co, kBusy: fD, kFree: pD, kUrl: yD, kClose: wD, kDestroy: DD, kDispatch: RD } = zA, mD = hD, Ke = Symbol("clients"), xe = Symbol("needDrain"), Co = Symbol("queue"), Og = Symbol("closed resolve"), Pg = Symbol("onDrain"), sC = Symbol("onConnect"), oC = Symbol("onDisconnect"), nC = Symbol("onConnectionError"), gQ = Symbol("get dispatcher"), su = Symbol("add client"), ou = Symbol("remove client"), iC = Symbol("stats");
let kD = class extends uD {
  constructor() {
    super(), this[Co] = new dD(), this[Ke] = [], this[co] = 0;
    const A = this;
    this[Pg] = function(s, r) {
      const o = A[Co];
      let n = !1;
      for (; !n; ) {
        const g = o.shift();
        if (!g)
          break;
        A[co]--, n = !this.dispatch(g.opts, g.handler);
      }
      this[xe] = n, !this[xe] && A[xe] && (A[xe] = !1, A.emit("drain", s, [A, ...r])), A[Og] && o.isEmpty() && Promise.all(A[Ke].map((g) => g.close())).then(A[Og]);
    }, this[sC] = (t, s) => {
      A.emit("connect", t, [A, ...s]);
    }, this[oC] = (t, s, r) => {
      A.emit("disconnect", t, [A, ...s], r);
    }, this[nC] = (t, s, r) => {
      A.emit("connectionError", t, [A, ...s], r);
    }, this[iC] = new mD(this);
  }
  get [fD]() {
    return this[xe];
  }
  get [xg]() {
    return this[Ke].filter((A) => A[xg]).length;
  }
  get [pD]() {
    return this[Ke].filter((A) => A[xg] && !A[xe]).length;
  }
  get [rC]() {
    let A = this[co];
    for (const { [rC]: t } of this[Ke])
      A += t;
    return A;
  }
  get [tC]() {
    let A = 0;
    for (const { [tC]: t } of this[Ke])
      A += t;
    return A;
  }
  get [eC]() {
    let A = this[co];
    for (const { [eC]: t } of this[Ke])
      A += t;
    return A;
  }
  get stats() {
    return this[iC];
  }
  async [wD]() {
    return this[Co].isEmpty() ? Promise.all(this[Ke].map((A) => A.close())) : new Promise((A) => {
      this[Og] = A;
    });
  }
  async [DD](A) {
    for (; ; ) {
      const t = this[Co].shift();
      if (!t)
        break;
      t.handler.onError(A);
    }
    return Promise.all(this[Ke].map((t) => t.destroy(A)));
  }
  [RD](A, t) {
    const s = this[gQ]();
    return s ? s.dispatch(A, t) || (s[xe] = !0, this[xe] = !this[gQ]()) : (this[xe] = !0, this[Co].push({ opts: A, handler: t }), this[co]++), !this[xe];
  }
  [su](A) {
    return A.on("drain", this[Pg]).on("connect", this[sC]).on("disconnect", this[oC]).on("connectionError", this[nC]), this[Ke].push(A), this[xe] && process.nextTick(() => {
      this[xe] && this[Pg](A[yD], [this, A]);
    }), this;
  }
  [ou](A) {
    A.close(() => {
      const t = this[Ke].indexOf(A);
      t !== -1 && this[Ke].splice(t, 1);
    }), this[xe] = this[Ke].some((t) => !t[xe] && t.closed !== !0 && t.destroyed !== !0);
  }
};
var nu = {
  PoolBase: kD,
  kClients: Ke,
  kNeedDrain: xe,
  kAddClient: su,
  kRemoveClient: ou,
  kGetDispatcher: gQ
};
const {
  PoolBase: FD,
  kClients: gC,
  kNeedDrain: bD,
  kAddClient: ND,
  kGetDispatcher: SD
} = nu, UD = Mi, {
  InvalidArgumentError: Wg
} = qA, qg = JA, { kUrl: aC, kInterceptors: LD } = zA, TD = Li, _g = Symbol("options"), $g = Symbol("connections"), EC = Symbol("factory");
function MD(e, A) {
  return new UD(e, A);
}
let GD = class extends FD {
  constructor(A, {
    connections: t,
    factory: s = MD,
    connect: r,
    connectTimeout: o,
    tls: n,
    maxCachedSessions: g,
    socketPath: i,
    autoSelectFamily: E,
    autoSelectFamilyAttemptTimeout: a,
    allowH2: Q,
    ...c
  } = {}) {
    if (super(), t != null && (!Number.isFinite(t) || t < 0))
      throw new Wg("invalid connections");
    if (typeof s != "function")
      throw new Wg("factory must be a function.");
    if (r != null && typeof r != "function" && typeof r != "object")
      throw new Wg("connect must be a function or an object");
    typeof r != "function" && (r = TD({
      ...n,
      maxCachedSessions: g,
      allowH2: Q,
      socketPath: i,
      timeout: o,
      ...qg.nodeHasAutoSelectFamily && E ? { autoSelectFamily: E, autoSelectFamilyAttemptTimeout: a } : void 0,
      ...r
    })), this[LD] = c.interceptors && c.interceptors.Pool && Array.isArray(c.interceptors.Pool) ? c.interceptors.Pool : [], this[$g] = t || null, this[aC] = qg.parseOrigin(A), this[_g] = { ...qg.deepClone(c), connect: r, allowH2: Q }, this[_g].interceptors = c.interceptors ? { ...c.interceptors } : void 0, this[EC] = s;
  }
  [SD]() {
    let A = this[gC].find((t) => !t[bD]);
    return A || ((!this[$g] || this[gC].length < this[$g]) && (A = this[EC](this[aC], this[_g]), this[ND](A)), A);
  }
};
var Ko = GD;
const {
  BalancedPoolMissingUpstreamError: YD,
  InvalidArgumentError: JD
} = qA, {
  PoolBase: vD,
  kClients: ve,
  kNeedDrain: Bo,
  kAddClient: HD,
  kRemoveClient: VD,
  kGetDispatcher: xD
} = nu, OD = Ko, { kUrl: Zg, kInterceptors: PD } = zA, { parseOrigin: QC } = JA, cC = Symbol("factory"), In = Symbol("options"), CC = Symbol("kGreatestCommonDivisor"), vr = Symbol("kCurrentWeight"), Hr = Symbol("kIndex"), Qt = Symbol("kWeight"), ln = Symbol("kMaxWeightPerServer"), hn = Symbol("kErrorPenalty");
function iu(e, A) {
  return A === 0 ? e : iu(A, e % A);
}
function WD(e, A) {
  return new OD(e, A);
}
let qD = class extends vD {
  constructor(A = [], { factory: t = WD, ...s } = {}) {
    if (super(), this[In] = s, this[Hr] = -1, this[vr] = 0, this[ln] = this[In].maxWeightPerServer || 100, this[hn] = this[In].errorPenalty || 15, Array.isArray(A) || (A = [A]), typeof t != "function")
      throw new JD("factory must be a function.");
    this[PD] = s.interceptors && s.interceptors.BalancedPool && Array.isArray(s.interceptors.BalancedPool) ? s.interceptors.BalancedPool : [], this[cC] = t;
    for (const r of A)
      this.addUpstream(r);
    this._updateBalancedPoolStats();
  }
  addUpstream(A) {
    const t = QC(A).origin;
    if (this[ve].find((r) => r[Zg].origin === t && r.closed !== !0 && r.destroyed !== !0))
      return this;
    const s = this[cC](t, Object.assign({}, this[In]));
    this[HD](s), s.on("connect", () => {
      s[Qt] = Math.min(this[ln], s[Qt] + this[hn]);
    }), s.on("connectionError", () => {
      s[Qt] = Math.max(1, s[Qt] - this[hn]), this._updateBalancedPoolStats();
    }), s.on("disconnect", (...r) => {
      const o = r[2];
      o && o.code === "UND_ERR_SOCKET" && (s[Qt] = Math.max(1, s[Qt] - this[hn]), this._updateBalancedPoolStats());
    });
    for (const r of this[ve])
      r[Qt] = this[ln];
    return this._updateBalancedPoolStats(), this;
  }
  _updateBalancedPoolStats() {
    this[CC] = this[ve].map((A) => A[Qt]).reduce(iu, 0);
  }
  removeUpstream(A) {
    const t = QC(A).origin, s = this[ve].find((r) => r[Zg].origin === t && r.closed !== !0 && r.destroyed !== !0);
    return s && this[VD](s), this;
  }
  get upstreams() {
    return this[ve].filter((A) => A.closed !== !0 && A.destroyed !== !0).map((A) => A[Zg].origin);
  }
  [xD]() {
    if (this[ve].length === 0)
      throw new YD();
    if (!this[ve].find((o) => !o[Bo] && o.closed !== !0 && o.destroyed !== !0) || this[ve].map((o) => o[Bo]).reduce((o, n) => o && n, !0))
      return;
    let s = 0, r = this[ve].findIndex((o) => !o[Bo]);
    for (; s++ < this[ve].length; ) {
      this[Hr] = (this[Hr] + 1) % this[ve].length;
      const o = this[ve][this[Hr]];
      if (o[Qt] > this[ve][r][Qt] && !o[Bo] && (r = this[Hr]), this[Hr] === 0 && (this[vr] = this[vr] - this[CC], this[vr] <= 0 && (this[vr] = this[ln])), o[Qt] >= this[vr] && !o[Bo])
        return o;
    }
    return this[vr] = this[ve][r][Qt], this[Hr] = r, this[ve][r];
  }
};
var _D = qD;
const { kConnected: gu, kSize: au } = zA;
let BC = class {
  constructor(A) {
    this.value = A;
  }
  deref() {
    return this.value[gu] === 0 && this.value[au] === 0 ? void 0 : this.value;
  }
}, IC = class {
  constructor(A) {
    this.finalizer = A;
  }
  register(A, t) {
    A.on && A.on("disconnect", () => {
      A[gu] === 0 && A[au] === 0 && this.finalizer(t);
    });
  }
};
var Eu = function() {
  return process.env.NODE_V8_COVERAGE ? {
    WeakRef: BC,
    FinalizationRegistry: IC
  } : {
    WeakRef: rA.WeakRef || BC,
    FinalizationRegistry: rA.FinalizationRegistry || IC
  };
};
const { InvalidArgumentError: un } = qA, { kClients: gr, kRunning: lC, kClose: $D, kDestroy: ZD, kDispatch: XD, kInterceptors: KD } = zA, jD = Ui, zD = Ko, AR = Mi, eR = JA, tR = WQ, { WeakRef: rR, FinalizationRegistry: sR } = Eu(), hC = Symbol("onConnect"), uC = Symbol("onDisconnect"), dC = Symbol("onConnectionError"), oR = Symbol("maxRedirections"), fC = Symbol("onDrain"), pC = Symbol("factory"), yC = Symbol("finalizer"), Xg = Symbol("options");
function nR(e, A) {
  return A && A.connections === 1 ? new AR(e, A) : new zD(e, A);
}
let iR = class extends jD {
  constructor({ factory: A = nR, maxRedirections: t = 0, connect: s, ...r } = {}) {
    if (super(), typeof A != "function")
      throw new un("factory must be a function.");
    if (s != null && typeof s != "function" && typeof s != "object")
      throw new un("connect must be a function or an object");
    if (!Number.isInteger(t) || t < 0)
      throw new un("maxRedirections must be a positive number");
    s && typeof s != "function" && (s = { ...s }), this[KD] = r.interceptors && r.interceptors.Agent && Array.isArray(r.interceptors.Agent) ? r.interceptors.Agent : [tR({ maxRedirections: t })], this[Xg] = { ...eR.deepClone(r), connect: s }, this[Xg].interceptors = r.interceptors ? { ...r.interceptors } : void 0, this[oR] = t, this[pC] = A, this[gr] = /* @__PURE__ */ new Map(), this[yC] = new sR(
      /* istanbul ignore next: gc is undeterministic */
      (n) => {
        const g = this[gr].get(n);
        g !== void 0 && g.deref() === void 0 && this[gr].delete(n);
      }
    );
    const o = this;
    this[fC] = (n, g) => {
      o.emit("drain", n, [o, ...g]);
    }, this[hC] = (n, g) => {
      o.emit("connect", n, [o, ...g]);
    }, this[uC] = (n, g, i) => {
      o.emit("disconnect", n, [o, ...g], i);
    }, this[dC] = (n, g, i) => {
      o.emit("connectionError", n, [o, ...g], i);
    };
  }
  get [lC]() {
    let A = 0;
    for (const t of this[gr].values()) {
      const s = t.deref();
      s && (A += s[lC]);
    }
    return A;
  }
  [XD](A, t) {
    let s;
    if (A.origin && (typeof A.origin == "string" || A.origin instanceof URL))
      s = String(A.origin);
    else
      throw new un("opts.origin must be a non-empty string or URL.");
    const r = this[gr].get(s);
    let o = r ? r.deref() : null;
    return o || (o = this[pC](A.origin, this[Xg]).on("drain", this[fC]).on("connect", this[hC]).on("disconnect", this[uC]).on("connectionError", this[dC]), this[gr].set(s, new rR(o)), this[yC].register(o, s)), o.dispatch(A, t);
  }
  async [$D]() {
    const A = [];
    for (const t of this[gr].values()) {
      const s = t.deref();
      s && A.push(s.close());
    }
    await Promise.all(A);
  }
  async [ZD](A) {
    const t = [];
    for (const s of this[gr].values()) {
      const r = s.deref();
      r && t.push(r.destroy(A));
    }
    await Promise.all(t);
  }
};
var Gi = iR, js = {}, _Q = { exports: {} };
const Qu = bA, { Readable: gR } = Ye, { RequestAbortedError: cu, NotSupportedError: aR, InvalidArgumentError: ER } = qA, ni = JA, { ReadableStreamFrom: QR, toUSVString: cR } = JA;
let Kg;
const rt = Symbol("kConsume"), dn = Symbol("kReading"), Cr = Symbol("kBody"), wC = Symbol("abort"), Cu = Symbol("kContentType"), DC = () => {
};
var CR = class extends gR {
  constructor({
    resume: A,
    abort: t,
    contentType: s = "",
    highWaterMark: r = 64 * 1024
    // Same as nodejs fs streams.
  }) {
    super({
      autoDestroy: !0,
      read: A,
      highWaterMark: r
    }), this._readableState.dataEmitted = !1, this[wC] = t, this[rt] = null, this[Cr] = null, this[Cu] = s, this[dn] = !1;
  }
  destroy(A) {
    return this.destroyed ? this : (!A && !this._readableState.endEmitted && (A = new cu()), A && this[wC](), super.destroy(A));
  }
  emit(A, ...t) {
    return A === "data" ? this._readableState.dataEmitted = !0 : A === "error" && (this._readableState.errorEmitted = !0), super.emit(A, ...t);
  }
  on(A, ...t) {
    return (A === "data" || A === "readable") && (this[dn] = !0), super.on(A, ...t);
  }
  addListener(A, ...t) {
    return this.on(A, ...t);
  }
  off(A, ...t) {
    const s = super.off(A, ...t);
    return (A === "data" || A === "readable") && (this[dn] = this.listenerCount("data") > 0 || this.listenerCount("readable") > 0), s;
  }
  removeListener(A, ...t) {
    return this.off(A, ...t);
  }
  push(A) {
    return this[rt] && A !== null && this.readableLength === 0 ? (Bu(this[rt], A), this[dn] ? super.push(A) : !0) : super.push(A);
  }
  // https://fetch.spec.whatwg.org/#dom-body-text
  async text() {
    return fn(this, "text");
  }
  // https://fetch.spec.whatwg.org/#dom-body-json
  async json() {
    return fn(this, "json");
  }
  // https://fetch.spec.whatwg.org/#dom-body-blob
  async blob() {
    return fn(this, "blob");
  }
  // https://fetch.spec.whatwg.org/#dom-body-arraybuffer
  async arrayBuffer() {
    return fn(this, "arrayBuffer");
  }
  // https://fetch.spec.whatwg.org/#dom-body-formdata
  async formData() {
    throw new aR();
  }
  // https://fetch.spec.whatwg.org/#dom-body-bodyused
  get bodyUsed() {
    return ni.isDisturbed(this);
  }
  // https://fetch.spec.whatwg.org/#dom-body-body
  get body() {
    return this[Cr] || (this[Cr] = QR(this), this[rt] && (this[Cr].getReader(), Qu(this[Cr].locked))), this[Cr];
  }
  dump(A) {
    let t = A && Number.isFinite(A.limit) ? A.limit : 262144;
    const s = A && A.signal;
    if (s)
      try {
        if (typeof s != "object" || !("aborted" in s))
          throw new ER("signal must be an AbortSignal");
        ni.throwIfAborted(s);
      } catch (r) {
        return Promise.reject(r);
      }
    return this.closed ? Promise.resolve(null) : new Promise((r, o) => {
      const n = s ? ni.addAbortListener(s, () => {
        this.destroy();
      }) : DC;
      this.on("close", function() {
        n(), s && s.aborted ? o(s.reason || Object.assign(new Error("The operation was aborted"), { name: "AbortError" })) : r(null);
      }).on("error", DC).on("data", function(g) {
        t -= g.length, t <= 0 && this.destroy();
      }).resume();
    });
  }
};
function BR(e) {
  return e[Cr] && e[Cr].locked === !0 || e[rt];
}
function IR(e) {
  return ni.isDisturbed(e) || BR(e);
}
async function fn(e, A) {
  if (IR(e))
    throw new TypeError("unusable");
  return Qu(!e[rt]), new Promise((t, s) => {
    e[rt] = {
      type: A,
      stream: e,
      resolve: t,
      reject: s,
      length: 0,
      body: []
    }, e.on("error", function(r) {
      aQ(this[rt], r);
    }).on("close", function() {
      this[rt].body !== null && aQ(this[rt], new cu());
    }), process.nextTick(lR, e[rt]);
  });
}
function lR(e) {
  if (e.body === null)
    return;
  const { _readableState: A } = e.stream;
  for (const t of A.buffer)
    Bu(e, t);
  for (A.endEmitted ? RC(this[rt]) : e.stream.on("end", function() {
    RC(this[rt]);
  }), e.stream.resume(); e.stream.read() != null; )
    ;
}
function RC(e) {
  const { type: A, body: t, resolve: s, stream: r, length: o } = e;
  try {
    if (A === "text")
      s(cR(Buffer.concat(t)));
    else if (A === "json")
      s(JSON.parse(Buffer.concat(t)));
    else if (A === "arrayBuffer") {
      const n = new Uint8Array(o);
      let g = 0;
      for (const i of t)
        n.set(i, g), g += i.byteLength;
      s(n.buffer);
    } else A === "blob" && (Kg || (Kg = require("buffer").Blob), s(new Kg(t, { type: r[Cu] })));
    aQ(e);
  } catch (n) {
    r.destroy(n);
  }
}
function Bu(e, A) {
  e.length += A.length, e.body.push(A);
}
function aQ(e, A) {
  e.body !== null && (A ? e.reject(A) : e.resolve(), e.type = null, e.stream = null, e.resolve = null, e.reject = null, e.length = 0, e.body = null);
}
const hR = bA, {
  ResponseStatusCodeError: pn
} = qA, { toUSVString: mC } = JA;
async function uR({ callback: e, body: A, contentType: t, statusCode: s, statusMessage: r, headers: o }) {
  hR(A);
  let n = [], g = 0;
  for await (const i of A)
    if (n.push(i), g += i.length, g > 128 * 1024) {
      n = null;
      break;
    }
  if (s === 204 || !t || !n) {
    process.nextTick(e, new pn(`Response status code ${s}${r ? `: ${r}` : ""}`, s, o));
    return;
  }
  try {
    if (t.startsWith("application/json")) {
      const i = JSON.parse(mC(Buffer.concat(n)));
      process.nextTick(e, new pn(`Response status code ${s}${r ? `: ${r}` : ""}`, s, o, i));
      return;
    }
    if (t.startsWith("text/")) {
      const i = mC(Buffer.concat(n));
      process.nextTick(e, new pn(`Response status code ${s}${r ? `: ${r}` : ""}`, s, o, i));
      return;
    }
  } catch {
  }
  process.nextTick(e, new pn(`Response status code ${s}${r ? `: ${r}` : ""}`, s, o));
}
var Iu = { getResolveErrorBodyCallback: uR };
const { addAbortListener: dR } = JA, { RequestAbortedError: fR } = qA, Ts = Symbol("kListener"), dr = Symbol("kSignal");
function kC(e) {
  e.abort ? e.abort() : e.onError(new fR());
}
function pR(e, A) {
  if (e[dr] = null, e[Ts] = null, !!A) {
    if (A.aborted) {
      kC(e);
      return;
    }
    e[dr] = A, e[Ts] = () => {
      kC(e);
    }, dR(e[dr], e[Ts]);
  }
}
function yR(e) {
  e[dr] && ("removeEventListener" in e[dr] ? e[dr].removeEventListener("abort", e[Ts]) : e[dr].removeListener("abort", e[Ts]), e[dr] = null, e[Ts] = null);
}
var jo = {
  addSignal: pR,
  removeSignal: yR
};
const wR = CR, {
  InvalidArgumentError: fs,
  RequestAbortedError: DR
} = qA, Ft = JA, { getResolveErrorBodyCallback: RR } = Iu, { AsyncResource: mR } = Ot, { addSignal: kR, removeSignal: FC } = jo;
let lu = class extends mR {
  constructor(A, t) {
    if (!A || typeof A != "object")
      throw new fs("invalid opts");
    const { signal: s, method: r, opaque: o, body: n, onInfo: g, responseHeaders: i, throwOnError: E, highWaterMark: a } = A;
    try {
      if (typeof t != "function")
        throw new fs("invalid callback");
      if (a && (typeof a != "number" || a < 0))
        throw new fs("invalid highWaterMark");
      if (s && typeof s.on != "function" && typeof s.addEventListener != "function")
        throw new fs("signal must be an EventEmitter or EventTarget");
      if (r === "CONNECT")
        throw new fs("invalid method");
      if (g && typeof g != "function")
        throw new fs("invalid onInfo callback");
      super("UNDICI_REQUEST");
    } catch (Q) {
      throw Ft.isStream(n) && Ft.destroy(n.on("error", Ft.nop), Q), Q;
    }
    this.responseHeaders = i || null, this.opaque = o || null, this.callback = t, this.res = null, this.abort = null, this.body = n, this.trailers = {}, this.context = null, this.onInfo = g || null, this.throwOnError = E, this.highWaterMark = a, Ft.isStream(n) && n.on("error", (Q) => {
      this.onError(Q);
    }), kR(this, s);
  }
  onConnect(A, t) {
    if (!this.callback)
      throw new DR();
    this.abort = A, this.context = t;
  }
  onHeaders(A, t, s, r) {
    const { callback: o, opaque: n, abort: g, context: i, responseHeaders: E, highWaterMark: a } = this, Q = E === "raw" ? Ft.parseRawHeaders(t) : Ft.parseHeaders(t);
    if (A < 200) {
      this.onInfo && this.onInfo({ statusCode: A, headers: Q });
      return;
    }
    const h = (E === "raw" ? Ft.parseHeaders(t) : Q)["content-type"], u = new wR({ resume: s, abort: g, contentType: h, highWaterMark: a });
    this.callback = null, this.res = u, o !== null && (this.throwOnError && A >= 400 ? this.runInAsyncScope(
      RR,
      null,
      { callback: o, body: u, contentType: h, statusCode: A, statusMessage: r, headers: Q }
    ) : this.runInAsyncScope(o, null, null, {
      statusCode: A,
      headers: Q,
      trailers: this.trailers,
      opaque: n,
      body: u,
      context: i
    }));
  }
  onData(A) {
    const { res: t } = this;
    return t.push(A);
  }
  onComplete(A) {
    const { res: t } = this;
    FC(this), Ft.parseHeaders(A, this.trailers), t.push(null);
  }
  onError(A) {
    const { res: t, callback: s, body: r, opaque: o } = this;
    FC(this), s && (this.callback = null, queueMicrotask(() => {
      this.runInAsyncScope(s, null, A, { opaque: o });
    })), t && (this.res = null, queueMicrotask(() => {
      Ft.destroy(t, A);
    })), r && (this.body = null, Ft.destroy(r, A));
  }
};
function hu(e, A) {
  if (A === void 0)
    return new Promise((t, s) => {
      hu.call(this, e, (r, o) => r ? s(r) : t(o));
    });
  try {
    this.dispatch(e, new lu(e, A));
  } catch (t) {
    if (typeof A != "function")
      throw t;
    const s = e && e.opaque;
    queueMicrotask(() => A(t, { opaque: s }));
  }
}
_Q.exports = hu;
_Q.exports.RequestHandler = lu;
var FR = _Q.exports;
const { finished: bR, PassThrough: NR } = Ye, {
  InvalidArgumentError: ps,
  InvalidReturnValueError: SR,
  RequestAbortedError: UR
} = qA, ft = JA, { getResolveErrorBodyCallback: LR } = Iu, { AsyncResource: TR } = Ot, { addSignal: MR, removeSignal: bC } = jo;
let GR = class extends TR {
  constructor(A, t, s) {
    if (!A || typeof A != "object")
      throw new ps("invalid opts");
    const { signal: r, method: o, opaque: n, body: g, onInfo: i, responseHeaders: E, throwOnError: a } = A;
    try {
      if (typeof s != "function")
        throw new ps("invalid callback");
      if (typeof t != "function")
        throw new ps("invalid factory");
      if (r && typeof r.on != "function" && typeof r.addEventListener != "function")
        throw new ps("signal must be an EventEmitter or EventTarget");
      if (o === "CONNECT")
        throw new ps("invalid method");
      if (i && typeof i != "function")
        throw new ps("invalid onInfo callback");
      super("UNDICI_STREAM");
    } catch (Q) {
      throw ft.isStream(g) && ft.destroy(g.on("error", ft.nop), Q), Q;
    }
    this.responseHeaders = E || null, this.opaque = n || null, this.factory = t, this.callback = s, this.res = null, this.abort = null, this.context = null, this.trailers = null, this.body = g, this.onInfo = i || null, this.throwOnError = a || !1, ft.isStream(g) && g.on("error", (Q) => {
      this.onError(Q);
    }), MR(this, r);
  }
  onConnect(A, t) {
    if (!this.callback)
      throw new UR();
    this.abort = A, this.context = t;
  }
  onHeaders(A, t, s, r) {
    const { factory: o, opaque: n, context: g, callback: i, responseHeaders: E } = this, a = E === "raw" ? ft.parseRawHeaders(t) : ft.parseHeaders(t);
    if (A < 200) {
      this.onInfo && this.onInfo({ statusCode: A, headers: a });
      return;
    }
    this.factory = null;
    let Q;
    if (this.throwOnError && A >= 400) {
      const u = (E === "raw" ? ft.parseHeaders(t) : a)["content-type"];
      Q = new NR(), this.callback = null, this.runInAsyncScope(
        LR,
        null,
        { callback: i, body: Q, contentType: u, statusCode: A, statusMessage: r, headers: a }
      );
    } else {
      if (o === null)
        return;
      if (Q = this.runInAsyncScope(o, null, {
        statusCode: A,
        headers: a,
        opaque: n,
        context: g
      }), !Q || typeof Q.write != "function" || typeof Q.end != "function" || typeof Q.on != "function")
        throw new SR("expected Writable");
      bR(Q, { readable: !1 }, (h) => {
        const { callback: u, res: I, opaque: C, trailers: f, abort: B } = this;
        this.res = null, (h || !I.readable) && ft.destroy(I, h), this.callback = null, this.runInAsyncScope(u, null, h || null, { opaque: C, trailers: f }), h && B();
      });
    }
    return Q.on("drain", s), this.res = Q, (Q.writableNeedDrain !== void 0 ? Q.writableNeedDrain : Q._writableState && Q._writableState.needDrain) !== !0;
  }
  onData(A) {
    const { res: t } = this;
    return t ? t.write(A) : !0;
  }
  onComplete(A) {
    const { res: t } = this;
    bC(this), t && (this.trailers = ft.parseHeaders(A), t.end());
  }
  onError(A) {
    const { res: t, callback: s, opaque: r, body: o } = this;
    bC(this), this.factory = null, t ? (this.res = null, ft.destroy(t, A)) : s && (this.callback = null, queueMicrotask(() => {
      this.runInAsyncScope(s, null, A, { opaque: r });
    })), o && (this.body = null, ft.destroy(o, A));
  }
};
function uu(e, A, t) {
  if (t === void 0)
    return new Promise((s, r) => {
      uu.call(this, e, A, (o, n) => o ? r(o) : s(n));
    });
  try {
    this.dispatch(e, new GR(e, A, t));
  } catch (s) {
    if (typeof t != "function")
      throw s;
    const r = e && e.opaque;
    queueMicrotask(() => t(s, { opaque: r }));
  }
}
var YR = uu;
const {
  Readable: du,
  Duplex: JR,
  PassThrough: vR
} = Ye, {
  InvalidArgumentError: Io,
  InvalidReturnValueError: HR,
  RequestAbortedError: ii
} = qA, ct = JA, { AsyncResource: VR } = Ot, { addSignal: xR, removeSignal: OR } = jo, PR = bA, Ms = Symbol("resume");
let WR = class extends du {
  constructor() {
    super({ autoDestroy: !0 }), this[Ms] = null;
  }
  _read() {
    const { [Ms]: A } = this;
    A && (this[Ms] = null, A());
  }
  _destroy(A, t) {
    this._read(), t(A);
  }
}, qR = class extends du {
  constructor(A) {
    super({ autoDestroy: !0 }), this[Ms] = A;
  }
  _read() {
    this[Ms]();
  }
  _destroy(A, t) {
    !A && !this._readableState.endEmitted && (A = new ii()), t(A);
  }
}, _R = class extends VR {
  constructor(A, t) {
    if (!A || typeof A != "object")
      throw new Io("invalid opts");
    if (typeof t != "function")
      throw new Io("invalid handler");
    const { signal: s, method: r, opaque: o, onInfo: n, responseHeaders: g } = A;
    if (s && typeof s.on != "function" && typeof s.addEventListener != "function")
      throw new Io("signal must be an EventEmitter or EventTarget");
    if (r === "CONNECT")
      throw new Io("invalid method");
    if (n && typeof n != "function")
      throw new Io("invalid onInfo callback");
    super("UNDICI_PIPELINE"), this.opaque = o || null, this.responseHeaders = g || null, this.handler = t, this.abort = null, this.context = null, this.onInfo = n || null, this.req = new WR().on("error", ct.nop), this.ret = new JR({
      readableObjectMode: A.objectMode,
      autoDestroy: !0,
      read: () => {
        const { body: i } = this;
        i && i.resume && i.resume();
      },
      write: (i, E, a) => {
        const { req: Q } = this;
        Q.push(i, E) || Q._readableState.destroyed ? a() : Q[Ms] = a;
      },
      destroy: (i, E) => {
        const { body: a, req: Q, res: c, ret: h, abort: u } = this;
        !i && !h._readableState.endEmitted && (i = new ii()), u && i && u(), ct.destroy(a, i), ct.destroy(Q, i), ct.destroy(c, i), OR(this), E(i);
      }
    }).on("prefinish", () => {
      const { req: i } = this;
      i.push(null);
    }), this.res = null, xR(this, s);
  }
  onConnect(A, t) {
    const { ret: s, res: r } = this;
    if (PR(!r, "pipeline cannot be retried"), s.destroyed)
      throw new ii();
    this.abort = A, this.context = t;
  }
  onHeaders(A, t, s) {
    const { opaque: r, handler: o, context: n } = this;
    if (A < 200) {
      if (this.onInfo) {
        const i = this.responseHeaders === "raw" ? ct.parseRawHeaders(t) : ct.parseHeaders(t);
        this.onInfo({ statusCode: A, headers: i });
      }
      return;
    }
    this.res = new qR(s);
    let g;
    try {
      this.handler = null;
      const i = this.responseHeaders === "raw" ? ct.parseRawHeaders(t) : ct.parseHeaders(t);
      g = this.runInAsyncScope(o, null, {
        statusCode: A,
        headers: i,
        opaque: r,
        body: this.res,
        context: n
      });
    } catch (i) {
      throw this.res.on("error", ct.nop), i;
    }
    if (!g || typeof g.on != "function")
      throw new HR("expected Readable");
    g.on("data", (i) => {
      const { ret: E, body: a } = this;
      !E.push(i) && a.pause && a.pause();
    }).on("error", (i) => {
      const { ret: E } = this;
      ct.destroy(E, i);
    }).on("end", () => {
      const { ret: i } = this;
      i.push(null);
    }).on("close", () => {
      const { ret: i } = this;
      i._readableState.ended || ct.destroy(i, new ii());
    }), this.body = g;
  }
  onData(A) {
    const { res: t } = this;
    return t.push(A);
  }
  onComplete(A) {
    const { res: t } = this;
    t.push(null);
  }
  onError(A) {
    const { ret: t } = this;
    this.handler = null, ct.destroy(t, A);
  }
};
function $R(e, A) {
  try {
    const t = new _R(e, A);
    return this.dispatch({ ...e, body: t.req }, t), t.ret;
  } catch (t) {
    return new vR().destroy(t);
  }
}
var ZR = $R;
const { InvalidArgumentError: jg, RequestAbortedError: XR, SocketError: KR } = qA, { AsyncResource: jR } = Ot, NC = JA, { addSignal: zR, removeSignal: SC } = jo, Am = bA;
let em = class extends jR {
  constructor(A, t) {
    if (!A || typeof A != "object")
      throw new jg("invalid opts");
    if (typeof t != "function")
      throw new jg("invalid callback");
    const { signal: s, opaque: r, responseHeaders: o } = A;
    if (s && typeof s.on != "function" && typeof s.addEventListener != "function")
      throw new jg("signal must be an EventEmitter or EventTarget");
    super("UNDICI_UPGRADE"), this.responseHeaders = o || null, this.opaque = r || null, this.callback = t, this.abort = null, this.context = null, zR(this, s);
  }
  onConnect(A, t) {
    if (!this.callback)
      throw new XR();
    this.abort = A, this.context = null;
  }
  onHeaders() {
    throw new KR("bad upgrade", null);
  }
  onUpgrade(A, t, s) {
    const { callback: r, opaque: o, context: n } = this;
    Am.strictEqual(A, 101), SC(this), this.callback = null;
    const g = this.responseHeaders === "raw" ? NC.parseRawHeaders(t) : NC.parseHeaders(t);
    this.runInAsyncScope(r, null, null, {
      headers: g,
      socket: s,
      opaque: o,
      context: n
    });
  }
  onError(A) {
    const { callback: t, opaque: s } = this;
    SC(this), t && (this.callback = null, queueMicrotask(() => {
      this.runInAsyncScope(t, null, A, { opaque: s });
    }));
  }
};
function fu(e, A) {
  if (A === void 0)
    return new Promise((t, s) => {
      fu.call(this, e, (r, o) => r ? s(r) : t(o));
    });
  try {
    const t = new em(e, A);
    this.dispatch({
      ...e,
      method: e.method || "GET",
      upgrade: e.protocol || "Websocket"
    }, t);
  } catch (t) {
    if (typeof A != "function")
      throw t;
    const s = e && e.opaque;
    queueMicrotask(() => A(t, { opaque: s }));
  }
}
var tm = fu;
const { AsyncResource: rm } = Ot, { InvalidArgumentError: zg, RequestAbortedError: sm, SocketError: om } = qA, UC = JA, { addSignal: nm, removeSignal: LC } = jo;
let im = class extends rm {
  constructor(A, t) {
    if (!A || typeof A != "object")
      throw new zg("invalid opts");
    if (typeof t != "function")
      throw new zg("invalid callback");
    const { signal: s, opaque: r, responseHeaders: o } = A;
    if (s && typeof s.on != "function" && typeof s.addEventListener != "function")
      throw new zg("signal must be an EventEmitter or EventTarget");
    super("UNDICI_CONNECT"), this.opaque = r || null, this.responseHeaders = o || null, this.callback = t, this.abort = null, nm(this, s);
  }
  onConnect(A, t) {
    if (!this.callback)
      throw new sm();
    this.abort = A, this.context = t;
  }
  onHeaders() {
    throw new om("bad connect", null);
  }
  onUpgrade(A, t, s) {
    const { callback: r, opaque: o, context: n } = this;
    LC(this), this.callback = null;
    let g = t;
    g != null && (g = this.responseHeaders === "raw" ? UC.parseRawHeaders(t) : UC.parseHeaders(t)), this.runInAsyncScope(r, null, null, {
      statusCode: A,
      headers: g,
      socket: s,
      opaque: o,
      context: n
    });
  }
  onError(A) {
    const { callback: t, opaque: s } = this;
    LC(this), t && (this.callback = null, queueMicrotask(() => {
      this.runInAsyncScope(t, null, A, { opaque: s });
    }));
  }
};
function pu(e, A) {
  if (A === void 0)
    return new Promise((t, s) => {
      pu.call(this, e, (r, o) => r ? s(r) : t(o));
    });
  try {
    const t = new im(e, A);
    this.dispatch({ ...e, method: "CONNECT" }, t);
  } catch (t) {
    if (typeof A != "function")
      throw t;
    const s = e && e.opaque;
    queueMicrotask(() => A(t, { opaque: s }));
  }
}
var gm = pu;
js.request = FR;
js.stream = YR;
js.pipeline = ZR;
js.upgrade = tm;
js.connect = gm;
const { UndiciError: am } = qA;
let Em = class yu extends am {
  constructor(A) {
    super(A), Error.captureStackTrace(this, yu), this.name = "MockNotMatchedError", this.message = A || "The request does not match any registered mock dispatches", this.code = "UND_MOCK_ERR_MOCK_NOT_MATCHED";
  }
};
var wu = {
  MockNotMatchedError: Em
}, zo = {
  kAgent: Symbol("agent"),
  kOptions: Symbol("options"),
  kFactory: Symbol("factory"),
  kDispatches: Symbol("dispatches"),
  kDispatchKey: Symbol("dispatch key"),
  kDefaultHeaders: Symbol("default headers"),
  kDefaultTrailers: Symbol("default trailers"),
  kContentLength: Symbol("content length"),
  kMockAgent: Symbol("mock agent"),
  kMockAgentSet: Symbol("mock agent set"),
  kMockAgentGet: Symbol("mock agent get"),
  kMockDispatch: Symbol("mock dispatch"),
  kClose: Symbol("close"),
  kOriginalClose: Symbol("original agent close"),
  kOrigin: Symbol("origin"),
  kIsMockActive: Symbol("is mock active"),
  kNetConnect: Symbol("net connect"),
  kGetNetConnect: Symbol("get net connect"),
  kConnected: Symbol("connected")
};
const { MockNotMatchedError: es } = wu, {
  kDispatches: yn,
  kMockAgent: Qm,
  kOriginalDispatch: cm,
  kOrigin: Cm,
  kGetNetConnect: Bm
} = zo, { buildURL: Im, nop: lm } = JA, { STATUS_CODES: hm } = Vt, {
  types: {
    isPromise: um
  }
} = le;
function sr(e, A) {
  return typeof e == "string" ? e === A : e instanceof RegExp ? e.test(A) : typeof e == "function" ? e(A) === !0 : !1;
}
function Du(e) {
  return Object.fromEntries(
    Object.entries(e).map(([A, t]) => [A.toLocaleLowerCase(), t])
  );
}
function Ru(e, A) {
  if (Array.isArray(e)) {
    for (let t = 0; t < e.length; t += 2)
      if (e[t].toLocaleLowerCase() === A.toLocaleLowerCase())
        return e[t + 1];
    return;
  } else return typeof e.get == "function" ? e.get(A) : Du(e)[A.toLocaleLowerCase()];
}
function mu(e) {
  const A = e.slice(), t = [];
  for (let s = 0; s < A.length; s += 2)
    t.push([A[s], A[s + 1]]);
  return Object.fromEntries(t);
}
function ku(e, A) {
  if (typeof e.headers == "function")
    return Array.isArray(A) && (A = mu(A)), e.headers(A ? Du(A) : {});
  if (typeof e.headers > "u")
    return !0;
  if (typeof A != "object" || typeof e.headers != "object")
    return !1;
  for (const [t, s] of Object.entries(e.headers)) {
    const r = Ru(A, t);
    if (!sr(s, r))
      return !1;
  }
  return !0;
}
function TC(e) {
  if (typeof e != "string")
    return e;
  const A = e.split("?");
  if (A.length !== 2)
    return e;
  const t = new URLSearchParams(A.pop());
  return t.sort(), [...A, t.toString()].join("?");
}
function dm(e, { path: A, method: t, body: s, headers: r }) {
  const o = sr(e.path, A), n = sr(e.method, t), g = typeof e.body < "u" ? sr(e.body, s) : !0, i = ku(e, r);
  return o && n && g && i;
}
function Fu(e) {
  return Buffer.isBuffer(e) ? e : typeof e == "object" ? JSON.stringify(e) : e.toString();
}
function bu(e, A) {
  const t = A.query ? Im(A.path, A.query) : A.path, s = typeof t == "string" ? TC(t) : t;
  let r = e.filter(({ consumed: o }) => !o).filter(({ path: o }) => sr(TC(o), s));
  if (r.length === 0)
    throw new es(`Mock dispatch not matched for path '${s}'`);
  if (r = r.filter(({ method: o }) => sr(o, A.method)), r.length === 0)
    throw new es(`Mock dispatch not matched for method '${A.method}'`);
  if (r = r.filter(({ body: o }) => typeof o < "u" ? sr(o, A.body) : !0), r.length === 0)
    throw new es(`Mock dispatch not matched for body '${A.body}'`);
  if (r = r.filter((o) => ku(o, A.headers)), r.length === 0)
    throw new es(`Mock dispatch not matched for headers '${typeof A.headers == "object" ? JSON.stringify(A.headers) : A.headers}'`);
  return r[0];
}
function fm(e, A, t) {
  const s = { timesInvoked: 0, times: 1, persist: !1, consumed: !1 }, r = typeof t == "function" ? { callback: t } : { ...t }, o = { ...s, ...A, pending: !0, data: { error: null, ...r } };
  return e.push(o), o;
}
function EQ(e, A) {
  const t = e.findIndex((s) => s.consumed ? dm(s, A) : !1);
  t !== -1 && e.splice(t, 1);
}
function Nu(e) {
  const { path: A, method: t, body: s, headers: r, query: o } = e;
  return {
    path: A,
    method: t,
    body: s,
    headers: r,
    query: o
  };
}
function QQ(e) {
  return Object.entries(e).reduce((A, [t, s]) => [
    ...A,
    Buffer.from(`${t}`),
    Array.isArray(s) ? s.map((r) => Buffer.from(`${r}`)) : Buffer.from(`${s}`)
  ], []);
}
function Su(e) {
  return hm[e] || "unknown";
}
async function pm(e) {
  const A = [];
  for await (const t of e)
    A.push(t);
  return Buffer.concat(A).toString("utf8");
}
function Uu(e, A) {
  const t = Nu(e), s = bu(this[yn], t);
  s.timesInvoked++, s.data.callback && (s.data = { ...s.data, ...s.data.callback(e) });
  const { data: { statusCode: r, data: o, headers: n, trailers: g, error: i }, delay: E, persist: a } = s, { timesInvoked: Q, times: c } = s;
  if (s.consumed = !a && Q >= c, s.pending = Q < c, i !== null)
    return EQ(this[yn], t), A.onError(i), !0;
  typeof E == "number" && E > 0 ? setTimeout(() => {
    h(this[yn]);
  }, E) : h(this[yn]);
  function h(I, C = o) {
    const f = Array.isArray(e.headers) ? mu(e.headers) : e.headers, B = typeof C == "function" ? C({ ...e, headers: f }) : C;
    if (um(B)) {
      B.then((p) => h(I, p));
      return;
    }
    const l = Fu(B), y = QQ(n), d = QQ(g);
    A.abort = lm, A.onHeaders(r, y, u, Su(r)), A.onData(Buffer.from(l)), A.onComplete(d), EQ(I, t);
  }
  function u() {
  }
  return !0;
}
function ym() {
  const e = this[Qm], A = this[Cm], t = this[cm];
  return function(r, o) {
    if (e.isMockActive)
      try {
        Uu.call(this, r, o);
      } catch (n) {
        if (n instanceof es) {
          const g = e[Bm]();
          if (g === !1)
            throw new es(`${n.message}: subsequent request to origin ${A} was not allowed (net.connect disabled)`);
          if (Lu(g, A))
            t.call(this, r, o);
          else
            throw new es(`${n.message}: subsequent request to origin ${A} was not allowed (net.connect is not enabled for this origin)`);
        } else
          throw n;
      }
    else
      t.call(this, r, o);
  };
}
function Lu(e, A) {
  const t = new URL(A);
  return e === !0 ? !0 : !!(Array.isArray(e) && e.some((s) => sr(s, t.host)));
}
function wm(e) {
  if (e) {
    const { agent: A, ...t } = e;
    return t;
  }
}
var Yi = {
  getResponseData: Fu,
  getMockDispatch: bu,
  addMockDispatch: fm,
  deleteMockDispatch: EQ,
  buildKey: Nu,
  generateKeyValues: QQ,
  matchValue: sr,
  getResponse: pm,
  getStatusText: Su,
  mockDispatch: Uu,
  buildMockDispatch: ym,
  checkNetConnect: Lu,
  buildMockOptions: wm,
  getHeaderByName: Ru
}, Ji = {};
const { getResponseData: Dm, buildKey: Rm, addMockDispatch: Aa } = Yi, {
  kDispatches: wn,
  kDispatchKey: Dn,
  kDefaultHeaders: ea,
  kDefaultTrailers: ta,
  kContentLength: ra,
  kMockDispatch: Rn
} = zo, { InvalidArgumentError: wt } = qA, { buildURL: mm } = JA;
let gi = class {
  constructor(A) {
    this[Rn] = A;
  }
  /**
   * Delay a reply by a set amount in ms.
   */
  delay(A) {
    if (typeof A != "number" || !Number.isInteger(A) || A <= 0)
      throw new wt("waitInMs must be a valid integer > 0");
    return this[Rn].delay = A, this;
  }
  /**
   * For a defined reply, never mark as consumed.
   */
  persist() {
    return this[Rn].persist = !0, this;
  }
  /**
   * Allow one to define a reply for a set amount of matching requests.
   */
  times(A) {
    if (typeof A != "number" || !Number.isInteger(A) || A <= 0)
      throw new wt("repeatTimes must be a valid integer > 0");
    return this[Rn].times = A, this;
  }
}, km = class {
  constructor(A, t) {
    if (typeof A != "object")
      throw new wt("opts must be an object");
    if (typeof A.path > "u")
      throw new wt("opts.path must be defined");
    if (typeof A.method > "u" && (A.method = "GET"), typeof A.path == "string")
      if (A.query)
        A.path = mm(A.path, A.query);
      else {
        const s = new URL(A.path, "data://");
        A.path = s.pathname + s.search;
      }
    typeof A.method == "string" && (A.method = A.method.toUpperCase()), this[Dn] = Rm(A), this[wn] = t, this[ea] = {}, this[ta] = {}, this[ra] = !1;
  }
  createMockScopeDispatchData(A, t, s = {}) {
    const r = Dm(t), o = this[ra] ? { "content-length": r.length } : {}, n = { ...this[ea], ...o, ...s.headers }, g = { ...this[ta], ...s.trailers };
    return { statusCode: A, data: t, headers: n, trailers: g };
  }
  validateReplyParameters(A, t, s) {
    if (typeof A > "u")
      throw new wt("statusCode must be defined");
    if (typeof t > "u")
      throw new wt("data must be defined");
    if (typeof s != "object")
      throw new wt("responseOptions must be an object");
  }
  /**
   * Mock an undici request with a defined reply.
   */
  reply(A) {
    if (typeof A == "function") {
      const g = (E) => {
        const a = A(E);
        if (typeof a != "object")
          throw new wt("reply options callback must return an object");
        const { statusCode: Q, data: c = "", responseOptions: h = {} } = a;
        return this.validateReplyParameters(Q, c, h), {
          ...this.createMockScopeDispatchData(Q, c, h)
        };
      }, i = Aa(this[wn], this[Dn], g);
      return new gi(i);
    }
    const [t, s = "", r = {}] = [...arguments];
    this.validateReplyParameters(t, s, r);
    const o = this.createMockScopeDispatchData(t, s, r), n = Aa(this[wn], this[Dn], o);
    return new gi(n);
  }
  /**
   * Mock an undici request with a defined error.
   */
  replyWithError(A) {
    if (typeof A > "u")
      throw new wt("error must be defined");
    const t = Aa(this[wn], this[Dn], { error: A });
    return new gi(t);
  }
  /**
   * Set default reply headers on the interceptor for subsequent replies
   */
  defaultReplyHeaders(A) {
    if (typeof A > "u")
      throw new wt("headers must be defined");
    return this[ea] = A, this;
  }
  /**
   * Set default reply trailers on the interceptor for subsequent replies
   */
  defaultReplyTrailers(A) {
    if (typeof A > "u")
      throw new wt("trailers must be defined");
    return this[ta] = A, this;
  }
  /**
   * Set reply content length header for replies on the interceptor
   */
  replyContentLength() {
    return this[ra] = !0, this;
  }
};
Ji.MockInterceptor = km;
Ji.MockScope = gi;
const { promisify: Fm } = le, bm = Mi, { buildMockDispatch: Nm } = Yi, {
  kDispatches: MC,
  kMockAgent: GC,
  kClose: YC,
  kOriginalClose: JC,
  kOrigin: vC,
  kOriginalDispatch: Sm,
  kConnected: sa
} = zo, { MockInterceptor: Um } = Ji, HC = zA, { InvalidArgumentError: Lm } = qA;
let Tm = class extends bm {
  constructor(A, t) {
    if (super(A, t), !t || !t.agent || typeof t.agent.dispatch != "function")
      throw new Lm("Argument opts.agent must implement Agent");
    this[GC] = t.agent, this[vC] = A, this[MC] = [], this[sa] = 1, this[Sm] = this.dispatch, this[JC] = this.close.bind(this), this.dispatch = Nm.call(this), this.close = this[YC];
  }
  get [HC.kConnected]() {
    return this[sa];
  }
  /**
   * Sets up the base interceptor for mocking replies from undici.
   */
  intercept(A) {
    return new Um(A, this[MC]);
  }
  async [YC]() {
    await Fm(this[JC])(), this[sa] = 0, this[GC][HC.kClients].delete(this[vC]);
  }
};
var Tu = Tm;
const { promisify: Mm } = le, Gm = Ko, { buildMockDispatch: Ym } = Yi, {
  kDispatches: VC,
  kMockAgent: xC,
  kClose: OC,
  kOriginalClose: PC,
  kOrigin: WC,
  kOriginalDispatch: Jm,
  kConnected: oa
} = zo, { MockInterceptor: vm } = Ji, qC = zA, { InvalidArgumentError: Hm } = qA;
let Vm = class extends Gm {
  constructor(A, t) {
    if (super(A, t), !t || !t.agent || typeof t.agent.dispatch != "function")
      throw new Hm("Argument opts.agent must implement Agent");
    this[xC] = t.agent, this[WC] = A, this[VC] = [], this[oa] = 1, this[Jm] = this.dispatch, this[PC] = this.close.bind(this), this.dispatch = Ym.call(this), this.close = this[OC];
  }
  get [qC.kConnected]() {
    return this[oa];
  }
  /**
   * Sets up the base interceptor for mocking replies from undici.
   */
  intercept(A) {
    return new vm(A, this[VC]);
  }
  async [OC]() {
    await Mm(this[PC])(), this[oa] = 0, this[xC][qC.kClients].delete(this[WC]);
  }
};
var Mu = Vm;
const xm = {
  pronoun: "it",
  is: "is",
  was: "was",
  this: "this"
}, Om = {
  pronoun: "they",
  is: "are",
  was: "were",
  this: "these"
};
var Pm = class {
  constructor(A, t) {
    this.singular = A, this.plural = t;
  }
  pluralize(A) {
    const t = A === 1, s = t ? xm : Om, r = t ? this.singular : this.plural;
    return { ...s, count: A, noun: r };
  }
};
const { Transform: Wm } = Ye, { Console: qm } = Zl;
var _m = class {
  constructor({ disableColors: A } = {}) {
    this.transform = new Wm({
      transform(t, s, r) {
        r(null, t);
      }
    }), this.logger = new qm({
      stdout: this.transform,
      inspectOptions: {
        colors: !A && !process.env.CI
      }
    });
  }
  format(A) {
    const t = A.map(
      ({ method: s, path: r, data: { statusCode: o }, persist: n, times: g, timesInvoked: i, origin: E }) => ({
        Method: s,
        Origin: E,
        Path: r,
        "Status code": o,
        Persistent: n ? "✅" : "❌",
        Invocations: i,
        Remaining: n ? 1 / 0 : g - i
      })
    );
    return this.logger.table(t), this.transform.read().toString();
  }
};
const { kClients: Vr } = zA, $m = Gi, {
  kAgent: na,
  kMockAgentSet: mn,
  kMockAgentGet: _C,
  kDispatches: ia,
  kIsMockActive: kn,
  kNetConnect: xr,
  kGetNetConnect: Zm,
  kOptions: Fn,
  kFactory: bn
} = zo, Xm = Tu, Km = Mu, { matchValue: jm, buildMockOptions: zm } = Yi, { InvalidArgumentError: $C, UndiciError: Ak } = qA, ek = OQ, tk = Pm, rk = _m;
let sk = class {
  constructor(A) {
    this.value = A;
  }
  deref() {
    return this.value;
  }
}, ok = class extends ek {
  constructor(A) {
    if (super(A), this[xr] = !0, this[kn] = !0, A && A.agent && typeof A.agent.dispatch != "function")
      throw new $C("Argument opts.agent must implement Agent");
    const t = A && A.agent ? A.agent : new $m(A);
    this[na] = t, this[Vr] = t[Vr], this[Fn] = zm(A);
  }
  get(A) {
    let t = this[_C](A);
    return t || (t = this[bn](A), this[mn](A, t)), t;
  }
  dispatch(A, t) {
    return this.get(A.origin), this[na].dispatch(A, t);
  }
  async close() {
    await this[na].close(), this[Vr].clear();
  }
  deactivate() {
    this[kn] = !1;
  }
  activate() {
    this[kn] = !0;
  }
  enableNetConnect(A) {
    if (typeof A == "string" || typeof A == "function" || A instanceof RegExp)
      Array.isArray(this[xr]) ? this[xr].push(A) : this[xr] = [A];
    else if (typeof A > "u")
      this[xr] = !0;
    else
      throw new $C("Unsupported matcher. Must be one of String|Function|RegExp.");
  }
  disableNetConnect() {
    this[xr] = !1;
  }
  // This is required to bypass issues caused by using global symbols - see:
  // https://github.com/nodejs/undici/issues/1447
  get isMockActive() {
    return this[kn];
  }
  [mn](A, t) {
    this[Vr].set(A, new sk(t));
  }
  [bn](A) {
    const t = Object.assign({ agent: this }, this[Fn]);
    return this[Fn] && this[Fn].connections === 1 ? new Xm(A, t) : new Km(A, t);
  }
  [_C](A) {
    const t = this[Vr].get(A);
    if (t)
      return t.deref();
    if (typeof A != "string") {
      const s = this[bn]("http://localhost:9999");
      return this[mn](A, s), s;
    }
    for (const [s, r] of Array.from(this[Vr])) {
      const o = r.deref();
      if (o && typeof s != "string" && jm(s, A)) {
        const n = this[bn](A);
        return this[mn](A, n), n[ia] = o[ia], n;
      }
    }
  }
  [Zm]() {
    return this[xr];
  }
  pendingInterceptors() {
    const A = this[Vr];
    return Array.from(A.entries()).flatMap(([t, s]) => s.deref()[ia].map((r) => ({ ...r, origin: t }))).filter(({ pending: t }) => t);
  }
  assertNoPendingInterceptors({ pendingInterceptorsFormatter: A = new rk() } = {}) {
    const t = this.pendingInterceptors();
    if (t.length === 0)
      return;
    const s = new tk("interceptor", "interceptors").pluralize(t.length);
    throw new Ak(`
${s.count} ${s.noun} ${s.is} pending:

${A.format(t)}
`.trim());
  }
};
var nk = ok;
const { kProxy: ik, kClose: gk, kDestroy: ak, kInterceptors: Ek } = zA, { URL: ZC } = Xl, XC = Gi, Qk = Ko, ck = Ui, { InvalidArgumentError: vo, RequestAbortedError: Ck } = qA, KC = Li, lo = Symbol("proxy agent"), Nn = Symbol("proxy client"), ho = Symbol("proxy headers"), ga = Symbol("request tls settings"), Bk = Symbol("proxy tls settings"), jC = Symbol("connect endpoint function");
function Ik(e) {
  return e === "https:" ? 443 : 80;
}
function lk(e) {
  if (typeof e == "string" && (e = { uri: e }), !e || !e.uri)
    throw new vo("Proxy opts.uri is mandatory");
  return {
    uri: e.uri,
    protocol: e.protocol || "https"
  };
}
function hk(e, A) {
  return new Qk(e, A);
}
let uk = class extends ck {
  constructor(A) {
    if (super(A), this[ik] = lk(A), this[lo] = new XC(A), this[Ek] = A.interceptors && A.interceptors.ProxyAgent && Array.isArray(A.interceptors.ProxyAgent) ? A.interceptors.ProxyAgent : [], typeof A == "string" && (A = { uri: A }), !A || !A.uri)
      throw new vo("Proxy opts.uri is mandatory");
    const { clientFactory: t = hk } = A;
    if (typeof t != "function")
      throw new vo("Proxy opts.clientFactory must be a function.");
    this[ga] = A.requestTls, this[Bk] = A.proxyTls, this[ho] = A.headers || {};
    const s = new ZC(A.uri), { origin: r, port: o, host: n, username: g, password: i } = s;
    if (A.auth && A.token)
      throw new vo("opts.auth cannot be used in combination with opts.token");
    A.auth ? this[ho]["proxy-authorization"] = `Basic ${A.auth}` : A.token ? this[ho]["proxy-authorization"] = A.token : g && i && (this[ho]["proxy-authorization"] = `Basic ${Buffer.from(`${decodeURIComponent(g)}:${decodeURIComponent(i)}`).toString("base64")}`);
    const E = KC({ ...A.proxyTls });
    this[jC] = KC({ ...A.requestTls }), this[Nn] = t(s, { connect: E }), this[lo] = new XC({
      ...A,
      connect: async (a, Q) => {
        let c = a.host;
        a.port || (c += `:${Ik(a.protocol)}`);
        try {
          const { socket: h, statusCode: u } = await this[Nn].connect({
            origin: r,
            port: o,
            path: c,
            signal: a.signal,
            headers: {
              ...this[ho],
              host: n
            }
          });
          if (u !== 200 && (h.on("error", () => {
          }).destroy(), Q(new Ck(`Proxy response (${u}) !== 200 when HTTP Tunneling`))), a.protocol !== "https:") {
            Q(null, h);
            return;
          }
          let I;
          this[ga] ? I = this[ga].servername : I = a.servername, this[jC]({ ...a, servername: I, httpSocket: h }, Q);
        } catch (h) {
          Q(h);
        }
      }
    });
  }
  dispatch(A, t) {
    const { host: s } = new ZC(A.origin), r = dk(A.headers);
    return fk(r), this[lo].dispatch(
      {
        ...A,
        headers: {
          ...r,
          host: s
        }
      },
      t
    );
  }
  async [gk]() {
    await this[lo].close(), await this[Nn].close();
  }
  async [ak]() {
    await this[lo].destroy(), await this[Nn].destroy();
  }
};
function dk(e) {
  if (Array.isArray(e)) {
    const A = {};
    for (let t = 0; t < e.length; t += 2)
      A[e[t]] = e[t + 1];
    return A;
  }
  return e;
}
function fk(e) {
  if (e && Object.keys(e).find((t) => t.toLowerCase() === "proxy-authorization"))
    throw new vo("Proxy-Authorization should be sent in ProxyAgent constructor");
}
var pk = uk;
const Or = bA, { kRetryHandlerDefaultRetry: zC } = zA, { RequestRetryError: Sn } = qA, { isDisturbed: AB, parseHeaders: yk, parseRangeHeader: eB } = JA;
function wk(e) {
  const A = Date.now();
  return new Date(e).getTime() - A;
}
let Dk = class Gu {
  constructor(A, t) {
    const { retryOptions: s, ...r } = A, {
      // Retry scoped
      retry: o,
      maxRetries: n,
      maxTimeout: g,
      minTimeout: i,
      timeoutFactor: E,
      // Response scoped
      methods: a,
      errorCodes: Q,
      retryAfter: c,
      statusCodes: h
    } = s ?? {};
    this.dispatch = t.dispatch, this.handler = t.handler, this.opts = r, this.abort = null, this.aborted = !1, this.retryOpts = {
      retry: o ?? Gu[zC],
      retryAfter: c ?? !0,
      maxTimeout: g ?? 30 * 1e3,
      // 30s,
      timeout: i ?? 500,
      // .5s
      timeoutFactor: E ?? 2,
      maxRetries: n ?? 5,
      // What errors we should retry
      methods: a ?? ["GET", "HEAD", "OPTIONS", "PUT", "DELETE", "TRACE"],
      // Indicates which errors to retry
      statusCodes: h ?? [500, 502, 503, 504, 429],
      // List of errors to retry
      errorCodes: Q ?? [
        "ECONNRESET",
        "ECONNREFUSED",
        "ENOTFOUND",
        "ENETDOWN",
        "ENETUNREACH",
        "EHOSTDOWN",
        "EHOSTUNREACH",
        "EPIPE"
      ]
    }, this.retryCount = 0, this.start = 0, this.end = null, this.etag = null, this.resume = null, this.handler.onConnect((u) => {
      this.aborted = !0, this.abort ? this.abort(u) : this.reason = u;
    });
  }
  onRequestSent() {
    this.handler.onRequestSent && this.handler.onRequestSent();
  }
  onUpgrade(A, t, s) {
    this.handler.onUpgrade && this.handler.onUpgrade(A, t, s);
  }
  onConnect(A) {
    this.aborted ? A(this.reason) : this.abort = A;
  }
  onBodySent(A) {
    if (this.handler.onBodySent) return this.handler.onBodySent(A);
  }
  static [zC](A, { state: t, opts: s }, r) {
    const { statusCode: o, code: n, headers: g } = A, { method: i, retryOptions: E } = s, {
      maxRetries: a,
      timeout: Q,
      maxTimeout: c,
      timeoutFactor: h,
      statusCodes: u,
      errorCodes: I,
      methods: C
    } = E;
    let { counter: f, currentTimeout: B } = t;
    if (B = B != null && B > 0 ? B : Q, n && n !== "UND_ERR_REQ_RETRY" && n !== "UND_ERR_SOCKET" && !I.includes(n)) {
      r(A);
      return;
    }
    if (Array.isArray(C) && !C.includes(i)) {
      r(A);
      return;
    }
    if (o != null && Array.isArray(u) && !u.includes(o)) {
      r(A);
      return;
    }
    if (f > a) {
      r(A);
      return;
    }
    let l = g != null && g["retry-after"];
    l && (l = Number(l), l = isNaN(l) ? wk(l) : l * 1e3);
    const y = l > 0 ? Math.min(l, c) : Math.min(B * h ** f, c);
    t.currentTimeout = y, setTimeout(() => r(null), y);
  }
  onHeaders(A, t, s, r) {
    const o = yk(t);
    if (this.retryCount += 1, A >= 300)
      return this.abort(
        new Sn("Request failed", A, {
          headers: o,
          count: this.retryCount
        })
      ), !1;
    if (this.resume != null) {
      if (this.resume = null, A !== 206)
        return !0;
      const g = eB(o["content-range"]);
      if (!g)
        return this.abort(
          new Sn("Content-Range mismatch", A, {
            headers: o,
            count: this.retryCount
          })
        ), !1;
      if (this.etag != null && this.etag !== o.etag)
        return this.abort(
          new Sn("ETag mismatch", A, {
            headers: o,
            count: this.retryCount
          })
        ), !1;
      const { start: i, size: E, end: a = E } = g;
      return Or(this.start === i, "content-range mismatch"), Or(this.end == null || this.end === a, "content-range mismatch"), this.resume = s, !0;
    }
    if (this.end == null) {
      if (A === 206) {
        const g = eB(o["content-range"]);
        if (g == null)
          return this.handler.onHeaders(
            A,
            t,
            s,
            r
          );
        const { start: i, size: E, end: a = E } = g;
        Or(
          i != null && Number.isFinite(i) && this.start !== i,
          "content-range mismatch"
        ), Or(Number.isFinite(i)), Or(
          a != null && Number.isFinite(a) && this.end !== a,
          "invalid content-length"
        ), this.start = i, this.end = a;
      }
      if (this.end == null) {
        const g = o["content-length"];
        this.end = g != null ? Number(g) : null;
      }
      return Or(Number.isFinite(this.start)), Or(
        this.end == null || Number.isFinite(this.end),
        "invalid content-length"
      ), this.resume = s, this.etag = o.etag != null ? o.etag : null, this.handler.onHeaders(
        A,
        t,
        s,
        r
      );
    }
    const n = new Sn("Request failed", A, {
      headers: o,
      count: this.retryCount
    });
    return this.abort(n), !1;
  }
  onData(A) {
    return this.start += A.length, this.handler.onData(A);
  }
  onComplete(A) {
    return this.retryCount = 0, this.handler.onComplete(A);
  }
  onError(A) {
    if (this.aborted || AB(this.opts.body))
      return this.handler.onError(A);
    this.retryOpts.retry(
      A,
      {
        state: { counter: this.retryCount++, currentTimeout: this.retryAfter },
        opts: { retryOptions: this.retryOpts, ...this.opts }
      },
      t.bind(this)
    );
    function t(s) {
      if (s != null || this.aborted || AB(this.opts.body))
        return this.handler.onError(s);
      this.start !== 0 && (this.opts = {
        ...this.opts,
        headers: {
          ...this.opts.headers,
          range: `bytes=${this.start}-${this.end ?? ""}`
        }
      });
      try {
        this.dispatch(this.opts, this);
      } catch (r) {
        this.handler.onError(r);
      }
    }
  }
};
var Rk = Dk;
const Yu = Symbol.for("undici.globalDispatcher.1"), { InvalidArgumentError: mk } = qA, kk = Gi;
vu() === void 0 && Ju(new kk());
function Ju(e) {
  if (!e || typeof e.dispatch != "function")
    throw new mk("Argument agent must implement Agent");
  Object.defineProperty(globalThis, Yu, {
    value: e,
    writable: !0,
    enumerable: !1,
    configurable: !1
  });
}
function vu() {
  return globalThis[Yu];
}
var An = {
  setGlobalDispatcher: Ju,
  getGlobalDispatcher: vu
}, Fk = class {
  constructor(A) {
    this.handler = A;
  }
  onConnect(...A) {
    return this.handler.onConnect(...A);
  }
  onError(...A) {
    return this.handler.onError(...A);
  }
  onUpgrade(...A) {
    return this.handler.onUpgrade(...A);
  }
  onHeaders(...A) {
    return this.handler.onHeaders(...A);
  }
  onData(...A) {
    return this.handler.onData(...A);
  }
  onComplete(...A) {
    return this.handler.onComplete(...A);
  }
  onBodySent(...A) {
    return this.handler.onBodySent(...A);
  }
}, aa, tB;
function zs() {
  if (tB) return aa;
  tB = 1;
  const { kHeadersList: e, kConstruct: A } = zA, { kGuard: t } = br(), { kEnumerableProperty: s } = JA, {
    makeIterator: r,
    isValidHeaderName: o,
    isValidHeaderValue: n
  } = Rt(), { webidl: g } = At(), i = bA, E = Symbol("headers map"), a = Symbol("headers map sorted");
  function Q(f) {
    return f === 10 || f === 13 || f === 9 || f === 32;
  }
  function c(f) {
    let B = 0, l = f.length;
    for (; l > B && Q(f.charCodeAt(l - 1)); ) --l;
    for (; l > B && Q(f.charCodeAt(B)); ) ++B;
    return B === 0 && l === f.length ? f : f.substring(B, l);
  }
  function h(f, B) {
    if (Array.isArray(B))
      for (let l = 0; l < B.length; ++l) {
        const y = B[l];
        if (y.length !== 2)
          throw g.errors.exception({
            header: "Headers constructor",
            message: `expected name/value pair to be length 2, found ${y.length}.`
          });
        u(f, y[0], y[1]);
      }
    else if (typeof B == "object" && B !== null) {
      const l = Object.keys(B);
      for (let y = 0; y < l.length; ++y)
        u(f, l[y], B[l[y]]);
    } else
      throw g.errors.conversionFailed({
        prefix: "Headers constructor",
        argument: "Argument 1",
        types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]
      });
  }
  function u(f, B, l) {
    if (l = c(l), o(B)) {
      if (!n(l))
        throw g.errors.invalidArgument({
          prefix: "Headers.append",
          value: l,
          type: "header value"
        });
    } else throw g.errors.invalidArgument({
      prefix: "Headers.append",
      value: B,
      type: "header name"
    });
    if (f[t] === "immutable")
      throw new TypeError("immutable");
    return f[t], f[e].append(B, l);
  }
  class I {
    constructor(B) {
      /** @type {[string, string][]|null} */
      og(this, "cookies", null);
      B instanceof I ? (this[E] = new Map(B[E]), this[a] = B[a], this.cookies = B.cookies === null ? null : [...B.cookies]) : (this[E] = new Map(B), this[a] = null);
    }
    // https://fetch.spec.whatwg.org/#header-list-contains
    contains(B) {
      return B = B.toLowerCase(), this[E].has(B);
    }
    clear() {
      this[E].clear(), this[a] = null, this.cookies = null;
    }
    // https://fetch.spec.whatwg.org/#concept-header-list-append
    append(B, l) {
      this[a] = null;
      const y = B.toLowerCase(), d = this[E].get(y);
      if (d) {
        const p = y === "cookie" ? "; " : ", ";
        this[E].set(y, {
          name: d.name,
          value: `${d.value}${p}${l}`
        });
      } else
        this[E].set(y, { name: B, value: l });
      y === "set-cookie" && (this.cookies ?? (this.cookies = []), this.cookies.push(l));
    }
    // https://fetch.spec.whatwg.org/#concept-header-list-set
    set(B, l) {
      this[a] = null;
      const y = B.toLowerCase();
      y === "set-cookie" && (this.cookies = [l]), this[E].set(y, { name: B, value: l });
    }
    // https://fetch.spec.whatwg.org/#concept-header-list-delete
    delete(B) {
      this[a] = null, B = B.toLowerCase(), B === "set-cookie" && (this.cookies = null), this[E].delete(B);
    }
    // https://fetch.spec.whatwg.org/#concept-header-list-get
    get(B) {
      const l = this[E].get(B.toLowerCase());
      return l === void 0 ? null : l.value;
    }
    *[Symbol.iterator]() {
      for (const [B, { value: l }] of this[E])
        yield [B, l];
    }
    get entries() {
      const B = {};
      if (this[E].size)
        for (const { name: l, value: y } of this[E].values())
          B[l] = y;
      return B;
    }
  }
  class C {
    constructor(B = void 0) {
      B !== A && (this[e] = new I(), this[t] = "none", B !== void 0 && (B = g.converters.HeadersInit(B), h(this, B)));
    }
    // https://fetch.spec.whatwg.org/#dom-headers-append
    append(B, l) {
      return g.brandCheck(this, C), g.argumentLengthCheck(arguments, 2, { header: "Headers.append" }), B = g.converters.ByteString(B), l = g.converters.ByteString(l), u(this, B, l);
    }
    // https://fetch.spec.whatwg.org/#dom-headers-delete
    delete(B) {
      if (g.brandCheck(this, C), g.argumentLengthCheck(arguments, 1, { header: "Headers.delete" }), B = g.converters.ByteString(B), !o(B))
        throw g.errors.invalidArgument({
          prefix: "Headers.delete",
          value: B,
          type: "header name"
        });
      if (this[t] === "immutable")
        throw new TypeError("immutable");
      this[t], this[e].contains(B) && this[e].delete(B);
    }
    // https://fetch.spec.whatwg.org/#dom-headers-get
    get(B) {
      if (g.brandCheck(this, C), g.argumentLengthCheck(arguments, 1, { header: "Headers.get" }), B = g.converters.ByteString(B), !o(B))
        throw g.errors.invalidArgument({
          prefix: "Headers.get",
          value: B,
          type: "header name"
        });
      return this[e].get(B);
    }
    // https://fetch.spec.whatwg.org/#dom-headers-has
    has(B) {
      if (g.brandCheck(this, C), g.argumentLengthCheck(arguments, 1, { header: "Headers.has" }), B = g.converters.ByteString(B), !o(B))
        throw g.errors.invalidArgument({
          prefix: "Headers.has",
          value: B,
          type: "header name"
        });
      return this[e].contains(B);
    }
    // https://fetch.spec.whatwg.org/#dom-headers-set
    set(B, l) {
      if (g.brandCheck(this, C), g.argumentLengthCheck(arguments, 2, { header: "Headers.set" }), B = g.converters.ByteString(B), l = g.converters.ByteString(l), l = c(l), o(B)) {
        if (!n(l))
          throw g.errors.invalidArgument({
            prefix: "Headers.set",
            value: l,
            type: "header value"
          });
      } else throw g.errors.invalidArgument({
        prefix: "Headers.set",
        value: B,
        type: "header name"
      });
      if (this[t] === "immutable")
        throw new TypeError("immutable");
      this[t], this[e].set(B, l);
    }
    // https://fetch.spec.whatwg.org/#dom-headers-getsetcookie
    getSetCookie() {
      g.brandCheck(this, C);
      const B = this[e].cookies;
      return B ? [...B] : [];
    }
    // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine
    get [a]() {
      if (this[e][a])
        return this[e][a];
      const B = [], l = [...this[e]].sort((d, p) => d[0] < p[0] ? -1 : 1), y = this[e].cookies;
      for (let d = 0; d < l.length; ++d) {
        const [p, R] = l[d];
        if (p === "set-cookie")
          for (let D = 0; D < y.length; ++D)
            B.push([p, y[D]]);
        else
          i(R !== null), B.push([p, R]);
      }
      return this[e][a] = B, B;
    }
    keys() {
      if (g.brandCheck(this, C), this[t] === "immutable") {
        const B = this[a];
        return r(
          () => B,
          "Headers",
          "key"
        );
      }
      return r(
        () => [...this[a].values()],
        "Headers",
        "key"
      );
    }
    values() {
      if (g.brandCheck(this, C), this[t] === "immutable") {
        const B = this[a];
        return r(
          () => B,
          "Headers",
          "value"
        );
      }
      return r(
        () => [...this[a].values()],
        "Headers",
        "value"
      );
    }
    entries() {
      if (g.brandCheck(this, C), this[t] === "immutable") {
        const B = this[a];
        return r(
          () => B,
          "Headers",
          "key+value"
        );
      }
      return r(
        () => [...this[a].values()],
        "Headers",
        "key+value"
      );
    }
    /**
     * @param {(value: string, key: string, self: Headers) => void} callbackFn
     * @param {unknown} thisArg
     */
    forEach(B, l = globalThis) {
      if (g.brandCheck(this, C), g.argumentLengthCheck(arguments, 1, { header: "Headers.forEach" }), typeof B != "function")
        throw new TypeError(
          "Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'."
        );
      for (const [y, d] of this)
        B.apply(l, [d, y, this]);
    }
    [Symbol.for("nodejs.util.inspect.custom")]() {
      return g.brandCheck(this, C), this[e];
    }
  }
  return C.prototype[Symbol.iterator] = C.prototype.entries, Object.defineProperties(C.prototype, {
    append: s,
    delete: s,
    get: s,
    has: s,
    set: s,
    getSetCookie: s,
    keys: s,
    values: s,
    entries: s,
    forEach: s,
    [Symbol.iterator]: { enumerable: !1 },
    [Symbol.toStringTag]: {
      value: "Headers",
      configurable: !0
    }
  }), g.converters.HeadersInit = function(f) {
    if (g.util.Type(f) === "Object")
      return f[Symbol.iterator] ? g.converters["sequence<sequence<ByteString>>"](f) : g.converters["record<ByteString, ByteString>"](f);
    throw g.errors.conversionFailed({
      prefix: "Headers constructor",
      argument: "Argument 1",
      types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]
    });
  }, aa = {
    fill: h,
    Headers: C,
    HeadersList: I
  }, aa;
}
var Ea, rB;
function $Q() {
  if (rB) return Ea;
  rB = 1;
  const { Headers: e, HeadersList: A, fill: t } = zs(), { extractBody: s, cloneBody: r, mixinBody: o } = Si(), n = JA, { kEnumerableProperty: g } = n, {
    isValidReasonPhrase: i,
    isCancelled: E,
    isAborted: a,
    isBlobLike: Q,
    serializeJavascriptValueToJSONString: c,
    isErrorLike: h,
    isomorphicEncode: u
  } = Rt(), {
    redirectStatusSet: I,
    nullBodyStatus: C,
    DOMException: f
  } = Cs(), { kState: B, kHeaders: l, kGuard: y, kRealm: d } = br(), { webidl: p } = At(), { FormData: R } = xQ(), { getGlobalOrigin: D } = Xo(), { URLSerializer: b } = Pt(), { kHeadersList: M, kConstruct: F } = zA, z = bA, { types: U } = le, _ = globalThis.ReadableStream || Ge.ReadableStream, q = new TextEncoder("utf-8");
  class X {
    // Creates network error Response.
    static error() {
      const k = { settingsObject: {} }, N = new X();
      return N[B] = P(), N[d] = k, N[l][M] = N[B].headersList, N[l][y] = "immutable", N[l][d] = k, N;
    }
    // https://fetch.spec.whatwg.org/#dom-response-json
    static json(k, N = {}) {
      p.argumentLengthCheck(arguments, 1, { header: "Response.json" }), N !== null && (N = p.converters.ResponseInit(N));
      const O = q.encode(
        c(k)
      ), Z = s(O), x = { settingsObject: {} }, H = new X();
      return H[d] = x, H[l][y] = "response", H[l][d] = x, Y(H, N, { body: Z[0], type: "application/json" }), H;
    }
    // Creates a redirect Response that redirects to url with status status.
    static redirect(k, N = 302) {
      const O = { settingsObject: {} };
      p.argumentLengthCheck(arguments, 1, { header: "Response.redirect" }), k = p.converters.USVString(k), N = p.converters["unsigned short"](N);
      let Z;
      try {
        Z = new URL(k, D());
      } catch (iA) {
        throw Object.assign(new TypeError("Failed to parse URL from " + k), {
          cause: iA
        });
      }
      if (!I.has(N))
        throw new RangeError("Invalid status code " + N);
      const x = new X();
      x[d] = O, x[l][y] = "immutable", x[l][d] = O, x[B].status = N;
      const H = u(b(Z));
      return x[B].headersList.append("location", H), x;
    }
    // https://fetch.spec.whatwg.org/#dom-response
    constructor(k = null, N = {}) {
      k !== null && (k = p.converters.BodyInit(k)), N = p.converters.ResponseInit(N), this[d] = { settingsObject: {} }, this[B] = K({}), this[l] = new e(F), this[l][y] = "response", this[l][M] = this[B].headersList, this[l][d] = this[d];
      let O = null;
      if (k != null) {
        const [Z, x] = s(k);
        O = { body: Z, type: x };
      }
      Y(this, N, O);
    }
    // Returns response’s type, e.g., "cors".
    get type() {
      return p.brandCheck(this, X), this[B].type;
    }
    // Returns response’s URL, if it has one; otherwise the empty string.
    get url() {
      p.brandCheck(this, X);
      const k = this[B].urlList, N = k[k.length - 1] ?? null;
      return N === null ? "" : b(N, !0);
    }
    // Returns whether response was obtained through a redirect.
    get redirected() {
      return p.brandCheck(this, X), this[B].urlList.length > 1;
    }
    // Returns response’s status.
    get status() {
      return p.brandCheck(this, X), this[B].status;
    }
    // Returns whether response’s status is an ok status.
    get ok() {
      return p.brandCheck(this, X), this[B].status >= 200 && this[B].status <= 299;
    }
    // Returns response’s status message.
    get statusText() {
      return p.brandCheck(this, X), this[B].statusText;
    }
    // Returns response’s headers as Headers.
    get headers() {
      return p.brandCheck(this, X), this[l];
    }
    get body() {
      return p.brandCheck(this, X), this[B].body ? this[B].body.stream : null;
    }
    get bodyUsed() {
      return p.brandCheck(this, X), !!this[B].body && n.isDisturbed(this[B].body.stream);
    }
    // Returns a clone of response.
    clone() {
      if (p.brandCheck(this, X), this.bodyUsed || this.body && this.body.locked)
        throw p.errors.exception({
          header: "Response.clone",
          message: "Body has already been consumed."
        });
      const k = nA(this[B]), N = new X();
      return N[B] = k, N[d] = this[d], N[l][M] = k.headersList, N[l][y] = this[l][y], N[l][d] = this[l][d], N;
    }
  }
  o(X), Object.defineProperties(X.prototype, {
    type: g,
    url: g,
    status: g,
    ok: g,
    redirected: g,
    statusText: g,
    headers: g,
    clone: g,
    body: g,
    bodyUsed: g,
    [Symbol.toStringTag]: {
      value: "Response",
      configurable: !0
    }
  }), Object.defineProperties(X, {
    json: g,
    redirect: g,
    error: g
  });
  function nA(w) {
    if (w.internalResponse)
      return eA(
        nA(w.internalResponse),
        w.type
      );
    const k = K({ ...w, body: null });
    return w.body != null && (k.body = r(w.body)), k;
  }
  function K(w) {
    return {
      aborted: !1,
      rangeRequested: !1,
      timingAllowPassed: !1,
      requestIncludesCredentials: !1,
      type: "default",
      status: 200,
      timingInfo: null,
      cacheState: "",
      statusText: "",
      ...w,
      headersList: w.headersList ? new A(w.headersList) : new A(),
      urlList: w.urlList ? [...w.urlList] : []
    };
  }
  function P(w) {
    const k = h(w);
    return K({
      type: "error",
      status: 0,
      error: k ? w : new Error(w && String(w)),
      aborted: w && w.name === "AbortError"
    });
  }
  function L(w, k) {
    return k = {
      internalResponse: w,
      ...k
    }, new Proxy(w, {
      get(N, O) {
        return O in k ? k[O] : N[O];
      },
      set(N, O, Z) {
        return z(!(O in k)), N[O] = Z, !0;
      }
    });
  }
  function eA(w, k) {
    if (k === "basic")
      return L(w, {
        type: "basic",
        headersList: w.headersList
      });
    if (k === "cors")
      return L(w, {
        type: "cors",
        headersList: w.headersList
      });
    if (k === "opaque")
      return L(w, {
        type: "opaque",
        urlList: Object.freeze([]),
        status: 0,
        statusText: "",
        body: null
      });
    if (k === "opaqueredirect")
      return L(w, {
        type: "opaqueredirect",
        status: 0,
        statusText: "",
        headersList: [],
        body: null
      });
    z(!1);
  }
  function v(w, k = null) {
    return z(E(w)), a(w) ? P(Object.assign(new f("The operation was aborted.", "AbortError"), { cause: k })) : P(Object.assign(new f("Request was cancelled."), { cause: k }));
  }
  function Y(w, k, N) {
    if (k.status !== null && (k.status < 200 || k.status > 599))
      throw new RangeError('init["status"] must be in the range of 200 to 599, inclusive.');
    if ("statusText" in k && k.statusText != null && !i(String(k.statusText)))
      throw new TypeError("Invalid statusText");
    if ("status" in k && k.status != null && (w[B].status = k.status), "statusText" in k && k.statusText != null && (w[B].statusText = k.statusText), "headers" in k && k.headers != null && t(w[l], k.headers), N) {
      if (C.includes(w.status))
        throw p.errors.exception({
          header: "Response constructor",
          message: "Invalid response status code " + w.status
        });
      w[B].body = N.body, N.type != null && !w[B].headersList.contains("Content-Type") && w[B].headersList.append("content-type", N.type);
    }
  }
  return p.converters.ReadableStream = p.interfaceConverter(
    _
  ), p.converters.FormData = p.interfaceConverter(
    R
  ), p.converters.URLSearchParams = p.interfaceConverter(
    URLSearchParams
  ), p.converters.XMLHttpRequestBodyInit = function(w) {
    return typeof w == "string" ? p.converters.USVString(w) : Q(w) ? p.converters.Blob(w, { strict: !1 }) : U.isArrayBuffer(w) || U.isTypedArray(w) || U.isDataView(w) ? p.converters.BufferSource(w) : n.isFormDataLike(w) ? p.converters.FormData(w, { strict: !1 }) : w instanceof URLSearchParams ? p.converters.URLSearchParams(w) : p.converters.DOMString(w);
  }, p.converters.BodyInit = function(w) {
    return w instanceof _ ? p.converters.ReadableStream(w) : w != null && w[Symbol.asyncIterator] ? w : p.converters.XMLHttpRequestBodyInit(w);
  }, p.converters.ResponseInit = p.dictionaryConverter([
    {
      key: "status",
      converter: p.converters["unsigned short"],
      defaultValue: 200
    },
    {
      key: "statusText",
      converter: p.converters.ByteString,
      defaultValue: ""
    },
    {
      key: "headers",
      converter: p.converters.HeadersInit
    }
  ]), Ea = {
    makeNetworkError: P,
    makeResponse: K,
    makeAppropriateNetworkError: v,
    filterResponse: eA,
    Response: X,
    cloneResponse: nA
  }, Ea;
}
var Qa, sB;
function vi() {
  if (sB) return Qa;
  sB = 1;
  const { extractBody: e, mixinBody: A, cloneBody: t } = Si(), { Headers: s, fill: r, HeadersList: o } = zs(), { FinalizationRegistry: n } = Eu(), g = JA, {
    isValidHTTPToken: i,
    sameOrigin: E,
    normalizeMethod: a,
    makePolicyContainer: Q,
    normalizeMethodRecord: c
  } = Rt(), {
    forbiddenMethodsSet: h,
    corsSafeListedMethodsSet: u,
    referrerPolicy: I,
    requestRedirect: C,
    requestMode: f,
    requestCredentials: B,
    requestCache: l,
    requestDuplex: y
  } = Cs(), { kEnumerableProperty: d } = g, { kHeaders: p, kSignal: R, kState: D, kGuard: b, kRealm: M } = br(), { webidl: F } = At(), { getGlobalOrigin: z } = Xo(), { URLSerializer: U } = Pt(), { kHeadersList: _, kConstruct: q } = zA, X = bA, { getMaxListeners: nA, setMaxListeners: K, getEventListeners: P, defaultMaxListeners: L } = xt;
  let eA = globalThis.TransformStream;
  const v = Symbol("abortController"), Y = new n(({ signal: O, abort: Z }) => {
    O.removeEventListener("abort", Z);
  });
  class w {
    // https://fetch.spec.whatwg.org/#dom-request
    constructor(Z, x = {}) {
      var $e, W;
      if (Z === q)
        return;
      F.argumentLengthCheck(arguments, 1, { header: "Request constructor" }), Z = F.converters.RequestInfo(Z), x = F.converters.RequestInit(x), this[M] = {
        settingsObject: {
          baseUrl: z(),
          get origin() {
            var $;
            return ($ = this.baseUrl) == null ? void 0 : $.origin;
          },
          policyContainer: Q()
        }
      };
      let H = null, iA = null;
      const IA = this[M].settingsObject.baseUrl;
      let EA = null;
      if (typeof Z == "string") {
        let $;
        try {
          $ = new URL(Z, IA);
        } catch (oA) {
          throw new TypeError("Failed to parse URL from " + Z, { cause: oA });
        }
        if ($.username || $.password)
          throw new TypeError(
            "Request cannot be constructed from a URL that includes credentials: " + Z
          );
        H = k({ urlList: [$] }), iA = "cors";
      } else
        X(Z instanceof w), H = Z[D], EA = Z[R];
      const MA = this[M].settingsObject.origin;
      let kA = "client";
      if (((W = ($e = H.window) == null ? void 0 : $e.constructor) == null ? void 0 : W.name) === "EnvironmentSettingsObject" && E(H.window, MA) && (kA = H.window), x.window != null)
        throw new TypeError(`'window' option '${kA}' must be null`);
      "window" in x && (kA = "no-window"), H = k({
        // URL request’s URL.
        // undici implementation note: this is set as the first item in request's urlList in makeRequest
        // method request’s method.
        method: H.method,
        // header list A copy of request’s header list.
        // undici implementation note: headersList is cloned in makeRequest
        headersList: H.headersList,
        // unsafe-request flag Set.
        unsafeRequest: H.unsafeRequest,
        // client This’s relevant settings object.
        client: this[M].settingsObject,
        // window window.
        window: kA,
        // priority request’s priority.
        priority: H.priority,
        // origin request’s origin. The propagation of the origin is only significant for navigation requests
        // being handled by a service worker. In this scenario a request can have an origin that is different
        // from the current client.
        origin: H.origin,
        // referrer request’s referrer.
        referrer: H.referrer,
        // referrer policy request’s referrer policy.
        referrerPolicy: H.referrerPolicy,
        // mode request’s mode.
        mode: H.mode,
        // credentials mode request’s credentials mode.
        credentials: H.credentials,
        // cache mode request’s cache mode.
        cache: H.cache,
        // redirect mode request’s redirect mode.
        redirect: H.redirect,
        // integrity metadata request’s integrity metadata.
        integrity: H.integrity,
        // keepalive request’s keepalive.
        keepalive: H.keepalive,
        // reload-navigation flag request’s reload-navigation flag.
        reloadNavigation: H.reloadNavigation,
        // history-navigation flag request’s history-navigation flag.
        historyNavigation: H.historyNavigation,
        // URL list A clone of request’s URL list.
        urlList: [...H.urlList]
      });
      const NA = Object.keys(x).length !== 0;
      if (NA && (H.mode === "navigate" && (H.mode = "same-origin"), H.reloadNavigation = !1, H.historyNavigation = !1, H.origin = "client", H.referrer = "client", H.referrerPolicy = "", H.url = H.urlList[H.urlList.length - 1], H.urlList = [H.url]), x.referrer !== void 0) {
        const $ = x.referrer;
        if ($ === "")
          H.referrer = "no-referrer";
        else {
          let oA;
          try {
            oA = new URL($, IA);
          } catch (hA) {
            throw new TypeError(`Referrer "${$}" is not a valid URL.`, { cause: hA });
          }
          oA.protocol === "about:" && oA.hostname === "client" || MA && !E(oA, this[M].settingsObject.baseUrl) ? H.referrer = "client" : H.referrer = oA;
        }
      }
      x.referrerPolicy !== void 0 && (H.referrerPolicy = x.referrerPolicy);
      let DA;
      if (x.mode !== void 0 ? DA = x.mode : DA = iA, DA === "navigate")
        throw F.errors.exception({
          header: "Request constructor",
          message: "invalid request mode navigate."
        });
      if (DA != null && (H.mode = DA), x.credentials !== void 0 && (H.credentials = x.credentials), x.cache !== void 0 && (H.cache = x.cache), H.cache === "only-if-cached" && H.mode !== "same-origin")
        throw new TypeError(
          "'only-if-cached' can be set only with 'same-origin' mode"
        );
      if (x.redirect !== void 0 && (H.redirect = x.redirect), x.integrity != null && (H.integrity = String(x.integrity)), x.keepalive !== void 0 && (H.keepalive = !!x.keepalive), x.method !== void 0) {
        let $ = x.method;
        if (!i($))
          throw new TypeError(`'${$}' is not a valid HTTP method.`);
        if (h.has($.toUpperCase()))
          throw new TypeError(`'${$}' HTTP method is unsupported.`);
        $ = c[$] ?? a($), H.method = $;
      }
      x.signal !== void 0 && (EA = x.signal), this[D] = H;
      const pA = new AbortController();
      if (this[R] = pA.signal, this[R][M] = this[M], EA != null) {
        if (!EA || typeof EA.aborted != "boolean" || typeof EA.addEventListener != "function")
          throw new TypeError(
            "Failed to construct 'Request': member signal is not of type AbortSignal."
          );
        if (EA.aborted)
          pA.abort(EA.reason);
        else {
          this[v] = pA;
          const $ = new WeakRef(pA), oA = function() {
            const hA = $.deref();
            hA !== void 0 && hA.abort(this.reason);
          };
          try {
            (typeof nA == "function" && nA(EA) === L || P(EA, "abort").length >= L) && K(100, EA);
          } catch {
          }
          g.addAbortListener(EA, oA), Y.register(pA, { signal: EA, abort: oA });
        }
      }
      if (this[p] = new s(q), this[p][_] = H.headersList, this[p][b] = "request", this[p][M] = this[M], DA === "no-cors") {
        if (!u.has(H.method))
          throw new TypeError(
            `'${H.method} is unsupported in no-cors mode.`
          );
        this[p][b] = "request-no-cors";
      }
      if (NA) {
        const $ = this[p][_], oA = x.headers !== void 0 ? x.headers : new o($);
        if ($.clear(), oA instanceof o) {
          for (const [hA, G] of oA)
            $.append(hA, G);
          $.cookies = oA.cookies;
        } else
          r(this[p], oA);
      }
      const BA = Z instanceof w ? Z[D].body : null;
      if ((x.body != null || BA != null) && (H.method === "GET" || H.method === "HEAD"))
        throw new TypeError("Request with GET/HEAD method cannot have body.");
      let yA = null;
      if (x.body != null) {
        const [$, oA] = e(
          x.body,
          H.keepalive
        );
        yA = $, oA && !this[p][_].contains("content-type") && this[p].append("content-type", oA);
      }
      const GA = yA ?? BA;
      if (GA != null && GA.source == null) {
        if (yA != null && x.duplex == null)
          throw new TypeError("RequestInit: duplex option is required when sending a body.");
        if (H.mode !== "same-origin" && H.mode !== "cors")
          throw new TypeError(
            'If request is made from ReadableStream, mode should be "same-origin" or "cors"'
          );
        H.useCORSPreflightFlag = !0;
      }
      let Ce = GA;
      if (yA == null && BA != null) {
        if (g.isDisturbed(BA.stream) || BA.stream.locked)
          throw new TypeError(
            "Cannot construct a Request with a Request object that has already been used."
          );
        eA || (eA = Ge.TransformStream);
        const $ = new eA();
        BA.stream.pipeThrough($), Ce = {
          source: BA.source,
          length: BA.length,
          stream: $.readable
        };
      }
      this[D].body = Ce;
    }
    // Returns request’s HTTP method, which is "GET" by default.
    get method() {
      return F.brandCheck(this, w), this[D].method;
    }
    // Returns the URL of request as a string.
    get url() {
      return F.brandCheck(this, w), U(this[D].url);
    }
    // Returns a Headers object consisting of the headers associated with request.
    // Note that headers added in the network layer by the user agent will not
    // be accounted for in this object, e.g., the "Host" header.
    get headers() {
      return F.brandCheck(this, w), this[p];
    }
    // Returns the kind of resource requested by request, e.g., "document"
    // or "script".
    get destination() {
      return F.brandCheck(this, w), this[D].destination;
    }
    // Returns the referrer of request. Its value can be a same-origin URL if
    // explicitly set in init, the empty string to indicate no referrer, and
    // "about:client" when defaulting to the global’s default. This is used
    // during fetching to determine the value of the `Referer` header of the
    // request being made.
    get referrer() {
      return F.brandCheck(this, w), this[D].referrer === "no-referrer" ? "" : this[D].referrer === "client" ? "about:client" : this[D].referrer.toString();
    }
    // Returns the referrer policy associated with request.
    // This is used during fetching to compute the value of the request’s
    // referrer.
    get referrerPolicy() {
      return F.brandCheck(this, w), this[D].referrerPolicy;
    }
    // Returns the mode associated with request, which is a string indicating
    // whether the request will use CORS, or will be restricted to same-origin
    // URLs.
    get mode() {
      return F.brandCheck(this, w), this[D].mode;
    }
    // Returns the credentials mode associated with request,
    // which is a string indicating whether credentials will be sent with the
    // request always, never, or only when sent to a same-origin URL.
    get credentials() {
      return this[D].credentials;
    }
    // Returns the cache mode associated with request,
    // which is a string indicating how the request will
    // interact with the browser’s cache when fetching.
    get cache() {
      return F.brandCheck(this, w), this[D].cache;
    }
    // Returns the redirect mode associated with request,
    // which is a string indicating how redirects for the
    // request will be handled during fetching. A request
    // will follow redirects by default.
    get redirect() {
      return F.brandCheck(this, w), this[D].redirect;
    }
    // Returns request’s subresource integrity metadata, which is a
    // cryptographic hash of the resource being fetched. Its value
    // consists of multiple hashes separated by whitespace. [SRI]
    get integrity() {
      return F.brandCheck(this, w), this[D].integrity;
    }
    // Returns a boolean indicating whether or not request can outlive the
    // global in which it was created.
    get keepalive() {
      return F.brandCheck(this, w), this[D].keepalive;
    }
    // Returns a boolean indicating whether or not request is for a reload
    // navigation.
    get isReloadNavigation() {
      return F.brandCheck(this, w), this[D].reloadNavigation;
    }
    // Returns a boolean indicating whether or not request is for a history
    // navigation (a.k.a. back-foward navigation).
    get isHistoryNavigation() {
      return F.brandCheck(this, w), this[D].historyNavigation;
    }
    // Returns the signal associated with request, which is an AbortSignal
    // object indicating whether or not request has been aborted, and its
    // abort event handler.
    get signal() {
      return F.brandCheck(this, w), this[R];
    }
    get body() {
      return F.brandCheck(this, w), this[D].body ? this[D].body.stream : null;
    }
    get bodyUsed() {
      return F.brandCheck(this, w), !!this[D].body && g.isDisturbed(this[D].body.stream);
    }
    get duplex() {
      return F.brandCheck(this, w), "half";
    }
    // Returns a clone of request.
    clone() {
      var iA;
      if (F.brandCheck(this, w), this.bodyUsed || (iA = this.body) != null && iA.locked)
        throw new TypeError("unusable");
      const Z = N(this[D]), x = new w(q);
      x[D] = Z, x[M] = this[M], x[p] = new s(q), x[p][_] = Z.headersList, x[p][b] = this[p][b], x[p][M] = this[p][M];
      const H = new AbortController();
      return this.signal.aborted ? H.abort(this.signal.reason) : g.addAbortListener(
        this.signal,
        () => {
          H.abort(this.signal.reason);
        }
      ), x[R] = H.signal, x;
    }
  }
  A(w);
  function k(O) {
    const Z = {
      method: "GET",
      localURLsOnly: !1,
      unsafeRequest: !1,
      body: null,
      client: null,
      reservedClient: null,
      replacesClientId: "",
      window: "client",
      keepalive: !1,
      serviceWorkers: "all",
      initiator: "",
      destination: "",
      priority: null,
      origin: "client",
      policyContainer: "client",
      referrer: "client",
      referrerPolicy: "",
      mode: "no-cors",
      useCORSPreflightFlag: !1,
      credentials: "same-origin",
      useCredentials: !1,
      cache: "default",
      redirect: "follow",
      integrity: "",
      cryptoGraphicsNonceMetadata: "",
      parserMetadata: "",
      reloadNavigation: !1,
      historyNavigation: !1,
      userActivation: !1,
      taintedOrigin: !1,
      redirectCount: 0,
      responseTainting: "basic",
      preventNoCacheCacheControlHeaderModification: !1,
      done: !1,
      timingAllowFailed: !1,
      ...O,
      headersList: O.headersList ? new o(O.headersList) : new o()
    };
    return Z.url = Z.urlList[0], Z;
  }
  function N(O) {
    const Z = k({ ...O, body: null });
    return O.body != null && (Z.body = t(O.body)), Z;
  }
  return Object.defineProperties(w.prototype, {
    method: d,
    url: d,
    headers: d,
    redirect: d,
    clone: d,
    signal: d,
    duplex: d,
    destination: d,
    body: d,
    bodyUsed: d,
    isHistoryNavigation: d,
    isReloadNavigation: d,
    keepalive: d,
    integrity: d,
    cache: d,
    credentials: d,
    attribute: d,
    referrerPolicy: d,
    referrer: d,
    mode: d,
    [Symbol.toStringTag]: {
      value: "Request",
      configurable: !0
    }
  }), F.converters.Request = F.interfaceConverter(
    w
  ), F.converters.RequestInfo = function(O) {
    return typeof O == "string" ? F.converters.USVString(O) : O instanceof w ? F.converters.Request(O) : F.converters.USVString(O);
  }, F.converters.AbortSignal = F.interfaceConverter(
    AbortSignal
  ), F.converters.RequestInit = F.dictionaryConverter([
    {
      key: "method",
      converter: F.converters.ByteString
    },
    {
      key: "headers",
      converter: F.converters.HeadersInit
    },
    {
      key: "body",
      converter: F.nullableConverter(
        F.converters.BodyInit
      )
    },
    {
      key: "referrer",
      converter: F.converters.USVString
    },
    {
      key: "referrerPolicy",
      converter: F.converters.DOMString,
      // https://w3c.github.io/webappsec-referrer-policy/#referrer-policy
      allowedValues: I
    },
    {
      key: "mode",
      converter: F.converters.DOMString,
      // https://fetch.spec.whatwg.org/#concept-request-mode
      allowedValues: f
    },
    {
      key: "credentials",
      converter: F.converters.DOMString,
      // https://fetch.spec.whatwg.org/#requestcredentials
      allowedValues: B
    },
    {
      key: "cache",
      converter: F.converters.DOMString,
      // https://fetch.spec.whatwg.org/#requestcache
      allowedValues: l
    },
    {
      key: "redirect",
      converter: F.converters.DOMString,
      // https://fetch.spec.whatwg.org/#requestredirect
      allowedValues: C
    },
    {
      key: "integrity",
      converter: F.converters.DOMString
    },
    {
      key: "keepalive",
      converter: F.converters.boolean
    },
    {
      key: "signal",
      converter: F.nullableConverter(
        (O) => F.converters.AbortSignal(
          O,
          { strict: !1 }
        )
      )
    },
    {
      key: "window",
      converter: F.converters.any
    },
    {
      key: "duplex",
      converter: F.converters.DOMString,
      allowedValues: y
    }
  ]), Qa = { Request: w, makeRequest: k }, Qa;
}
var ca, oB;
function ZQ() {
  if (oB) return ca;
  oB = 1;
  const {
    Response: e,
    makeNetworkError: A,
    makeAppropriateNetworkError: t,
    filterResponse: s,
    makeResponse: r
  } = $Q(), { Headers: o } = zs(), { Request: n, makeRequest: g } = vi(), i = Kl, {
    bytesMatch: E,
    makePolicyContainer: a,
    clonePolicyContainer: Q,
    requestBadPort: c,
    TAOCheck: h,
    appendRequestOriginHeader: u,
    responseLocationURL: I,
    requestCurrentURL: C,
    setRequestReferrerPolicyOnRedirect: f,
    tryUpgradeRequestToAPotentiallyTrustworthyURL: B,
    createOpaqueTimingInfo: l,
    appendFetchMetadata: y,
    corsCheck: d,
    crossOriginResourcePolicyCheck: p,
    determineRequestsReferrer: R,
    coarsenedSharedCurrentTime: D,
    createDeferredPromise: b,
    isBlobLike: M,
    sameOrigin: F,
    isCancelled: z,
    isAborted: U,
    isErrorLike: _,
    fullyReadBody: q,
    readableStreamClose: X,
    isomorphicEncode: nA,
    urlIsLocal: K,
    urlIsHttpHttpsScheme: P,
    urlHasHttpsScheme: L
  } = Rt(), { kState: eA, kHeaders: v, kGuard: Y, kRealm: w } = br(), k = bA, { safelyExtractBody: N } = Si(), {
    redirectStatusSet: O,
    nullBodyStatus: Z,
    safeMethodsSet: x,
    requestBodyHeader: H,
    subresourceSet: iA,
    DOMException: IA
  } = Cs(), { kHeadersList: EA } = zA, MA = xt, { Readable: kA, pipeline: NA } = Ye, { addAbortListener: DA, isErrored: pA, isReadable: BA, nodeMajor: yA, nodeMinor: GA } = JA, { dataURLProcessor: Ce, serializeAMimeType: $e } = Pt(), { TransformStream: W } = Ge, { getGlobalDispatcher: $ } = An, { webidl: oA } = At(), { STATUS_CODES: hA } = Vt, G = ["GET", "HEAD"];
  let AA, sA = globalThis.ReadableStream;
  class CA extends MA {
    constructor(j) {
      super(), this.dispatcher = j, this.connection = null, this.dump = !1, this.state = "ongoing", this.setMaxListeners(21);
    }
    terminate(j) {
      var T;
      this.state === "ongoing" && (this.state = "terminated", (T = this.connection) == null || T.destroy(j), this.emit("terminated", j));
    }
    // https://fetch.spec.whatwg.org/#fetch-controller-abort
    abort(j) {
      var T;
      this.state === "ongoing" && (this.state = "aborted", j || (j = new IA("The operation was aborted.", "AbortError")), this.serializedAbortReason = j, (T = this.connection) == null || T.destroy(j), this.emit("terminated", j));
    }
  }
  function RA(m, j = {}) {
    var aA;
    oA.argumentLengthCheck(arguments, 1, { header: "globalThis.fetch" });
    const T = b();
    let J;
    try {
      J = new n(m, j);
    } catch (lA) {
      return T.reject(lA), T.promise;
    }
    const tA = J[eA];
    if (J.signal.aborted)
      return ye(T, tA, null, J.signal.reason), T.promise;
    const V = tA.client.globalObject;
    ((aA = V == null ? void 0 : V.constructor) == null ? void 0 : aA.name) === "ServiceWorkerGlobalScope" && (tA.serviceWorkers = "none");
    let gA = null;
    const mA = null;
    let xA = !1, FA = null;
    return DA(
      J.signal,
      () => {
        xA = !0, k(FA != null), FA.abort(J.signal.reason), ye(T, tA, gA, J.signal.reason);
      }
    ), FA = we({
      request: tA,
      processResponseEndOfBody: (lA) => HA(lA, "fetch"),
      processResponse: (lA) => {
        if (xA)
          return Promise.resolve();
        if (lA.aborted)
          return ye(T, tA, gA, FA.serializedAbortReason), Promise.resolve();
        if (lA.type === "error")
          return T.reject(
            Object.assign(new TypeError("fetch failed"), { cause: lA.error })
          ), Promise.resolve();
        gA = new e(), gA[eA] = lA, gA[w] = mA, gA[v][EA] = lA.headersList, gA[v][Y] = "immutable", gA[v][w] = mA, T.resolve(gA);
      },
      dispatcher: j.dispatcher ?? $()
      // undici
    }), T.promise;
  }
  function HA(m, j = "other") {
    var V;
    if (m.type === "error" && m.aborted || !((V = m.urlList) != null && V.length))
      return;
    const T = m.urlList[0];
    let J = m.timingInfo, tA = m.cacheState;
    P(T) && J !== null && (m.timingAllowPassed || (J = l({
      startTime: J.startTime
    }), tA = ""), J.endTime = D(), m.timingInfo = J, $A(
      J,
      T,
      j,
      globalThis,
      tA
    ));
  }
  function $A(m, j, T, J, tA) {
    (yA > 18 || yA === 18 && GA >= 2) && performance.markResourceTiming(m, j.href, T, J, tA);
  }
  function ye(m, j, T, J) {
    var V, gA;
    if (J || (J = new IA("The operation was aborted.", "AbortError")), m.reject(J), j.body != null && BA((V = j.body) == null ? void 0 : V.stream) && j.body.stream.cancel(J).catch((mA) => {
      if (mA.code !== "ERR_INVALID_STATE")
        throw mA;
    }), T == null)
      return;
    const tA = T[eA];
    tA.body != null && BA((gA = tA.body) == null ? void 0 : gA.stream) && tA.body.stream.cancel(J).catch((mA) => {
      if (mA.code !== "ERR_INVALID_STATE")
        throw mA;
    });
  }
  function we({
    request: m,
    processRequestBodyChunkLength: j,
    processRequestEndOfBody: T,
    processResponse: J,
    processResponseEndOfBody: tA,
    processResponseConsumeBody: V,
    useParallelQueue: gA = !1,
    dispatcher: mA
    // undici
  }) {
    var lA, OA, SA, ge;
    let xA = null, FA = !1;
    m.client != null && (xA = m.client.globalObject, FA = m.client.crossOriginIsolatedCapability);
    const De = D(FA), qt = l({
      startTime: De
    }), aA = {
      controller: new CA(mA),
      request: m,
      timingInfo: qt,
      processRequestBodyChunkLength: j,
      processRequestEndOfBody: T,
      processResponse: J,
      processResponseConsumeBody: V,
      processResponseEndOfBody: tA,
      taskDestination: xA,
      crossOriginIsolatedCapability: FA
    };
    return k(!m.body || m.body.stream), m.window === "client" && (m.window = ((SA = (OA = (lA = m.client) == null ? void 0 : lA.globalObject) == null ? void 0 : OA.constructor) == null ? void 0 : SA.name) === "Window" ? m.client : "no-window"), m.origin === "client" && (m.origin = (ge = m.client) == null ? void 0 : ge.origin), m.policyContainer === "client" && (m.client != null ? m.policyContainer = Q(
      m.client.policyContainer
    ) : m.policyContainer = a()), m.headersList.contains("accept") || m.headersList.append("accept", "*/*"), m.headersList.contains("accept-language") || m.headersList.append("accept-language", "*"), m.priority, iA.has(m.destination), Sr(aA).catch((wA) => {
      aA.controller.terminate(wA);
    }), aA.controller;
  }
  async function Sr(m, j = !1) {
    const T = m.request;
    let J = null;
    if (T.localURLsOnly && !K(C(T)) && (J = A("local URLs only")), B(T), c(T) === "blocked" && (J = A("bad port")), T.referrerPolicy === "" && (T.referrerPolicy = T.policyContainer.referrerPolicy), T.referrer !== "no-referrer" && (T.referrer = R(T)), J === null && (J = await (async () => {
      const V = C(T);
      return (
        // - request’s current URL’s origin is same origin with request’s origin,
        //   and request’s response tainting is "basic"
        F(V, T.url) && T.responseTainting === "basic" || // request’s current URL’s scheme is "data"
        V.protocol === "data:" || // - request’s mode is "navigate" or "websocket"
        T.mode === "navigate" || T.mode === "websocket" ? (T.responseTainting = "basic", await Ur(m)) : T.mode === "same-origin" ? A('request mode cannot be "same-origin"') : T.mode === "no-cors" ? T.redirect !== "follow" ? A(
          'redirect mode cannot be "follow" for "no-cors" request'
        ) : (T.responseTainting = "opaque", await Ur(m)) : P(C(T)) ? (T.responseTainting = "cors", await oo(m)) : A("URL scheme must be a HTTP(S) scheme")
      );
    })()), j)
      return J;
    J.status !== 0 && !J.internalResponse && (T.responseTainting, T.responseTainting === "basic" ? J = s(J, "basic") : T.responseTainting === "cors" ? J = s(J, "cors") : T.responseTainting === "opaque" ? J = s(J, "opaque") : k(!1));
    let tA = J.status === 0 ? J : J.internalResponse;
    if (tA.urlList.length === 0 && tA.urlList.push(...T.urlList), T.timingAllowFailed || (J.timingAllowPassed = !0), J.type === "opaque" && tA.status === 206 && tA.rangeRequested && !T.headers.contains("range") && (J = tA = A()), J.status !== 0 && (T.method === "HEAD" || T.method === "CONNECT" || Z.includes(tA.status)) && (tA.body = null, m.controller.dump = !0), T.integrity) {
      const V = (mA) => Lr(m, A(mA));
      if (T.responseTainting === "opaque" || J.body == null) {
        V(J.error);
        return;
      }
      const gA = (mA) => {
        if (!E(mA, T.integrity)) {
          V("integrity mismatch");
          return;
        }
        J.body = N(mA)[0], Lr(m, J);
      };
      await q(J.body, gA, V);
    } else
      Lr(m, J);
  }
  function Ur(m) {
    if (z(m) && m.request.redirectCount === 0)
      return Promise.resolve(t(m));
    const { request: j } = m, { protocol: T } = C(j);
    switch (T) {
      case "about:":
        return Promise.resolve(A("about scheme is not supported"));
      case "blob:": {
        AA || (AA = ze.resolveObjectURL);
        const J = C(j);
        if (J.search.length !== 0)
          return Promise.resolve(A("NetworkError when attempting to fetch resource."));
        const tA = AA(J.toString());
        if (j.method !== "GET" || !M(tA))
          return Promise.resolve(A("invalid method"));
        const V = N(tA), gA = V[0], mA = nA(`${gA.length}`), xA = V[1] ?? "", FA = r({
          statusText: "OK",
          headersList: [
            ["content-length", { name: "Content-Length", value: mA }],
            ["content-type", { name: "Content-Type", value: xA }]
          ]
        });
        return FA.body = gA, Promise.resolve(FA);
      }
      case "data:": {
        const J = C(j), tA = Ce(J);
        if (tA === "failure")
          return Promise.resolve(A("failed to fetch the data URL"));
        const V = $e(tA.mimeType);
        return Promise.resolve(r({
          statusText: "OK",
          headersList: [
            ["content-type", { name: "Content-Type", value: V }]
          ],
          body: N(tA.body)[0]
        }));
      }
      case "file:":
        return Promise.resolve(A("not implemented... yet..."));
      case "http:":
      case "https:":
        return oo(m).catch((J) => A(J));
      default:
        return Promise.resolve(A("unknown scheme"));
    }
  }
  function eg(m, j) {
    m.request.done = !0, m.processResponseDone != null && queueMicrotask(() => m.processResponseDone(j));
  }
  function Lr(m, j) {
    j.type === "error" && (j.urlList = [m.request.urlList[0]], j.timingInfo = l({
      startTime: m.timingInfo.startTime
    }));
    const T = () => {
      m.request.done = !0, m.processResponseEndOfBody != null && queueMicrotask(() => m.processResponseEndOfBody(j));
    };
    if (m.processResponse != null && queueMicrotask(() => m.processResponse(j)), j.body == null)
      T();
    else {
      const J = (V, gA) => {
        gA.enqueue(V);
      }, tA = new W({
        start() {
        },
        transform: J,
        flush: T
      }, {
        size() {
          return 1;
        }
      }, {
        size() {
          return 1;
        }
      });
      j.body = { stream: j.body.stream.pipeThrough(tA) };
    }
    if (m.processResponseConsumeBody != null) {
      const J = (V) => m.processResponseConsumeBody(j, V), tA = (V) => m.processResponseConsumeBody(j, V);
      if (j.body == null)
        queueMicrotask(() => J(null));
      else
        return q(j.body, J, tA);
      return Promise.resolve();
    }
  }
  async function oo(m) {
    const j = m.request;
    let T = null, J = null;
    const tA = m.timingInfo;
    if (j.serviceWorkers, T === null) {
      if (j.redirect === "follow" && (j.serviceWorkers = "none"), J = T = await no(m), j.responseTainting === "cors" && d(j, T) === "failure")
        return A("cors failure");
      h(j, T) === "failure" && (j.timingAllowFailed = !0);
    }
    return (j.responseTainting === "opaque" || T.type === "opaque") && p(
      j.origin,
      j.client,
      j.destination,
      J
    ) === "blocked" ? A("blocked") : (O.has(J.status) && (j.redirect !== "manual" && m.controller.connection.destroy(), j.redirect === "error" ? T = A("unexpected redirect") : j.redirect === "manual" ? T = J : j.redirect === "follow" ? T = await tg(m, T) : k(!1)), T.timingInfo = tA, T);
  }
  function tg(m, j) {
    const T = m.request, J = j.internalResponse ? j.internalResponse : j;
    let tA;
    try {
      if (tA = I(
        J,
        C(T).hash
      ), tA == null)
        return j;
    } catch (gA) {
      return Promise.resolve(A(gA));
    }
    if (!P(tA))
      return Promise.resolve(A("URL scheme must be a HTTP(S) scheme"));
    if (T.redirectCount === 20)
      return Promise.resolve(A("redirect count exceeded"));
    if (T.redirectCount += 1, T.mode === "cors" && (tA.username || tA.password) && !F(T, tA))
      return Promise.resolve(A('cross origin not allowed for request mode "cors"'));
    if (T.responseTainting === "cors" && (tA.username || tA.password))
      return Promise.resolve(A(
        'URL cannot contain credentials for request mode "cors"'
      ));
    if (J.status !== 303 && T.body != null && T.body.source == null)
      return Promise.resolve(A());
    if ([301, 302].includes(J.status) && T.method === "POST" || J.status === 303 && !G.includes(T.method)) {
      T.method = "GET", T.body = null;
      for (const gA of H)
        T.headersList.delete(gA);
    }
    F(C(T), tA) || (T.headersList.delete("authorization"), T.headersList.delete("proxy-authorization", !0), T.headersList.delete("cookie"), T.headersList.delete("host")), T.body != null && (k(T.body.source != null), T.body = N(T.body.source)[0]);
    const V = m.timingInfo;
    return V.redirectEndTime = V.postRedirectStartTime = D(m.crossOriginIsolatedCapability), V.redirectStartTime === 0 && (V.redirectStartTime = V.startTime), T.urlList.push(tA), f(T, J), Sr(m, !0);
  }
  async function no(m, j = !1, T = !1) {
    const J = m.request;
    let tA = null, V = null, gA = null;
    J.window === "no-window" && J.redirect === "error" ? (tA = m, V = J) : (V = g(J), tA = { ...m }, tA.request = V);
    const mA = J.credentials === "include" || J.credentials === "same-origin" && J.responseTainting === "basic", xA = V.body ? V.body.length : null;
    let FA = null;
    if (V.body == null && ["POST", "PUT"].includes(V.method) && (FA = "0"), xA != null && (FA = nA(`${xA}`)), FA != null && V.headersList.append("content-length", FA), xA != null && V.keepalive, V.referrer instanceof URL && V.headersList.append("referer", nA(V.referrer.href)), u(V), y(V), V.headersList.contains("user-agent") || V.headersList.append("user-agent", typeof esbuildDetection > "u" ? "undici" : "node"), V.cache === "default" && (V.headersList.contains("if-modified-since") || V.headersList.contains("if-none-match") || V.headersList.contains("if-unmodified-since") || V.headersList.contains("if-match") || V.headersList.contains("if-range")) && (V.cache = "no-store"), V.cache === "no-cache" && !V.preventNoCacheCacheControlHeaderModification && !V.headersList.contains("cache-control") && V.headersList.append("cache-control", "max-age=0"), (V.cache === "no-store" || V.cache === "reload") && (V.headersList.contains("pragma") || V.headersList.append("pragma", "no-cache"), V.headersList.contains("cache-control") || V.headersList.append("cache-control", "no-cache")), V.headersList.contains("range") && V.headersList.append("accept-encoding", "identity"), V.headersList.contains("accept-encoding") || (L(C(V)) ? V.headersList.append("accept-encoding", "br, gzip, deflate") : V.headersList.append("accept-encoding", "gzip, deflate")), V.headersList.delete("host"), V.cache = "no-store", V.mode !== "no-store" && V.mode, gA == null) {
      if (V.mode === "only-if-cached")
        return A("only if cached");
      const De = await rg(
        tA,
        mA,
        T
      );
      !x.has(V.method) && De.status >= 200 && De.status <= 399, gA == null && (gA = De);
    }
    if (gA.urlList = [...V.urlList], V.headersList.contains("range") && (gA.rangeRequested = !0), gA.requestIncludesCredentials = mA, gA.status === 407)
      return J.window === "no-window" ? A() : z(m) ? t(m) : A("proxy authentication required");
    if (
      // response’s status is 421
      gA.status === 421 && // isNewConnectionFetch is false
      !T && // request’s body is null, or request’s body is non-null and request’s body’s source is non-null
      (J.body == null || J.body.source != null)
    ) {
      if (z(m))
        return t(m);
      m.controller.connection.destroy(), gA = await no(
        m,
        j,
        !0
      );
    }
    return gA;
  }
  async function rg(m, j = !1, T = !1) {
    k(!m.controller.connection || m.controller.connection.destroyed), m.controller.connection = {
      abort: null,
      destroyed: !1,
      destroy(aA) {
        var lA;
        this.destroyed || (this.destroyed = !0, (lA = this.abort) == null || lA.call(this, aA ?? new IA("The operation was aborted.", "AbortError")));
      }
    };
    const J = m.request;
    let tA = null;
    const V = m.timingInfo;
    J.cache = "no-store", J.mode;
    let gA = null;
    if (J.body == null && m.processRequestEndOfBody)
      queueMicrotask(() => m.processRequestEndOfBody());
    else if (J.body != null) {
      const aA = async function* (SA) {
        var ge;
        z(m) || (yield SA, (ge = m.processRequestBodyChunkLength) == null || ge.call(m, SA.byteLength));
      }, lA = () => {
        z(m) || m.processRequestEndOfBody && m.processRequestEndOfBody();
      }, OA = (SA) => {
        z(m) || (SA.name === "AbortError" ? m.controller.abort() : m.controller.terminate(SA));
      };
      gA = async function* () {
        try {
          for await (const SA of J.body.stream)
            yield* aA(SA);
          lA();
        } catch (SA) {
          OA(SA);
        }
      }();
    }
    try {
      const { body: aA, status: lA, statusText: OA, headersList: SA, socket: ge } = await qt({ body: gA });
      if (ge)
        tA = r({ status: lA, statusText: OA, headersList: SA, socket: ge });
      else {
        const wA = aA[Symbol.asyncIterator]();
        m.controller.next = () => wA.next(), tA = r({ status: lA, statusText: OA, headersList: SA });
      }
    } catch (aA) {
      return aA.name === "AbortError" ? (m.controller.connection.destroy(), t(m, aA)) : A(aA);
    }
    const mA = () => {
      m.controller.resume();
    }, xA = (aA) => {
      m.controller.abort(aA);
    };
    sA || (sA = Ge.ReadableStream);
    const FA = new sA(
      {
        async start(aA) {
          m.controller.controller = aA;
        },
        async pull(aA) {
          await mA();
        },
        async cancel(aA) {
          await xA(aA);
        }
      },
      {
        highWaterMark: 0,
        size() {
          return 1;
        }
      }
    );
    tA.body = { stream: FA }, m.controller.on("terminated", De), m.controller.resume = async () => {
      for (; ; ) {
        let aA, lA;
        try {
          const { done: OA, value: SA } = await m.controller.next();
          if (U(m))
            break;
          aA = OA ? void 0 : SA;
        } catch (OA) {
          m.controller.ended && !V.encodedBodySize ? aA = void 0 : (aA = OA, lA = !0);
        }
        if (aA === void 0) {
          X(m.controller.controller), eg(m, tA);
          return;
        }
        if (V.decodedBodySize += (aA == null ? void 0 : aA.byteLength) ?? 0, lA) {
          m.controller.terminate(aA);
          return;
        }
        if (m.controller.controller.enqueue(new Uint8Array(aA)), pA(FA)) {
          m.controller.terminate();
          return;
        }
        if (!m.controller.controller.desiredSize)
          return;
      }
    };
    function De(aA) {
      U(m) ? (tA.aborted = !0, BA(FA) && m.controller.controller.error(
        m.controller.serializedAbortReason
      )) : BA(FA) && m.controller.controller.error(new TypeError("terminated", {
        cause: _(aA) ? aA : void 0
      })), m.controller.connection.destroy();
    }
    return tA;
    async function qt({ body: aA }) {
      const lA = C(J), OA = m.controller.dispatcher;
      return new Promise((SA, ge) => OA.dispatch(
        {
          path: lA.pathname + lA.search,
          origin: lA.origin,
          method: J.method,
          body: m.controller.dispatcher.isMockActive ? J.body && (J.body.source || J.body.stream) : aA,
          headers: J.headersList.entries,
          maxRedirections: 0,
          upgrade: J.mode === "websocket" ? "websocket" : void 0
        },
        {
          body: null,
          abort: null,
          onConnect(wA) {
            const { connection: TA } = m.controller;
            TA.destroyed ? wA(new IA("The operation was aborted.", "AbortError")) : (m.controller.on("terminated", wA), this.abort = TA.abort = wA);
          },
          onHeaders(wA, TA, Tr, _t) {
            if (wA < 200)
              return;
            let Re = [], ht = "";
            const ut = new o();
            if (Array.isArray(TA))
              for (let ee = 0; ee < TA.length; ee += 2) {
                const me = TA[ee + 0].toString("latin1"), Je = TA[ee + 1].toString("latin1");
                me.toLowerCase() === "content-encoding" ? Re = Je.toLowerCase().split(",").map((Mr) => Mr.trim()) : me.toLowerCase() === "location" && (ht = Je), ut[EA].append(me, Je);
              }
            else {
              const ee = Object.keys(TA);
              for (const me of ee) {
                const Je = TA[me];
                me.toLowerCase() === "content-encoding" ? Re = Je.toLowerCase().split(",").map((Mr) => Mr.trim()).reverse() : me.toLowerCase() === "location" && (ht = Je), ut[EA].append(me, Je);
              }
            }
            this.body = new kA({ read: Tr });
            const tt = [], sg = J.redirect === "follow" && ht && O.has(wA);
            if (J.method !== "HEAD" && J.method !== "CONNECT" && !Z.includes(wA) && !sg)
              for (const ee of Re)
                if (ee === "x-gzip" || ee === "gzip")
                  tt.push(i.createGunzip({
                    // Be less strict when decoding compressed responses, since sometimes
                    // servers send slightly invalid responses that are still accepted
                    // by common browsers.
                    // Always using Z_SYNC_FLUSH is what cURL does.
                    flush: i.constants.Z_SYNC_FLUSH,
                    finishFlush: i.constants.Z_SYNC_FLUSH
                  }));
                else if (ee === "deflate")
                  tt.push(i.createInflate());
                else if (ee === "br")
                  tt.push(i.createBrotliDecompress());
                else {
                  tt.length = 0;
                  break;
                }
            return SA({
              status: wA,
              statusText: _t,
              headersList: ut[EA],
              body: tt.length ? NA(this.body, ...tt, () => {
              }) : this.body.on("error", () => {
              })
            }), !0;
          },
          onData(wA) {
            if (m.controller.dump)
              return;
            const TA = wA;
            return V.encodedBodySize += TA.byteLength, this.body.push(TA);
          },
          onComplete() {
            this.abort && m.controller.off("terminated", this.abort), m.controller.ended = !0, this.body.push(null);
          },
          onError(wA) {
            var TA;
            this.abort && m.controller.off("terminated", this.abort), (TA = this.body) == null || TA.destroy(wA), m.controller.terminate(wA), ge(wA);
          },
          onUpgrade(wA, TA, Tr) {
            if (wA !== 101)
              return;
            const _t = new o();
            for (let Re = 0; Re < TA.length; Re += 2) {
              const ht = TA[Re + 0].toString("latin1"), ut = TA[Re + 1].toString("latin1");
              _t[EA].append(ht, ut);
            }
            return SA({
              status: wA,
              statusText: hA[wA],
              headersList: _t[EA],
              socket: Tr
            }), !0;
          }
        }
      ));
    }
  }
  return ca = {
    fetch: RA,
    Fetch: CA,
    fetching: we,
    finalizeAndReportTiming: HA
  }, ca;
}
var Ca, nB;
function Hu() {
  return nB || (nB = 1, Ca = {
    kState: Symbol("FileReader state"),
    kResult: Symbol("FileReader result"),
    kError: Symbol("FileReader error"),
    kLastProgressEventFired: Symbol("FileReader last progress event fired timestamp"),
    kEvents: Symbol("FileReader events"),
    kAborted: Symbol("FileReader aborted")
  }), Ca;
}
var Ba, iB;
function bk() {
  if (iB) return Ba;
  iB = 1;
  const { webidl: e } = At(), A = Symbol("ProgressEvent state");
  class t extends Event {
    constructor(r, o = {}) {
      r = e.converters.DOMString(r), o = e.converters.ProgressEventInit(o ?? {}), super(r, o), this[A] = {
        lengthComputable: o.lengthComputable,
        loaded: o.loaded,
        total: o.total
      };
    }
    get lengthComputable() {
      return e.brandCheck(this, t), this[A].lengthComputable;
    }
    get loaded() {
      return e.brandCheck(this, t), this[A].loaded;
    }
    get total() {
      return e.brandCheck(this, t), this[A].total;
    }
  }
  return e.converters.ProgressEventInit = e.dictionaryConverter([
    {
      key: "lengthComputable",
      converter: e.converters.boolean,
      defaultValue: !1
    },
    {
      key: "loaded",
      converter: e.converters["unsigned long long"],
      defaultValue: 0
    },
    {
      key: "total",
      converter: e.converters["unsigned long long"],
      defaultValue: 0
    },
    {
      key: "bubbles",
      converter: e.converters.boolean,
      defaultValue: !1
    },
    {
      key: "cancelable",
      converter: e.converters.boolean,
      defaultValue: !1
    },
    {
      key: "composed",
      converter: e.converters.boolean,
      defaultValue: !1
    }
  ]), Ba = {
    ProgressEvent: t
  }, Ba;
}
var Ia, gB;
function Nk() {
  if (gB) return Ia;
  gB = 1;
  function e(A) {
    if (!A)
      return "failure";
    switch (A.trim().toLowerCase()) {
      case "unicode-1-1-utf-8":
      case "unicode11utf8":
      case "unicode20utf8":
      case "utf-8":
      case "utf8":
      case "x-unicode20utf8":
        return "UTF-8";
      case "866":
      case "cp866":
      case "csibm866":
      case "ibm866":
        return "IBM866";
      case "csisolatin2":
      case "iso-8859-2":
      case "iso-ir-101":
      case "iso8859-2":
      case "iso88592":
      case "iso_8859-2":
      case "iso_8859-2:1987":
      case "l2":
      case "latin2":
        return "ISO-8859-2";
      case "csisolatin3":
      case "iso-8859-3":
      case "iso-ir-109":
      case "iso8859-3":
      case "iso88593":
      case "iso_8859-3":
      case "iso_8859-3:1988":
      case "l3":
      case "latin3":
        return "ISO-8859-3";
      case "csisolatin4":
      case "iso-8859-4":
      case "iso-ir-110":
      case "iso8859-4":
      case "iso88594":
      case "iso_8859-4":
      case "iso_8859-4:1988":
      case "l4":
      case "latin4":
        return "ISO-8859-4";
      case "csisolatincyrillic":
      case "cyrillic":
      case "iso-8859-5":
      case "iso-ir-144":
      case "iso8859-5":
      case "iso88595":
      case "iso_8859-5":
      case "iso_8859-5:1988":
        return "ISO-8859-5";
      case "arabic":
      case "asmo-708":
      case "csiso88596e":
      case "csiso88596i":
      case "csisolatinarabic":
      case "ecma-114":
      case "iso-8859-6":
      case "iso-8859-6-e":
      case "iso-8859-6-i":
      case "iso-ir-127":
      case "iso8859-6":
      case "iso88596":
      case "iso_8859-6":
      case "iso_8859-6:1987":
        return "ISO-8859-6";
      case "csisolatingreek":
      case "ecma-118":
      case "elot_928":
      case "greek":
      case "greek8":
      case "iso-8859-7":
      case "iso-ir-126":
      case "iso8859-7":
      case "iso88597":
      case "iso_8859-7":
      case "iso_8859-7:1987":
      case "sun_eu_greek":
        return "ISO-8859-7";
      case "csiso88598e":
      case "csisolatinhebrew":
      case "hebrew":
      case "iso-8859-8":
      case "iso-8859-8-e":
      case "iso-ir-138":
      case "iso8859-8":
      case "iso88598":
      case "iso_8859-8":
      case "iso_8859-8:1988":
      case "visual":
        return "ISO-8859-8";
      case "csiso88598i":
      case "iso-8859-8-i":
      case "logical":
        return "ISO-8859-8-I";
      case "csisolatin6":
      case "iso-8859-10":
      case "iso-ir-157":
      case "iso8859-10":
      case "iso885910":
      case "l6":
      case "latin6":
        return "ISO-8859-10";
      case "iso-8859-13":
      case "iso8859-13":
      case "iso885913":
        return "ISO-8859-13";
      case "iso-8859-14":
      case "iso8859-14":
      case "iso885914":
        return "ISO-8859-14";
      case "csisolatin9":
      case "iso-8859-15":
      case "iso8859-15":
      case "iso885915":
      case "iso_8859-15":
      case "l9":
        return "ISO-8859-15";
      case "iso-8859-16":
        return "ISO-8859-16";
      case "cskoi8r":
      case "koi":
      case "koi8":
      case "koi8-r":
      case "koi8_r":
        return "KOI8-R";
      case "koi8-ru":
      case "koi8-u":
        return "KOI8-U";
      case "csmacintosh":
      case "mac":
      case "macintosh":
      case "x-mac-roman":
        return "macintosh";
      case "iso-8859-11":
      case "iso8859-11":
      case "iso885911":
      case "tis-620":
      case "windows-874":
        return "windows-874";
      case "cp1250":
      case "windows-1250":
      case "x-cp1250":
        return "windows-1250";
      case "cp1251":
      case "windows-1251":
      case "x-cp1251":
        return "windows-1251";
      case "ansi_x3.4-1968":
      case "ascii":
      case "cp1252":
      case "cp819":
      case "csisolatin1":
      case "ibm819":
      case "iso-8859-1":
      case "iso-ir-100":
      case "iso8859-1":
      case "iso88591":
      case "iso_8859-1":
      case "iso_8859-1:1987":
      case "l1":
      case "latin1":
      case "us-ascii":
      case "windows-1252":
      case "x-cp1252":
        return "windows-1252";
      case "cp1253":
      case "windows-1253":
      case "x-cp1253":
        return "windows-1253";
      case "cp1254":
      case "csisolatin5":
      case "iso-8859-9":
      case "iso-ir-148":
      case "iso8859-9":
      case "iso88599":
      case "iso_8859-9":
      case "iso_8859-9:1989":
      case "l5":
      case "latin5":
      case "windows-1254":
      case "x-cp1254":
        return "windows-1254";
      case "cp1255":
      case "windows-1255":
      case "x-cp1255":
        return "windows-1255";
      case "cp1256":
      case "windows-1256":
      case "x-cp1256":
        return "windows-1256";
      case "cp1257":
      case "windows-1257":
      case "x-cp1257":
        return "windows-1257";
      case "cp1258":
      case "windows-1258":
      case "x-cp1258":
        return "windows-1258";
      case "x-mac-cyrillic":
      case "x-mac-ukrainian":
        return "x-mac-cyrillic";
      case "chinese":
      case "csgb2312":
      case "csiso58gb231280":
      case "gb2312":
      case "gb_2312":
      case "gb_2312-80":
      case "gbk":
      case "iso-ir-58":
      case "x-gbk":
        return "GBK";
      case "gb18030":
        return "gb18030";
      case "big5":
      case "big5-hkscs":
      case "cn-big5":
      case "csbig5":
      case "x-x-big5":
        return "Big5";
      case "cseucpkdfmtjapanese":
      case "euc-jp":
      case "x-euc-jp":
        return "EUC-JP";
      case "csiso2022jp":
      case "iso-2022-jp":
        return "ISO-2022-JP";
      case "csshiftjis":
      case "ms932":
      case "ms_kanji":
      case "shift-jis":
      case "shift_jis":
      case "sjis":
      case "windows-31j":
      case "x-sjis":
        return "Shift_JIS";
      case "cseuckr":
      case "csksc56011987":
      case "euc-kr":
      case "iso-ir-149":
      case "korean":
      case "ks_c_5601-1987":
      case "ks_c_5601-1989":
      case "ksc5601":
      case "ksc_5601":
      case "windows-949":
        return "EUC-KR";
      case "csiso2022kr":
      case "hz-gb-2312":
      case "iso-2022-cn":
      case "iso-2022-cn-ext":
      case "iso-2022-kr":
      case "replacement":
        return "replacement";
      case "unicodefffe":
      case "utf-16be":
        return "UTF-16BE";
      case "csunicode":
      case "iso-10646-ucs-2":
      case "ucs-2":
      case "unicode":
      case "unicodefeff":
      case "utf-16":
      case "utf-16le":
        return "UTF-16LE";
      case "x-user-defined":
        return "x-user-defined";
      default:
        return "failure";
    }
  }
  return Ia = {
    getEncoding: e
  }, Ia;
}
var la, aB;
function Sk() {
  if (aB) return la;
  aB = 1;
  const {
    kState: e,
    kError: A,
    kResult: t,
    kAborted: s,
    kLastProgressEventFired: r
  } = Hu(), { ProgressEvent: o } = bk(), { getEncoding: n } = Nk(), { DOMException: g } = Cs(), { serializeAMimeType: i, parseMIMEType: E } = Pt(), { types: a } = le, { StringDecoder: Q } = UQ, { btoa: c } = ze, h = {
    enumerable: !0,
    writable: !1,
    configurable: !1
  };
  function u(y, d, p, R) {
    if (y[e] === "loading")
      throw new g("Invalid state", "InvalidStateError");
    y[e] = "loading", y[t] = null, y[A] = null;
    const b = d.stream().getReader(), M = [];
    let F = b.read(), z = !0;
    (async () => {
      for (; !y[s]; )
        try {
          const { done: U, value: _ } = await F;
          if (z && !y[s] && queueMicrotask(() => {
            I("loadstart", y);
          }), z = !1, !U && a.isUint8Array(_))
            M.push(_), (y[r] === void 0 || Date.now() - y[r] >= 50) && !y[s] && (y[r] = Date.now(), queueMicrotask(() => {
              I("progress", y);
            })), F = b.read();
          else if (U) {
            queueMicrotask(() => {
              y[e] = "done";
              try {
                const q = C(M, p, d.type, R);
                if (y[s])
                  return;
                y[t] = q, I("load", y);
              } catch (q) {
                y[A] = q, I("error", y);
              }
              y[e] !== "loading" && I("loadend", y);
            });
            break;
          }
        } catch (U) {
          if (y[s])
            return;
          queueMicrotask(() => {
            y[e] = "done", y[A] = U, I("error", y), y[e] !== "loading" && I("loadend", y);
          });
          break;
        }
    })();
  }
  function I(y, d) {
    const p = new o(y, {
      bubbles: !1,
      cancelable: !1
    });
    d.dispatchEvent(p);
  }
  function C(y, d, p, R) {
    switch (d) {
      case "DataURL": {
        let D = "data:";
        const b = E(p || "application/octet-stream");
        b !== "failure" && (D += i(b)), D += ";base64,";
        const M = new Q("latin1");
        for (const F of y)
          D += c(M.write(F));
        return D += c(M.end()), D;
      }
      case "Text": {
        let D = "failure";
        if (R && (D = n(R)), D === "failure" && p) {
          const b = E(p);
          b !== "failure" && (D = n(b.parameters.get("charset")));
        }
        return D === "failure" && (D = "UTF-8"), f(y, D);
      }
      case "ArrayBuffer":
        return l(y).buffer;
      case "BinaryString": {
        let D = "";
        const b = new Q("latin1");
        for (const M of y)
          D += b.write(M);
        return D += b.end(), D;
      }
    }
  }
  function f(y, d) {
    const p = l(y), R = B(p);
    let D = 0;
    R !== null && (d = R, D = R === "UTF-8" ? 3 : 2);
    const b = p.slice(D);
    return new TextDecoder(d).decode(b);
  }
  function B(y) {
    const [d, p, R] = y;
    return d === 239 && p === 187 && R === 191 ? "UTF-8" : d === 254 && p === 255 ? "UTF-16BE" : d === 255 && p === 254 ? "UTF-16LE" : null;
  }
  function l(y) {
    const d = y.reduce((R, D) => R + D.byteLength, 0);
    let p = 0;
    return y.reduce((R, D) => (R.set(D, p), p += D.byteLength, R), new Uint8Array(d));
  }
  return la = {
    staticPropertyDescriptors: h,
    readOperation: u,
    fireAProgressEvent: I
  }, la;
}
var ha, EB;
function Uk() {
  if (EB) return ha;
  EB = 1;
  const {
    staticPropertyDescriptors: e,
    readOperation: A,
    fireAProgressEvent: t
  } = Sk(), {
    kState: s,
    kError: r,
    kResult: o,
    kEvents: n,
    kAborted: g
  } = Hu(), { webidl: i } = At(), { kEnumerableProperty: E } = JA;
  class a extends EventTarget {
    constructor() {
      super(), this[s] = "empty", this[o] = null, this[r] = null, this[n] = {
        loadend: null,
        error: null,
        abort: null,
        load: null,
        progress: null,
        loadstart: null
      };
    }
    /**
     * @see https://w3c.github.io/FileAPI/#dfn-readAsArrayBuffer
     * @param {import('buffer').Blob} blob
     */
    readAsArrayBuffer(c) {
      i.brandCheck(this, a), i.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsArrayBuffer" }), c = i.converters.Blob(c, { strict: !1 }), A(this, c, "ArrayBuffer");
    }
    /**
     * @see https://w3c.github.io/FileAPI/#readAsBinaryString
     * @param {import('buffer').Blob} blob
     */
    readAsBinaryString(c) {
      i.brandCheck(this, a), i.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsBinaryString" }), c = i.converters.Blob(c, { strict: !1 }), A(this, c, "BinaryString");
    }
    /**
     * @see https://w3c.github.io/FileAPI/#readAsDataText
     * @param {import('buffer').Blob} blob
     * @param {string?} encoding
     */
    readAsText(c, h = void 0) {
      i.brandCheck(this, a), i.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsText" }), c = i.converters.Blob(c, { strict: !1 }), h !== void 0 && (h = i.converters.DOMString(h)), A(this, c, "Text", h);
    }
    /**
     * @see https://w3c.github.io/FileAPI/#dfn-readAsDataURL
     * @param {import('buffer').Blob} blob
     */
    readAsDataURL(c) {
      i.brandCheck(this, a), i.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsDataURL" }), c = i.converters.Blob(c, { strict: !1 }), A(this, c, "DataURL");
    }
    /**
     * @see https://w3c.github.io/FileAPI/#dfn-abort
     */
    abort() {
      if (this[s] === "empty" || this[s] === "done") {
        this[o] = null;
        return;
      }
      this[s] === "loading" && (this[s] = "done", this[o] = null), this[g] = !0, t("abort", this), this[s] !== "loading" && t("loadend", this);
    }
    /**
     * @see https://w3c.github.io/FileAPI/#dom-filereader-readystate
     */
    get readyState() {
      switch (i.brandCheck(this, a), this[s]) {
        case "empty":
          return this.EMPTY;
        case "loading":
          return this.LOADING;
        case "done":
          return this.DONE;
      }
    }
    /**
     * @see https://w3c.github.io/FileAPI/#dom-filereader-result
     */
    get result() {
      return i.brandCheck(this, a), this[o];
    }
    /**
     * @see https://w3c.github.io/FileAPI/#dom-filereader-error
     */
    get error() {
      return i.brandCheck(this, a), this[r];
    }
    get onloadend() {
      return i.brandCheck(this, a), this[n].loadend;
    }
    set onloadend(c) {
      i.brandCheck(this, a), this[n].loadend && this.removeEventListener("loadend", this[n].loadend), typeof c == "function" ? (this[n].loadend = c, this.addEventListener("loadend", c)) : this[n].loadend = null;
    }
    get onerror() {
      return i.brandCheck(this, a), this[n].error;
    }
    set onerror(c) {
      i.brandCheck(this, a), this[n].error && this.removeEventListener("error", this[n].error), typeof c == "function" ? (this[n].error = c, this.addEventListener("error", c)) : this[n].error = null;
    }
    get onloadstart() {
      return i.brandCheck(this, a), this[n].loadstart;
    }
    set onloadstart(c) {
      i.brandCheck(this, a), this[n].loadstart && this.removeEventListener("loadstart", this[n].loadstart), typeof c == "function" ? (this[n].loadstart = c, this.addEventListener("loadstart", c)) : this[n].loadstart = null;
    }
    get onprogress() {
      return i.brandCheck(this, a), this[n].progress;
    }
    set onprogress(c) {
      i.brandCheck(this, a), this[n].progress && this.removeEventListener("progress", this[n].progress), typeof c == "function" ? (this[n].progress = c, this.addEventListener("progress", c)) : this[n].progress = null;
    }
    get onload() {
      return i.brandCheck(this, a), this[n].load;
    }
    set onload(c) {
      i.brandCheck(this, a), this[n].load && this.removeEventListener("load", this[n].load), typeof c == "function" ? (this[n].load = c, this.addEventListener("load", c)) : this[n].load = null;
    }
    get onabort() {
      return i.brandCheck(this, a), this[n].abort;
    }
    set onabort(c) {
      i.brandCheck(this, a), this[n].abort && this.removeEventListener("abort", this[n].abort), typeof c == "function" ? (this[n].abort = c, this.addEventListener("abort", c)) : this[n].abort = null;
    }
  }
  return a.EMPTY = a.prototype.EMPTY = 0, a.LOADING = a.prototype.LOADING = 1, a.DONE = a.prototype.DONE = 2, Object.defineProperties(a.prototype, {
    EMPTY: e,
    LOADING: e,
    DONE: e,
    readAsArrayBuffer: E,
    readAsBinaryString: E,
    readAsText: E,
    readAsDataURL: E,
    abort: E,
    readyState: E,
    result: E,
    error: E,
    onloadstart: E,
    onprogress: E,
    onload: E,
    onabort: E,
    onerror: E,
    onloadend: E,
    [Symbol.toStringTag]: {
      value: "FileReader",
      writable: !1,
      enumerable: !1,
      configurable: !0
    }
  }), Object.defineProperties(a, {
    EMPTY: e,
    LOADING: e,
    DONE: e
  }), ha = {
    FileReader: a
  }, ha;
}
var ua, QB;
function XQ() {
  return QB || (QB = 1, ua = {
    kConstruct: zA.kConstruct
  }), ua;
}
var da, cB;
function Lk() {
  if (cB) return da;
  cB = 1;
  const e = bA, { URLSerializer: A } = Pt(), { isValidHeaderName: t } = Rt();
  function s(o, n, g = !1) {
    const i = A(o, g), E = A(n, g);
    return i === E;
  }
  function r(o) {
    e(o !== null);
    const n = [];
    for (let g of o.split(",")) {
      if (g = g.trim(), g.length) {
        if (!t(g))
          continue;
      } else continue;
      n.push(g);
    }
    return n;
  }
  return da = {
    urlEquals: s,
    fieldValues: r
  }, da;
}
var fa, CB;
function Tk() {
  var p, R, ai, Fs, Vu;
  if (CB) return fa;
  CB = 1;
  const { kConstruct: e } = XQ(), { urlEquals: A, fieldValues: t } = Lk(), { kEnumerableProperty: s, isDisturbed: r } = JA, { kHeadersList: o } = zA, { webidl: n } = At(), { Response: g, cloneResponse: i } = $Q(), { Request: E } = vi(), { kState: a, kHeaders: Q, kGuard: c, kRealm: h } = br(), { fetching: u } = ZQ(), { urlIsHttpHttpsScheme: I, createDeferredPromise: C, readAllBytes: f } = Rt(), B = bA, { getGlobalDispatcher: l } = An, F = class F {
    constructor() {
      YA(this, R);
      /**
       * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-request-response-list
       * @type {requestResponseList}
       */
      YA(this, p);
      arguments[0] !== e && n.illegalConstructor(), uA(this, p, arguments[1]);
    }
    async match(U, _ = {}) {
      n.brandCheck(this, F), n.argumentLengthCheck(arguments, 1, { header: "Cache.match" }), U = n.converters.RequestInfo(U), _ = n.converters.CacheQueryOptions(_);
      const q = await this.matchAll(U, _);
      if (q.length !== 0)
        return q[0];
    }
    async matchAll(U = void 0, _ = {}) {
      var K;
      n.brandCheck(this, F), U !== void 0 && (U = n.converters.RequestInfo(U)), _ = n.converters.CacheQueryOptions(_);
      let q = null;
      if (U !== void 0)
        if (U instanceof E) {
          if (q = U[a], q.method !== "GET" && !_.ignoreMethod)
            return [];
        } else typeof U == "string" && (q = new E(U)[a]);
      const X = [];
      if (U === void 0)
        for (const P of S(this, p))
          X.push(P[1]);
      else {
        const P = ae(this, R, Fs).call(this, q, _);
        for (const L of P)
          X.push(L[1]);
      }
      const nA = [];
      for (const P of X) {
        const L = new g(((K = P.body) == null ? void 0 : K.source) ?? null), eA = L[a].body;
        L[a] = P, L[a].body = eA, L[Q][o] = P.headersList, L[Q][c] = "immutable", nA.push(L);
      }
      return Object.freeze(nA);
    }
    async add(U) {
      n.brandCheck(this, F), n.argumentLengthCheck(arguments, 1, { header: "Cache.add" }), U = n.converters.RequestInfo(U);
      const _ = [U];
      return await this.addAll(_);
    }
    async addAll(U) {
      n.brandCheck(this, F), n.argumentLengthCheck(arguments, 1, { header: "Cache.addAll" }), U = n.converters["sequence<RequestInfo>"](U);
      const _ = [], q = [];
      for (const Y of U) {
        if (typeof Y == "string")
          continue;
        const w = Y[a];
        if (!I(w.url) || w.method !== "GET")
          throw n.errors.exception({
            header: "Cache.addAll",
            message: "Expected http/s scheme when method is not GET."
          });
      }
      const X = [];
      for (const Y of U) {
        const w = new E(Y)[a];
        if (!I(w.url))
          throw n.errors.exception({
            header: "Cache.addAll",
            message: "Expected http/s scheme."
          });
        w.initiator = "fetch", w.destination = "subresource", q.push(w);
        const k = C();
        X.push(u({
          request: w,
          dispatcher: l(),
          processResponse(N) {
            if (N.type === "error" || N.status === 206 || N.status < 200 || N.status > 299)
              k.reject(n.errors.exception({
                header: "Cache.addAll",
                message: "Received an invalid status code or the request failed."
              }));
            else if (N.headersList.contains("vary")) {
              const O = t(N.headersList.get("vary"));
              for (const Z of O)
                if (Z === "*") {
                  k.reject(n.errors.exception({
                    header: "Cache.addAll",
                    message: "invalid vary field value"
                  }));
                  for (const x of X)
                    x.abort();
                  return;
                }
            }
          },
          processResponseEndOfBody(N) {
            if (N.aborted) {
              k.reject(new DOMException("aborted", "AbortError"));
              return;
            }
            k.resolve(N);
          }
        })), _.push(k.promise);
      }
      const K = await Promise.all(_), P = [];
      let L = 0;
      for (const Y of K) {
        const w = {
          type: "put",
          // 7.3.2
          request: q[L],
          // 7.3.3
          response: Y
          // 7.3.4
        };
        P.push(w), L++;
      }
      const eA = C();
      let v = null;
      try {
        ae(this, R, ai).call(this, P);
      } catch (Y) {
        v = Y;
      }
      return queueMicrotask(() => {
        v === null ? eA.resolve(void 0) : eA.reject(v);
      }), eA.promise;
    }
    async put(U, _) {
      n.brandCheck(this, F), n.argumentLengthCheck(arguments, 2, { header: "Cache.put" }), U = n.converters.RequestInfo(U), _ = n.converters.Response(_);
      let q = null;
      if (U instanceof E ? q = U[a] : q = new E(U)[a], !I(q.url) || q.method !== "GET")
        throw n.errors.exception({
          header: "Cache.put",
          message: "Expected an http/s scheme when method is not GET"
        });
      const X = _[a];
      if (X.status === 206)
        throw n.errors.exception({
          header: "Cache.put",
          message: "Got 206 status"
        });
      if (X.headersList.contains("vary")) {
        const w = t(X.headersList.get("vary"));
        for (const k of w)
          if (k === "*")
            throw n.errors.exception({
              header: "Cache.put",
              message: "Got * vary field value"
            });
      }
      if (X.body && (r(X.body.stream) || X.body.stream.locked))
        throw n.errors.exception({
          header: "Cache.put",
          message: "Response body is locked or disturbed"
        });
      const nA = i(X), K = C();
      if (X.body != null) {
        const k = X.body.stream.getReader();
        f(k).then(K.resolve, K.reject);
      } else
        K.resolve(void 0);
      const P = [], L = {
        type: "put",
        // 14.
        request: q,
        // 15.
        response: nA
        // 16.
      };
      P.push(L);
      const eA = await K.promise;
      nA.body != null && (nA.body.source = eA);
      const v = C();
      let Y = null;
      try {
        ae(this, R, ai).call(this, P);
      } catch (w) {
        Y = w;
      }
      return queueMicrotask(() => {
        Y === null ? v.resolve() : v.reject(Y);
      }), v.promise;
    }
    async delete(U, _ = {}) {
      n.brandCheck(this, F), n.argumentLengthCheck(arguments, 1, { header: "Cache.delete" }), U = n.converters.RequestInfo(U), _ = n.converters.CacheQueryOptions(_);
      let q = null;
      if (U instanceof E) {
        if (q = U[a], q.method !== "GET" && !_.ignoreMethod)
          return !1;
      } else
        B(typeof U == "string"), q = new E(U)[a];
      const X = [], nA = {
        type: "delete",
        request: q,
        options: _
      };
      X.push(nA);
      const K = C();
      let P = null, L;
      try {
        L = ae(this, R, ai).call(this, X);
      } catch (eA) {
        P = eA;
      }
      return queueMicrotask(() => {
        P === null ? K.resolve(!!(L != null && L.length)) : K.reject(P);
      }), K.promise;
    }
    /**
     * @see https://w3c.github.io/ServiceWorker/#dom-cache-keys
     * @param {any} request
     * @param {import('../../types/cache').CacheQueryOptions} options
     * @returns {readonly Request[]}
     */
    async keys(U = void 0, _ = {}) {
      n.brandCheck(this, F), U !== void 0 && (U = n.converters.RequestInfo(U)), _ = n.converters.CacheQueryOptions(_);
      let q = null;
      if (U !== void 0)
        if (U instanceof E) {
          if (q = U[a], q.method !== "GET" && !_.ignoreMethod)
            return [];
        } else typeof U == "string" && (q = new E(U)[a]);
      const X = C(), nA = [];
      if (U === void 0)
        for (const K of S(this, p))
          nA.push(K[0]);
      else {
        const K = ae(this, R, Fs).call(this, q, _);
        for (const P of K)
          nA.push(P[0]);
      }
      return queueMicrotask(() => {
        const K = [];
        for (const P of nA) {
          const L = new E("https://a");
          L[a] = P, L[Q][o] = P.headersList, L[Q][c] = "immutable", L[h] = P.client, K.push(L);
        }
        X.resolve(Object.freeze(K));
      }), X.promise;
    }
  };
  p = new WeakMap(), R = new WeakSet(), /**
   * @see https://w3c.github.io/ServiceWorker/#batch-cache-operations-algorithm
   * @param {CacheBatchOperation[]} operations
   * @returns {requestResponseList}
   */
  ai = function(U) {
    const _ = S(this, p), q = [..._], X = [], nA = [];
    try {
      for (const K of U) {
        if (K.type !== "delete" && K.type !== "put")
          throw n.errors.exception({
            header: "Cache.#batchCacheOperations",
            message: 'operation type does not match "delete" or "put"'
          });
        if (K.type === "delete" && K.response != null)
          throw n.errors.exception({
            header: "Cache.#batchCacheOperations",
            message: "delete operation should not have an associated response"
          });
        if (ae(this, R, Fs).call(this, K.request, K.options, X).length)
          throw new DOMException("???", "InvalidStateError");
        let P;
        if (K.type === "delete") {
          if (P = ae(this, R, Fs).call(this, K.request, K.options), P.length === 0)
            return [];
          for (const L of P) {
            const eA = _.indexOf(L);
            B(eA !== -1), _.splice(eA, 1);
          }
        } else if (K.type === "put") {
          if (K.response == null)
            throw n.errors.exception({
              header: "Cache.#batchCacheOperations",
              message: "put operation should have an associated response"
            });
          const L = K.request;
          if (!I(L.url))
            throw n.errors.exception({
              header: "Cache.#batchCacheOperations",
              message: "expected http or https scheme"
            });
          if (L.method !== "GET")
            throw n.errors.exception({
              header: "Cache.#batchCacheOperations",
              message: "not get method"
            });
          if (K.options != null)
            throw n.errors.exception({
              header: "Cache.#batchCacheOperations",
              message: "options must not be defined"
            });
          P = ae(this, R, Fs).call(this, K.request);
          for (const eA of P) {
            const v = _.indexOf(eA);
            B(v !== -1), _.splice(v, 1);
          }
          _.push([K.request, K.response]), X.push([K.request, K.response]);
        }
        nA.push([K.request, K.response]);
      }
      return nA;
    } catch (K) {
      throw S(this, p).length = 0, uA(this, p, q), K;
    }
  }, /**
   * @see https://w3c.github.io/ServiceWorker/#query-cache
   * @param {any} requestQuery
   * @param {import('../../types/cache').CacheQueryOptions} options
   * @param {requestResponseList} targetStorage
   * @returns {requestResponseList}
   */
  Fs = function(U, _, q) {
    const X = [], nA = q ?? S(this, p);
    for (const K of nA) {
      const [P, L] = K;
      ae(this, R, Vu).call(this, U, P, L, _) && X.push(K);
    }
    return X;
  }, /**
   * @see https://w3c.github.io/ServiceWorker/#request-matches-cached-item-algorithm
   * @param {any} requestQuery
   * @param {any} request
   * @param {any | null} response
   * @param {import('../../types/cache').CacheQueryOptions | undefined} options
   * @returns {boolean}
   */
  Vu = function(U, _, q = null, X) {
    const nA = new URL(U.url), K = new URL(_.url);
    if (X != null && X.ignoreSearch && (K.search = "", nA.search = ""), !A(nA, K, !0))
      return !1;
    if (q == null || X != null && X.ignoreVary || !q.headersList.contains("vary"))
      return !0;
    const P = t(q.headersList.get("vary"));
    for (const L of P) {
      if (L === "*")
        return !1;
      const eA = _.headersList.get(L), v = U.headersList.get(L);
      if (eA !== v)
        return !1;
    }
    return !0;
  };
  let y = F;
  Object.defineProperties(y.prototype, {
    [Symbol.toStringTag]: {
      value: "Cache",
      configurable: !0
    },
    match: s,
    matchAll: s,
    add: s,
    addAll: s,
    put: s,
    delete: s,
    keys: s
  });
  const d = [
    {
      key: "ignoreSearch",
      converter: n.converters.boolean,
      defaultValue: !1
    },
    {
      key: "ignoreMethod",
      converter: n.converters.boolean,
      defaultValue: !1
    },
    {
      key: "ignoreVary",
      converter: n.converters.boolean,
      defaultValue: !1
    }
  ];
  return n.converters.CacheQueryOptions = n.dictionaryConverter(d), n.converters.MultiCacheQueryOptions = n.dictionaryConverter([
    ...d,
    {
      key: "cacheName",
      converter: n.converters.DOMString
    }
  ]), n.converters.Response = n.interfaceConverter(g), n.converters["sequence<RequestInfo>"] = n.sequenceConverter(
    n.converters.RequestInfo
  ), fa = {
    Cache: y
  }, fa;
}
var pa, BB;
function Mk() {
  var o;
  if (BB) return pa;
  BB = 1;
  const { kConstruct: e } = XQ(), { Cache: A } = Tk(), { webidl: t } = At(), { kEnumerableProperty: s } = JA, n = class n {
    constructor() {
      /**
       * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-name-to-cache-map
       * @type {Map<string, import('./cache').requestResponseList}
       */
      YA(this, o, /* @__PURE__ */ new Map());
      arguments[0] !== e && t.illegalConstructor();
    }
    async match(i, E = {}) {
      if (t.brandCheck(this, n), t.argumentLengthCheck(arguments, 1, { header: "CacheStorage.match" }), i = t.converters.RequestInfo(i), E = t.converters.MultiCacheQueryOptions(E), E.cacheName != null) {
        if (S(this, o).has(E.cacheName)) {
          const a = S(this, o).get(E.cacheName);
          return await new A(e, a).match(i, E);
        }
      } else
        for (const a of S(this, o).values()) {
          const c = await new A(e, a).match(i, E);
          if (c !== void 0)
            return c;
        }
    }
    /**
     * @see https://w3c.github.io/ServiceWorker/#cache-storage-has
     * @param {string} cacheName
     * @returns {Promise<boolean>}
     */
    async has(i) {
      return t.brandCheck(this, n), t.argumentLengthCheck(arguments, 1, { header: "CacheStorage.has" }), i = t.converters.DOMString(i), S(this, o).has(i);
    }
    /**
     * @see https://w3c.github.io/ServiceWorker/#dom-cachestorage-open
     * @param {string} cacheName
     * @returns {Promise<Cache>}
     */
    async open(i) {
      if (t.brandCheck(this, n), t.argumentLengthCheck(arguments, 1, { header: "CacheStorage.open" }), i = t.converters.DOMString(i), S(this, o).has(i)) {
        const a = S(this, o).get(i);
        return new A(e, a);
      }
      const E = [];
      return S(this, o).set(i, E), new A(e, E);
    }
    /**
     * @see https://w3c.github.io/ServiceWorker/#cache-storage-delete
     * @param {string} cacheName
     * @returns {Promise<boolean>}
     */
    async delete(i) {
      return t.brandCheck(this, n), t.argumentLengthCheck(arguments, 1, { header: "CacheStorage.delete" }), i = t.converters.DOMString(i), S(this, o).delete(i);
    }
    /**
     * @see https://w3c.github.io/ServiceWorker/#cache-storage-keys
     * @returns {string[]}
     */
    async keys() {
      return t.brandCheck(this, n), [...S(this, o).keys()];
    }
  };
  o = new WeakMap();
  let r = n;
  return Object.defineProperties(r.prototype, {
    [Symbol.toStringTag]: {
      value: "CacheStorage",
      configurable: !0
    },
    match: s,
    has: s,
    open: s,
    delete: s,
    keys: s
  }), pa = {
    CacheStorage: r
  }, pa;
}
var ya, IB;
function Gk() {
  return IB || (IB = 1, ya = {
    maxAttributeValueSize: 1024,
    maxNameValuePairSize: 4096
  }), ya;
}
var wa, lB;
function xu() {
  if (lB) return wa;
  lB = 1;
  const e = bA, { kHeadersList: A } = zA;
  function t(c) {
    if (c.length === 0)
      return !1;
    for (const h of c) {
      const u = h.charCodeAt(0);
      if (u >= 0 || u <= 8 || u >= 10 || u <= 31 || u === 127)
        return !1;
    }
  }
  function s(c) {
    for (const h of c) {
      const u = h.charCodeAt(0);
      if (u <= 32 || u > 127 || h === "(" || h === ")" || h === ">" || h === "<" || h === "@" || h === "," || h === ";" || h === ":" || h === "\\" || h === '"' || h === "/" || h === "[" || h === "]" || h === "?" || h === "=" || h === "{" || h === "}")
        throw new Error("Invalid cookie name");
    }
  }
  function r(c) {
    for (const h of c) {
      const u = h.charCodeAt(0);
      if (u < 33 || // exclude CTLs (0-31)
      u === 34 || u === 44 || u === 59 || u === 92 || u > 126)
        throw new Error("Invalid header value");
    }
  }
  function o(c) {
    for (const h of c)
      if (h.charCodeAt(0) < 33 || h === ";")
        throw new Error("Invalid cookie path");
  }
  function n(c) {
    if (c.startsWith("-") || c.endsWith(".") || c.endsWith("-"))
      throw new Error("Invalid cookie domain");
  }
  function g(c) {
    typeof c == "number" && (c = new Date(c));
    const h = [
      "Sun",
      "Mon",
      "Tue",
      "Wed",
      "Thu",
      "Fri",
      "Sat"
    ], u = [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sep",
      "Oct",
      "Nov",
      "Dec"
    ], I = h[c.getUTCDay()], C = c.getUTCDate().toString().padStart(2, "0"), f = u[c.getUTCMonth()], B = c.getUTCFullYear(), l = c.getUTCHours().toString().padStart(2, "0"), y = c.getUTCMinutes().toString().padStart(2, "0"), d = c.getUTCSeconds().toString().padStart(2, "0");
    return `${I}, ${C} ${f} ${B} ${l}:${y}:${d} GMT`;
  }
  function i(c) {
    if (c < 0)
      throw new Error("Invalid cookie max-age");
  }
  function E(c) {
    if (c.name.length === 0)
      return null;
    s(c.name), r(c.value);
    const h = [`${c.name}=${c.value}`];
    c.name.startsWith("__Secure-") && (c.secure = !0), c.name.startsWith("__Host-") && (c.secure = !0, c.domain = null, c.path = "/"), c.secure && h.push("Secure"), c.httpOnly && h.push("HttpOnly"), typeof c.maxAge == "number" && (i(c.maxAge), h.push(`Max-Age=${c.maxAge}`)), c.domain && (n(c.domain), h.push(`Domain=${c.domain}`)), c.path && (o(c.path), h.push(`Path=${c.path}`)), c.expires && c.expires.toString() !== "Invalid Date" && h.push(`Expires=${g(c.expires)}`), c.sameSite && h.push(`SameSite=${c.sameSite}`);
    for (const u of c.unparsed) {
      if (!u.includes("="))
        throw new Error("Invalid unparsed");
      const [I, ...C] = u.split("=");
      h.push(`${I.trim()}=${C.join("=")}`);
    }
    return h.join("; ");
  }
  let a;
  function Q(c) {
    if (c[A])
      return c[A];
    a || (a = Object.getOwnPropertySymbols(c).find(
      (u) => u.description === "headers list"
    ), e(a, "Headers cannot be parsed"));
    const h = c[a];
    return e(h), h;
  }
  return wa = {
    isCTLExcludingHtab: t,
    stringify: E,
    getHeadersList: Q
  }, wa;
}
var Da, hB;
function Yk() {
  if (hB) return Da;
  hB = 1;
  const { maxNameValuePairSize: e, maxAttributeValueSize: A } = Gk(), { isCTLExcludingHtab: t } = xu(), { collectASequenceOfCodePointsFast: s } = Pt(), r = bA;
  function o(g) {
    if (t(g))
      return null;
    let i = "", E = "", a = "", Q = "";
    if (g.includes(";")) {
      const c = { position: 0 };
      i = s(";", g, c), E = g.slice(c.position);
    } else
      i = g;
    if (!i.includes("="))
      Q = i;
    else {
      const c = { position: 0 };
      a = s(
        "=",
        i,
        c
      ), Q = i.slice(c.position + 1);
    }
    return a = a.trim(), Q = Q.trim(), a.length + Q.length > e ? null : {
      name: a,
      value: Q,
      ...n(E)
    };
  }
  function n(g, i = {}) {
    if (g.length === 0)
      return i;
    r(g[0] === ";"), g = g.slice(1);
    let E = "";
    g.includes(";") ? (E = s(
      ";",
      g,
      { position: 0 }
    ), g = g.slice(E.length)) : (E = g, g = "");
    let a = "", Q = "";
    if (E.includes("=")) {
      const h = { position: 0 };
      a = s(
        "=",
        E,
        h
      ), Q = E.slice(h.position + 1);
    } else
      a = E;
    if (a = a.trim(), Q = Q.trim(), Q.length > A)
      return n(g, i);
    const c = a.toLowerCase();
    if (c === "expires") {
      const h = new Date(Q);
      i.expires = h;
    } else if (c === "max-age") {
      const h = Q.charCodeAt(0);
      if ((h < 48 || h > 57) && Q[0] !== "-" || !/^\d+$/.test(Q))
        return n(g, i);
      const u = Number(Q);
      i.maxAge = u;
    } else if (c === "domain") {
      let h = Q;
      h[0] === "." && (h = h.slice(1)), h = h.toLowerCase(), i.domain = h;
    } else if (c === "path") {
      let h = "";
      Q.length === 0 || Q[0] !== "/" ? h = "/" : h = Q, i.path = h;
    } else if (c === "secure")
      i.secure = !0;
    else if (c === "httponly")
      i.httpOnly = !0;
    else if (c === "samesite") {
      let h = "Default";
      const u = Q.toLowerCase();
      u.includes("none") && (h = "None"), u.includes("strict") && (h = "Strict"), u.includes("lax") && (h = "Lax"), i.sameSite = h;
    } else
      i.unparsed ?? (i.unparsed = []), i.unparsed.push(`${a}=${Q}`);
    return n(g, i);
  }
  return Da = {
    parseSetCookie: o,
    parseUnparsedAttributes: n
  }, Da;
}
var Ra, uB;
function Jk() {
  if (uB) return Ra;
  uB = 1;
  const { parseSetCookie: e } = Yk(), { stringify: A, getHeadersList: t } = xu(), { webidl: s } = At(), { Headers: r } = zs();
  function o(E) {
    s.argumentLengthCheck(arguments, 1, { header: "getCookies" }), s.brandCheck(E, r, { strict: !1 });
    const a = E.get("cookie"), Q = {};
    if (!a)
      return Q;
    for (const c of a.split(";")) {
      const [h, ...u] = c.split("=");
      Q[h.trim()] = u.join("=");
    }
    return Q;
  }
  function n(E, a, Q) {
    s.argumentLengthCheck(arguments, 2, { header: "deleteCookie" }), s.brandCheck(E, r, { strict: !1 }), a = s.converters.DOMString(a), Q = s.converters.DeleteCookieAttributes(Q), i(E, {
      name: a,
      value: "",
      expires: /* @__PURE__ */ new Date(0),
      ...Q
    });
  }
  function g(E) {
    s.argumentLengthCheck(arguments, 1, { header: "getSetCookies" }), s.brandCheck(E, r, { strict: !1 });
    const a = t(E).cookies;
    return a ? a.map((Q) => e(Array.isArray(Q) ? Q[1] : Q)) : [];
  }
  function i(E, a) {
    s.argumentLengthCheck(arguments, 2, { header: "setCookie" }), s.brandCheck(E, r, { strict: !1 }), a = s.converters.Cookie(a), A(a) && E.append("Set-Cookie", A(a));
  }
  return s.converters.DeleteCookieAttributes = s.dictionaryConverter([
    {
      converter: s.nullableConverter(s.converters.DOMString),
      key: "path",
      defaultValue: null
    },
    {
      converter: s.nullableConverter(s.converters.DOMString),
      key: "domain",
      defaultValue: null
    }
  ]), s.converters.Cookie = s.dictionaryConverter([
    {
      converter: s.converters.DOMString,
      key: "name"
    },
    {
      converter: s.converters.DOMString,
      key: "value"
    },
    {
      converter: s.nullableConverter((E) => typeof E == "number" ? s.converters["unsigned long long"](E) : new Date(E)),
      key: "expires",
      defaultValue: null
    },
    {
      converter: s.nullableConverter(s.converters["long long"]),
      key: "maxAge",
      defaultValue: null
    },
    {
      converter: s.nullableConverter(s.converters.DOMString),
      key: "domain",
      defaultValue: null
    },
    {
      converter: s.nullableConverter(s.converters.DOMString),
      key: "path",
      defaultValue: null
    },
    {
      converter: s.nullableConverter(s.converters.boolean),
      key: "secure",
      defaultValue: null
    },
    {
      converter: s.nullableConverter(s.converters.boolean),
      key: "httpOnly",
      defaultValue: null
    },
    {
      converter: s.converters.USVString,
      key: "sameSite",
      allowedValues: ["Strict", "Lax", "None"]
    },
    {
      converter: s.sequenceConverter(s.converters.DOMString),
      key: "unparsed",
      defaultValue: []
    }
  ]), Ra = {
    getCookies: o,
    deleteCookie: n,
    getSetCookies: g,
    setCookie: i
  }, Ra;
}
var ma, dB;
function en() {
  if (dB) return ma;
  dB = 1;
  const e = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11", A = {
    enumerable: !0,
    writable: !1,
    configurable: !1
  }, t = {
    CONNECTING: 0,
    OPEN: 1,
    CLOSING: 2,
    CLOSED: 3
  }, s = {
    CONTINUATION: 0,
    TEXT: 1,
    BINARY: 2,
    CLOSE: 8,
    PING: 9,
    PONG: 10
  }, r = 2 ** 16 - 1, o = {
    INFO: 0,
    PAYLOADLENGTH_16: 2,
    PAYLOADLENGTH_64: 3,
    READ_DATA: 4
  }, n = Buffer.allocUnsafe(0);
  return ma = {
    uid: e,
    staticPropertyDescriptors: A,
    states: t,
    opcodes: s,
    maxUnsigned16Bit: r,
    parserStates: o,
    emptyBuffer: n
  }, ma;
}
var ka, fB;
function Hi() {
  return fB || (fB = 1, ka = {
    kWebSocketURL: Symbol("url"),
    kReadyState: Symbol("ready state"),
    kController: Symbol("controller"),
    kResponse: Symbol("response"),
    kBinaryType: Symbol("binary type"),
    kSentClose: Symbol("sent close"),
    kReceivedClose: Symbol("received close"),
    kByteParser: Symbol("byte parser")
  }), ka;
}
var Fa, pB;
function Ou() {
  var g, E, Q;
  if (pB) return Fa;
  pB = 1;
  const { webidl: e } = At(), { kEnumerableProperty: A } = JA, { MessagePort: t } = Fi, i = class i extends Event {
    constructor(I, C = {}) {
      e.argumentLengthCheck(arguments, 1, { header: "MessageEvent constructor" }), I = e.converters.DOMString(I), C = e.converters.MessageEventInit(C);
      super(I, C);
      YA(this, g);
      uA(this, g, C);
    }
    get data() {
      return e.brandCheck(this, i), S(this, g).data;
    }
    get origin() {
      return e.brandCheck(this, i), S(this, g).origin;
    }
    get lastEventId() {
      return e.brandCheck(this, i), S(this, g).lastEventId;
    }
    get source() {
      return e.brandCheck(this, i), S(this, g).source;
    }
    get ports() {
      return e.brandCheck(this, i), Object.isFrozen(S(this, g).ports) || Object.freeze(S(this, g).ports), S(this, g).ports;
    }
    initMessageEvent(I, C = !1, f = !1, B = null, l = "", y = "", d = null, p = []) {
      return e.brandCheck(this, i), e.argumentLengthCheck(arguments, 1, { header: "MessageEvent.initMessageEvent" }), new i(I, {
        bubbles: C,
        cancelable: f,
        data: B,
        origin: l,
        lastEventId: y,
        source: d,
        ports: p
      });
    }
  };
  g = new WeakMap();
  let s = i;
  const a = class a extends Event {
    constructor(I, C = {}) {
      e.argumentLengthCheck(arguments, 1, { header: "CloseEvent constructor" }), I = e.converters.DOMString(I), C = e.converters.CloseEventInit(C);
      super(I, C);
      YA(this, E);
      uA(this, E, C);
    }
    get wasClean() {
      return e.brandCheck(this, a), S(this, E).wasClean;
    }
    get code() {
      return e.brandCheck(this, a), S(this, E).code;
    }
    get reason() {
      return e.brandCheck(this, a), S(this, E).reason;
    }
  };
  E = new WeakMap();
  let r = a;
  const c = class c extends Event {
    constructor(I, C) {
      e.argumentLengthCheck(arguments, 1, { header: "ErrorEvent constructor" });
      super(I, C);
      YA(this, Q);
      I = e.converters.DOMString(I), C = e.converters.ErrorEventInit(C ?? {}), uA(this, Q, C);
    }
    get message() {
      return e.brandCheck(this, c), S(this, Q).message;
    }
    get filename() {
      return e.brandCheck(this, c), S(this, Q).filename;
    }
    get lineno() {
      return e.brandCheck(this, c), S(this, Q).lineno;
    }
    get colno() {
      return e.brandCheck(this, c), S(this, Q).colno;
    }
    get error() {
      return e.brandCheck(this, c), S(this, Q).error;
    }
  };
  Q = new WeakMap();
  let o = c;
  Object.defineProperties(s.prototype, {
    [Symbol.toStringTag]: {
      value: "MessageEvent",
      configurable: !0
    },
    data: A,
    origin: A,
    lastEventId: A,
    source: A,
    ports: A,
    initMessageEvent: A
  }), Object.defineProperties(r.prototype, {
    [Symbol.toStringTag]: {
      value: "CloseEvent",
      configurable: !0
    },
    reason: A,
    code: A,
    wasClean: A
  }), Object.defineProperties(o.prototype, {
    [Symbol.toStringTag]: {
      value: "ErrorEvent",
      configurable: !0
    },
    message: A,
    filename: A,
    lineno: A,
    colno: A,
    error: A
  }), e.converters.MessagePort = e.interfaceConverter(t), e.converters["sequence<MessagePort>"] = e.sequenceConverter(
    e.converters.MessagePort
  );
  const n = [
    {
      key: "bubbles",
      converter: e.converters.boolean,
      defaultValue: !1
    },
    {
      key: "cancelable",
      converter: e.converters.boolean,
      defaultValue: !1
    },
    {
      key: "composed",
      converter: e.converters.boolean,
      defaultValue: !1
    }
  ];
  return e.converters.MessageEventInit = e.dictionaryConverter([
    ...n,
    {
      key: "data",
      converter: e.converters.any,
      defaultValue: null
    },
    {
      key: "origin",
      converter: e.converters.USVString,
      defaultValue: ""
    },
    {
      key: "lastEventId",
      converter: e.converters.DOMString,
      defaultValue: ""
    },
    {
      key: "source",
      // Node doesn't implement WindowProxy or ServiceWorker, so the only
      // valid value for source is a MessagePort.
      converter: e.nullableConverter(e.converters.MessagePort),
      defaultValue: null
    },
    {
      key: "ports",
      converter: e.converters["sequence<MessagePort>"],
      get defaultValue() {
        return [];
      }
    }
  ]), e.converters.CloseEventInit = e.dictionaryConverter([
    ...n,
    {
      key: "wasClean",
      converter: e.converters.boolean,
      defaultValue: !1
    },
    {
      key: "code",
      converter: e.converters["unsigned short"],
      defaultValue: 0
    },
    {
      key: "reason",
      converter: e.converters.USVString,
      defaultValue: ""
    }
  ]), e.converters.ErrorEventInit = e.dictionaryConverter([
    ...n,
    {
      key: "message",
      converter: e.converters.DOMString,
      defaultValue: ""
    },
    {
      key: "filename",
      converter: e.converters.USVString,
      defaultValue: ""
    },
    {
      key: "lineno",
      converter: e.converters["unsigned long"],
      defaultValue: 0
    },
    {
      key: "colno",
      converter: e.converters["unsigned long"],
      defaultValue: 0
    },
    {
      key: "error",
      converter: e.converters.any
    }
  ]), Fa = {
    MessageEvent: s,
    CloseEvent: r,
    ErrorEvent: o
  }, Fa;
}
var ba, yB;
function KQ() {
  if (yB) return ba;
  yB = 1;
  const { kReadyState: e, kController: A, kResponse: t, kBinaryType: s, kWebSocketURL: r } = Hi(), { states: o, opcodes: n } = en(), { MessageEvent: g, ErrorEvent: i } = Ou();
  function E(f) {
    return f[e] === o.OPEN;
  }
  function a(f) {
    return f[e] === o.CLOSING;
  }
  function Q(f) {
    return f[e] === o.CLOSED;
  }
  function c(f, B, l = Event, y) {
    const d = new l(f, y);
    B.dispatchEvent(d);
  }
  function h(f, B, l) {
    if (f[e] !== o.OPEN)
      return;
    let y;
    if (B === n.TEXT)
      try {
        y = new TextDecoder("utf-8", { fatal: !0 }).decode(l);
      } catch {
        C(f, "Received invalid UTF-8 in text frame.");
        return;
      }
    else B === n.BINARY && (f[s] === "blob" ? y = new Blob([l]) : y = new Uint8Array(l).buffer);
    c("message", f, g, {
      origin: f[r].origin,
      data: y
    });
  }
  function u(f) {
    if (f.length === 0)
      return !1;
    for (const B of f) {
      const l = B.charCodeAt(0);
      if (l < 33 || l > 126 || B === "(" || B === ")" || B === "<" || B === ">" || B === "@" || B === "," || B === ";" || B === ":" || B === "\\" || B === '"' || B === "/" || B === "[" || B === "]" || B === "?" || B === "=" || B === "{" || B === "}" || l === 32 || // SP
      l === 9)
        return !1;
    }
    return !0;
  }
  function I(f) {
    return f >= 1e3 && f < 1015 ? f !== 1004 && // reserved
    f !== 1005 && // "MUST NOT be set as a status code"
    f !== 1006 : f >= 3e3 && f <= 4999;
  }
  function C(f, B) {
    const { [A]: l, [t]: y } = f;
    l.abort(), y != null && y.socket && !y.socket.destroyed && y.socket.destroy(), B && c("error", f, i, {
      error: new Error(B)
    });
  }
  return ba = {
    isEstablished: E,
    isClosing: a,
    isClosed: Q,
    fireEvent: c,
    isValidSubprotocol: u,
    isValidStatusCode: I,
    failWebsocketConnection: C,
    websocketMessageReceived: h
  }, ba;
}
var Na, wB;
function vk() {
  if (wB) return Na;
  wB = 1;
  const e = Ni, { uid: A, states: t } = en(), {
    kReadyState: s,
    kSentClose: r,
    kByteParser: o,
    kReceivedClose: n
  } = Hi(), { fireEvent: g, failWebsocketConnection: i } = KQ(), { CloseEvent: E } = Ou(), { makeRequest: a } = vi(), { fetching: Q } = ZQ(), { Headers: c } = zs(), { getGlobalDispatcher: h } = An, { kHeadersList: u } = zA, I = {};
  I.open = e.channel("undici:websocket:open"), I.close = e.channel("undici:websocket:close"), I.socketError = e.channel("undici:websocket:socket_error");
  let C;
  try {
    C = require("crypto");
  } catch {
  }
  function f(d, p, R, D, b) {
    const M = d;
    M.protocol = d.protocol === "ws:" ? "http:" : "https:";
    const F = a({
      urlList: [M],
      serviceWorkers: "none",
      referrer: "no-referrer",
      mode: "websocket",
      credentials: "include",
      cache: "no-store",
      redirect: "error"
    });
    if (b.headers) {
      const q = new c(b.headers)[u];
      F.headersList = q;
    }
    const z = C.randomBytes(16).toString("base64");
    F.headersList.append("sec-websocket-key", z), F.headersList.append("sec-websocket-version", "13");
    for (const q of p)
      F.headersList.append("sec-websocket-protocol", q);
    const U = "";
    return Q({
      request: F,
      useParallelQueue: !0,
      dispatcher: b.dispatcher ?? h(),
      processResponse(q) {
        var L, eA;
        if (q.type === "error" || q.status !== 101) {
          i(R, "Received network error or non-101 status code.");
          return;
        }
        if (p.length !== 0 && !q.headersList.get("Sec-WebSocket-Protocol")) {
          i(R, "Server did not respond with sent protocols.");
          return;
        }
        if (((L = q.headersList.get("Upgrade")) == null ? void 0 : L.toLowerCase()) !== "websocket") {
          i(R, 'Server did not set Upgrade header to "websocket".');
          return;
        }
        if (((eA = q.headersList.get("Connection")) == null ? void 0 : eA.toLowerCase()) !== "upgrade") {
          i(R, 'Server did not set Connection header to "upgrade".');
          return;
        }
        const X = q.headersList.get("Sec-WebSocket-Accept"), nA = C.createHash("sha1").update(z + A).digest("base64");
        if (X !== nA) {
          i(R, "Incorrect hash received in Sec-WebSocket-Accept header.");
          return;
        }
        const K = q.headersList.get("Sec-WebSocket-Extensions");
        if (K !== null && K !== U) {
          i(R, "Received different permessage-deflate than the one set.");
          return;
        }
        const P = q.headersList.get("Sec-WebSocket-Protocol");
        if (P !== null && P !== F.headersList.get("Sec-WebSocket-Protocol")) {
          i(R, "Protocol was not set in the opening handshake.");
          return;
        }
        q.socket.on("data", B), q.socket.on("close", l), q.socket.on("error", y), I.open.hasSubscribers && I.open.publish({
          address: q.socket.address(),
          protocol: P,
          extensions: K
        }), D(q);
      }
    });
  }
  function B(d) {
    this.ws[o].write(d) || this.pause();
  }
  function l() {
    const { ws: d } = this, p = d[r] && d[n];
    let R = 1005, D = "";
    const b = d[o].closingInfo;
    b ? (R = b.code ?? 1005, D = b.reason) : d[r] || (R = 1006), d[s] = t.CLOSED, g("close", d, E, {
      wasClean: p,
      code: R,
      reason: D
    }), I.close.hasSubscribers && I.close.publish({
      websocket: d,
      code: R,
      reason: D
    });
  }
  function y(d) {
    const { ws: p } = this;
    p[s] = t.CLOSING, I.socketError.hasSubscribers && I.socketError.publish(d), this.destroy();
  }
  return Na = {
    establishWebSocketConnection: f
  }, Na;
}
var Sa, DB;
function Pu() {
  if (DB) return Sa;
  DB = 1;
  const { maxUnsigned16Bit: e } = en();
  let A;
  try {
    A = require("crypto");
  } catch {
  }
  class t {
    /**
     * @param {Buffer|undefined} data
     */
    constructor(r) {
      this.frameData = r, this.maskKey = A.randomBytes(4);
    }
    createFrame(r) {
      var E;
      const o = ((E = this.frameData) == null ? void 0 : E.byteLength) ?? 0;
      let n = o, g = 6;
      o > e ? (g += 8, n = 127) : o > 125 && (g += 2, n = 126);
      const i = Buffer.allocUnsafe(o + g);
      i[0] = i[1] = 0, i[0] |= 128, i[0] = (i[0] & 240) + r;
      /*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> */
      i[g - 4] = this.maskKey[0], i[g - 3] = this.maskKey[1], i[g - 2] = this.maskKey[2], i[g - 1] = this.maskKey[3], i[1] = n, n === 126 ? i.writeUInt16BE(o, 2) : n === 127 && (i[2] = i[3] = 0, i.writeUIntBE(o, 4, 6)), i[1] |= 128;
      for (let a = 0; a < o; a++)
        i[g + a] = this.frameData[a] ^ this.maskKey[a % 4];
      return i;
    }
  }
  return Sa = {
    WebsocketFrameSend: t
  }, Sa;
}
var Ua, RB;
function Hk() {
  var C, f, B, l, y;
  if (RB) return Ua;
  RB = 1;
  const { Writable: e } = Ye, A = Ni, { parserStates: t, opcodes: s, states: r, emptyBuffer: o } = en(), { kReadyState: n, kSentClose: g, kResponse: i, kReceivedClose: E } = Hi(), { isValidStatusCode: a, failWebsocketConnection: Q, websocketMessageReceived: c } = KQ(), { WebsocketFrameSend: h } = Pu(), u = {};
  u.ping = A.channel("undici:websocket:ping"), u.pong = A.channel("undici:websocket:pong");
  class I extends e {
    constructor(R) {
      super();
      YA(this, C, []);
      YA(this, f, 0);
      YA(this, B, t.INFO);
      YA(this, l, {});
      YA(this, y, []);
      this.ws = R;
    }
    /**
     * @param {Buffer} chunk
     * @param {() => void} callback
     */
    _write(R, D, b) {
      S(this, C).push(R), uA(this, f, S(this, f) + R.length), this.run(b);
    }
    /**
     * Runs whenever a new chunk is received.
     * Callback is called whenever there are no more chunks buffering,
     * or not enough bytes are buffered to parse.
     */
    run(R) {
      var D;
      for (; ; ) {
        if (S(this, B) === t.INFO) {
          if (S(this, f) < 2)
            return R();
          const b = this.consume(2);
          if (S(this, l).fin = (b[0] & 128) !== 0, S(this, l).opcode = b[0] & 15, (D = S(this, l)).originalOpcode ?? (D.originalOpcode = S(this, l).opcode), S(this, l).fragmented = !S(this, l).fin && S(this, l).opcode !== s.CONTINUATION, S(this, l).fragmented && S(this, l).opcode !== s.BINARY && S(this, l).opcode !== s.TEXT) {
            Q(this.ws, "Invalid frame type was fragmented.");
            return;
          }
          const M = b[1] & 127;
          if (M <= 125 ? (S(this, l).payloadLength = M, uA(this, B, t.READ_DATA)) : M === 126 ? uA(this, B, t.PAYLOADLENGTH_16) : M === 127 && uA(this, B, t.PAYLOADLENGTH_64), S(this, l).fragmented && M > 125) {
            Q(this.ws, "Fragmented frame exceeded 125 bytes.");
            return;
          } else if ((S(this, l).opcode === s.PING || S(this, l).opcode === s.PONG || S(this, l).opcode === s.CLOSE) && M > 125) {
            Q(this.ws, "Payload length for control frame exceeded 125 bytes.");
            return;
          } else if (S(this, l).opcode === s.CLOSE) {
            if (M === 1) {
              Q(this.ws, "Received close frame with a 1-byte body.");
              return;
            }
            const F = this.consume(M);
            if (S(this, l).closeInfo = this.parseCloseBody(!1, F), !this.ws[g]) {
              const z = Buffer.allocUnsafe(2);
              z.writeUInt16BE(S(this, l).closeInfo.code, 0);
              const U = new h(z);
              this.ws[i].socket.write(
                U.createFrame(s.CLOSE),
                (_) => {
                  _ || (this.ws[g] = !0);
                }
              );
            }
            this.ws[n] = r.CLOSING, this.ws[E] = !0, this.end();
            return;
          } else if (S(this, l).opcode === s.PING) {
            const F = this.consume(M);
            if (!this.ws[E]) {
              const z = new h(F);
              this.ws[i].socket.write(z.createFrame(s.PONG)), u.ping.hasSubscribers && u.ping.publish({
                payload: F
              });
            }
            if (uA(this, B, t.INFO), S(this, f) > 0)
              continue;
            R();
            return;
          } else if (S(this, l).opcode === s.PONG) {
            const F = this.consume(M);
            if (u.pong.hasSubscribers && u.pong.publish({
              payload: F
            }), S(this, f) > 0)
              continue;
            R();
            return;
          }
        } else if (S(this, B) === t.PAYLOADLENGTH_16) {
          if (S(this, f) < 2)
            return R();
          const b = this.consume(2);
          S(this, l).payloadLength = b.readUInt16BE(0), uA(this, B, t.READ_DATA);
        } else if (S(this, B) === t.PAYLOADLENGTH_64) {
          if (S(this, f) < 8)
            return R();
          const b = this.consume(8), M = b.readUInt32BE(0);
          if (M > 2 ** 31 - 1) {
            Q(this.ws, "Received payload length > 2^31 bytes.");
            return;
          }
          const F = b.readUInt32BE(4);
          S(this, l).payloadLength = (M << 8) + F, uA(this, B, t.READ_DATA);
        } else if (S(this, B) === t.READ_DATA) {
          if (S(this, f) < S(this, l).payloadLength)
            return R();
          if (S(this, f) >= S(this, l).payloadLength) {
            const b = this.consume(S(this, l).payloadLength);
            if (S(this, y).push(b), !S(this, l).fragmented || S(this, l).fin && S(this, l).opcode === s.CONTINUATION) {
              const M = Buffer.concat(S(this, y));
              c(this.ws, S(this, l).originalOpcode, M), uA(this, l, {}), S(this, y).length = 0;
            }
            uA(this, B, t.INFO);
          }
        }
        if (!(S(this, f) > 0)) {
          R();
          break;
        }
      }
    }
    /**
     * Take n bytes from the buffered Buffers
     * @param {number} n
     * @returns {Buffer|null}
     */
    consume(R) {
      if (R > S(this, f))
        return null;
      if (R === 0)
        return o;
      if (S(this, C)[0].length === R)
        return uA(this, f, S(this, f) - S(this, C)[0].length), S(this, C).shift();
      const D = Buffer.allocUnsafe(R);
      let b = 0;
      for (; b !== R; ) {
        const M = S(this, C)[0], { length: F } = M;
        if (F + b === R) {
          D.set(S(this, C).shift(), b);
          break;
        } else if (F + b > R) {
          D.set(M.subarray(0, R - b), b), S(this, C)[0] = M.subarray(R - b);
          break;
        } else
          D.set(S(this, C).shift(), b), b += M.length;
      }
      return uA(this, f, S(this, f) - R), D;
    }
    parseCloseBody(R, D) {
      let b;
      if (D.length >= 2 && (b = D.readUInt16BE(0)), R)
        return a(b) ? { code: b } : null;
      let M = D.subarray(2);
      if (M[0] === 239 && M[1] === 187 && M[2] === 191 && (M = M.subarray(3)), b !== void 0 && !a(b))
        return null;
      try {
        M = new TextDecoder("utf-8", { fatal: !0 }).decode(M);
      } catch {
        return null;
      }
      return { code: b, reason: M };
    }
    get closingInfo() {
      return S(this, l).closeInfo;
    }
  }
  return C = new WeakMap(), f = new WeakMap(), B = new WeakMap(), l = new WeakMap(), y = new WeakMap(), Ua = {
    ByteParser: I
  }, Ua;
}
var La, mB;
function Vk() {
  var U, _, q, X, nA, Wu;
  if (mB) return La;
  mB = 1;
  const { webidl: e } = At(), { DOMException: A } = Cs(), { URLSerializer: t } = Pt(), { getGlobalOrigin: s } = Xo(), { staticPropertyDescriptors: r, states: o, opcodes: n, emptyBuffer: g } = en(), {
    kWebSocketURL: i,
    kReadyState: E,
    kController: a,
    kBinaryType: Q,
    kResponse: c,
    kSentClose: h,
    kByteParser: u
  } = Hi(), { isEstablished: I, isClosing: C, isValidSubprotocol: f, failWebsocketConnection: B, fireEvent: l } = KQ(), { establishWebSocketConnection: y } = vk(), { WebsocketFrameSend: d } = Pu(), { ByteParser: p } = Hk(), { kEnumerableProperty: R, isBlobLike: D } = JA, { getGlobalDispatcher: b } = An, { types: M } = le;
  let F = !1;
  const P = class P extends EventTarget {
    /**
     * @param {string} url
     * @param {string|string[]} protocols
     */
    constructor(v, Y = []) {
      super();
      YA(this, nA);
      YA(this, U, {
        open: null,
        error: null,
        close: null,
        message: null
      });
      YA(this, _, 0);
      YA(this, q, "");
      YA(this, X, "");
      e.argumentLengthCheck(arguments, 1, { header: "WebSocket constructor" }), F || (F = !0, process.emitWarning("WebSockets are experimental, expect them to change at any time.", {
        code: "UNDICI-WS"
      }));
      const w = e.converters["DOMString or sequence<DOMString> or WebSocketInit"](Y);
      v = e.converters.USVString(v), Y = w.protocols;
      const k = s();
      let N;
      try {
        N = new URL(v, k);
      } catch (O) {
        throw new A(O, "SyntaxError");
      }
      if (N.protocol === "http:" ? N.protocol = "ws:" : N.protocol === "https:" && (N.protocol = "wss:"), N.protocol !== "ws:" && N.protocol !== "wss:")
        throw new A(
          `Expected a ws: or wss: protocol, got ${N.protocol}`,
          "SyntaxError"
        );
      if (N.hash || N.href.endsWith("#"))
        throw new A("Got fragment", "SyntaxError");
      if (typeof Y == "string" && (Y = [Y]), Y.length !== new Set(Y.map((O) => O.toLowerCase())).size)
        throw new A("Invalid Sec-WebSocket-Protocol value", "SyntaxError");
      if (Y.length > 0 && !Y.every((O) => f(O)))
        throw new A("Invalid Sec-WebSocket-Protocol value", "SyntaxError");
      this[i] = new URL(N.href), this[a] = y(
        N,
        Y,
        this,
        (O) => ae(this, nA, Wu).call(this, O),
        w
      ), this[E] = P.CONNECTING, this[Q] = "blob";
    }
    /**
     * @see https://websockets.spec.whatwg.org/#dom-websocket-close
     * @param {number|undefined} code
     * @param {string|undefined} reason
     */
    close(v = void 0, Y = void 0) {
      if (e.brandCheck(this, P), v !== void 0 && (v = e.converters["unsigned short"](v, { clamp: !0 })), Y !== void 0 && (Y = e.converters.USVString(Y)), v !== void 0 && v !== 1e3 && (v < 3e3 || v > 4999))
        throw new A("invalid code", "InvalidAccessError");
      let w = 0;
      if (Y !== void 0 && (w = Buffer.byteLength(Y), w > 123))
        throw new A(
          `Reason must be less than 123 bytes; received ${w}`,
          "SyntaxError"
        );
      if (!(this[E] === P.CLOSING || this[E] === P.CLOSED)) if (!I(this))
        B(this, "Connection was closed before it was established."), this[E] = P.CLOSING;
      else if (C(this))
        this[E] = P.CLOSING;
      else {
        const k = new d();
        v !== void 0 && Y === void 0 ? (k.frameData = Buffer.allocUnsafe(2), k.frameData.writeUInt16BE(v, 0)) : v !== void 0 && Y !== void 0 ? (k.frameData = Buffer.allocUnsafe(2 + w), k.frameData.writeUInt16BE(v, 0), k.frameData.write(Y, 2, "utf-8")) : k.frameData = g, this[c].socket.write(k.createFrame(n.CLOSE), (O) => {
          O || (this[h] = !0);
        }), this[E] = o.CLOSING;
      }
    }
    /**
     * @see https://websockets.spec.whatwg.org/#dom-websocket-send
     * @param {NodeJS.TypedArray|ArrayBuffer|Blob|string} data
     */
    send(v) {
      if (e.brandCheck(this, P), e.argumentLengthCheck(arguments, 1, { header: "WebSocket.send" }), v = e.converters.WebSocketSendData(v), this[E] === P.CONNECTING)
        throw new A("Sent before connected.", "InvalidStateError");
      if (!I(this) || C(this))
        return;
      const Y = this[c].socket;
      if (typeof v == "string") {
        const w = Buffer.from(v), N = new d(w).createFrame(n.TEXT);
        uA(this, _, S(this, _) + w.byteLength), Y.write(N, () => {
          uA(this, _, S(this, _) - w.byteLength);
        });
      } else if (M.isArrayBuffer(v)) {
        const w = Buffer.from(v), N = new d(w).createFrame(n.BINARY);
        uA(this, _, S(this, _) + w.byteLength), Y.write(N, () => {
          uA(this, _, S(this, _) - w.byteLength);
        });
      } else if (ArrayBuffer.isView(v)) {
        const w = Buffer.from(v, v.byteOffset, v.byteLength), N = new d(w).createFrame(n.BINARY);
        uA(this, _, S(this, _) + w.byteLength), Y.write(N, () => {
          uA(this, _, S(this, _) - w.byteLength);
        });
      } else if (D(v)) {
        const w = new d();
        v.arrayBuffer().then((k) => {
          const N = Buffer.from(k);
          w.frameData = N;
          const O = w.createFrame(n.BINARY);
          uA(this, _, S(this, _) + N.byteLength), Y.write(O, () => {
            uA(this, _, S(this, _) - N.byteLength);
          });
        });
      }
    }
    get readyState() {
      return e.brandCheck(this, P), this[E];
    }
    get bufferedAmount() {
      return e.brandCheck(this, P), S(this, _);
    }
    get url() {
      return e.brandCheck(this, P), t(this[i]);
    }
    get extensions() {
      return e.brandCheck(this, P), S(this, X);
    }
    get protocol() {
      return e.brandCheck(this, P), S(this, q);
    }
    get onopen() {
      return e.brandCheck(this, P), S(this, U).open;
    }
    set onopen(v) {
      e.brandCheck(this, P), S(this, U).open && this.removeEventListener("open", S(this, U).open), typeof v == "function" ? (S(this, U).open = v, this.addEventListener("open", v)) : S(this, U).open = null;
    }
    get onerror() {
      return e.brandCheck(this, P), S(this, U).error;
    }
    set onerror(v) {
      e.brandCheck(this, P), S(this, U).error && this.removeEventListener("error", S(this, U).error), typeof v == "function" ? (S(this, U).error = v, this.addEventListener("error", v)) : S(this, U).error = null;
    }
    get onclose() {
      return e.brandCheck(this, P), S(this, U).close;
    }
    set onclose(v) {
      e.brandCheck(this, P), S(this, U).close && this.removeEventListener("close", S(this, U).close), typeof v == "function" ? (S(this, U).close = v, this.addEventListener("close", v)) : S(this, U).close = null;
    }
    get onmessage() {
      return e.brandCheck(this, P), S(this, U).message;
    }
    set onmessage(v) {
      e.brandCheck(this, P), S(this, U).message && this.removeEventListener("message", S(this, U).message), typeof v == "function" ? (S(this, U).message = v, this.addEventListener("message", v)) : S(this, U).message = null;
    }
    get binaryType() {
      return e.brandCheck(this, P), this[Q];
    }
    set binaryType(v) {
      e.brandCheck(this, P), v !== "blob" && v !== "arraybuffer" ? this[Q] = "blob" : this[Q] = v;
    }
  };
  U = new WeakMap(), _ = new WeakMap(), q = new WeakMap(), X = new WeakMap(), nA = new WeakSet(), /**
   * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol
   */
  Wu = function(v) {
    this[c] = v;
    const Y = new p(this);
    Y.on("drain", function() {
      this.ws[c].socket.resume();
    }), v.socket.ws = this, this[u] = Y, this[E] = o.OPEN;
    const w = v.headersList.get("sec-websocket-extensions");
    w !== null && uA(this, X, w);
    const k = v.headersList.get("sec-websocket-protocol");
    k !== null && uA(this, q, k), l("open", this);
  };
  let z = P;
  return z.CONNECTING = z.prototype.CONNECTING = o.CONNECTING, z.OPEN = z.prototype.OPEN = o.OPEN, z.CLOSING = z.prototype.CLOSING = o.CLOSING, z.CLOSED = z.prototype.CLOSED = o.CLOSED, Object.defineProperties(z.prototype, {
    CONNECTING: r,
    OPEN: r,
    CLOSING: r,
    CLOSED: r,
    url: R,
    readyState: R,
    bufferedAmount: R,
    onopen: R,
    onerror: R,
    onclose: R,
    close: R,
    onmessage: R,
    binaryType: R,
    send: R,
    extensions: R,
    protocol: R,
    [Symbol.toStringTag]: {
      value: "WebSocket",
      writable: !1,
      enumerable: !1,
      configurable: !0
    }
  }), Object.defineProperties(z, {
    CONNECTING: r,
    OPEN: r,
    CLOSING: r,
    CLOSED: r
  }), e.converters["sequence<DOMString>"] = e.sequenceConverter(
    e.converters.DOMString
  ), e.converters["DOMString or sequence<DOMString>"] = function(L) {
    return e.util.Type(L) === "Object" && Symbol.iterator in L ? e.converters["sequence<DOMString>"](L) : e.converters.DOMString(L);
  }, e.converters.WebSocketInit = e.dictionaryConverter([
    {
      key: "protocols",
      converter: e.converters["DOMString or sequence<DOMString>"],
      get defaultValue() {
        return [];
      }
    },
    {
      key: "dispatcher",
      converter: (L) => L,
      get defaultValue() {
        return b();
      }
    },
    {
      key: "headers",
      converter: e.nullableConverter(e.converters.HeadersInit)
    }
  ]), e.converters["DOMString or sequence<DOMString> or WebSocketInit"] = function(L) {
    return e.util.Type(L) === "Object" && !(Symbol.iterator in L) ? e.converters.WebSocketInit(L) : { protocols: e.converters["DOMString or sequence<DOMString>"](L) };
  }, e.converters.WebSocketSendData = function(L) {
    if (e.util.Type(L) === "Object") {
      if (D(L))
        return e.converters.Blob(L, { strict: !1 });
      if (ArrayBuffer.isView(L) || M.isAnyArrayBuffer(L))
        return e.converters.BufferSource(L);
    }
    return e.converters.USVString(L);
  }, La = {
    WebSocket: z
  }, La;
}
const xk = Mi, qu = OQ, _u = qA, Ok = Ko, Pk = _D, Wk = Gi, os = JA, { InvalidArgumentError: Un } = _u, Ao = js, qk = Li, _k = Tu, $k = nk, Zk = Mu, Xk = wu, Kk = pk, jk = Rk, { getGlobalDispatcher: $u, setGlobalDispatcher: zk } = An, A0 = Fk, e0 = vh, t0 = WQ;
let cQ;
try {
  require("crypto"), cQ = !0;
} catch {
  cQ = !1;
}
Object.assign(qu.prototype, Ao);
UA.Dispatcher = qu;
UA.Client = xk;
UA.Pool = Ok;
UA.BalancedPool = Pk;
UA.Agent = Wk;
UA.ProxyAgent = Kk;
UA.RetryHandler = jk;
UA.DecoratorHandler = A0;
UA.RedirectHandler = e0;
UA.createRedirectInterceptor = t0;
UA.buildConnector = qk;
UA.errors = _u;
function tn(e) {
  return (A, t, s) => {
    if (typeof t == "function" && (s = t, t = null), !A || typeof A != "string" && typeof A != "object" && !(A instanceof URL))
      throw new Un("invalid url");
    if (t != null && typeof t != "object")
      throw new Un("invalid opts");
    if (t && t.path != null) {
      if (typeof t.path != "string")
        throw new Un("invalid opts.path");
      let n = t.path;
      t.path.startsWith("/") || (n = `/${n}`), A = new URL(os.parseOrigin(A).origin + n);
    } else
      t || (t = typeof A == "object" ? A : {}), A = os.parseURL(A);
    const { agent: r, dispatcher: o = $u() } = t;
    if (r)
      throw new Un("unsupported opts.agent. Did you mean opts.client?");
    return e.call(o, {
      ...t,
      origin: A.origin,
      path: A.search ? `${A.pathname}${A.search}` : A.pathname,
      method: t.method || (t.body ? "PUT" : "GET")
    }, s);
  };
}
UA.setGlobalDispatcher = zk;
UA.getGlobalDispatcher = $u;
if (os.nodeMajor > 16 || os.nodeMajor === 16 && os.nodeMinor >= 8) {
  let e = null;
  UA.fetch = async function(n) {
    e || (e = ZQ().fetch);
    try {
      return await e(...arguments);
    } catch (g) {
      throw typeof g == "object" && Error.captureStackTrace(g, this), g;
    }
  }, UA.Headers = zs().Headers, UA.Response = $Q().Response, UA.Request = vi().Request, UA.FormData = xQ().FormData, UA.File = VQ().File, UA.FileReader = Uk().FileReader;
  const { setGlobalOrigin: A, getGlobalOrigin: t } = Xo();
  UA.setGlobalOrigin = A, UA.getGlobalOrigin = t;
  const { CacheStorage: s } = Mk(), { kConstruct: r } = XQ();
  UA.caches = new s(r);
}
if (os.nodeMajor >= 16) {
  const { deleteCookie: e, getCookies: A, getSetCookies: t, setCookie: s } = Jk();
  UA.deleteCookie = e, UA.getCookies = A, UA.getSetCookies = t, UA.setCookie = s;
  const { parseMIMEType: r, serializeAMimeType: o } = Pt();
  UA.parseMIMEType = r, UA.serializeAMimeType = o;
}
if (os.nodeMajor >= 18 && cQ) {
  const { WebSocket: e } = Vk();
  UA.WebSocket = e;
}
UA.request = tn(Ao.request);
UA.stream = tn(Ao.stream);
UA.pipeline = tn(Ao.pipeline);
UA.connect = tn(Ao.connect);
UA.upgrade = tn(Ao.upgrade);
UA.MockClient = _k;
UA.MockPool = Zk;
UA.MockAgent = $k;
UA.mockErrors = Xk;
var r0 = rA && rA.__createBinding || (Object.create ? function(e, A, t, s) {
  s === void 0 && (s = t);
  var r = Object.getOwnPropertyDescriptor(A, t);
  (!r || ("get" in r ? !A.__esModule : r.writable || r.configurable)) && (r = { enumerable: !0, get: function() {
    return A[t];
  } }), Object.defineProperty(e, s, r);
} : function(e, A, t, s) {
  s === void 0 && (s = t), e[s] = A[t];
}), s0 = rA && rA.__setModuleDefault || (Object.create ? function(e, A) {
  Object.defineProperty(e, "default", { enumerable: !0, value: A });
} : function(e, A) {
  e.default = A;
}), Vi = rA && rA.__importStar || function(e) {
  if (e && e.__esModule) return e;
  var A = {};
  if (e != null) for (var t in e) t !== "default" && Object.prototype.hasOwnProperty.call(e, t) && r0(A, e, t);
  return s0(A, e), A;
}, ce = rA && rA.__awaiter || function(e, A, t, s) {
  function r(o) {
    return o instanceof t ? o : new t(function(n) {
      n(o);
    });
  }
  return new (t || (t = Promise))(function(o, n) {
    function g(a) {
      try {
        E(s.next(a));
      } catch (Q) {
        n(Q);
      }
    }
    function i(a) {
      try {
        E(s.throw(a));
      } catch (Q) {
        n(Q);
      }
    }
    function E(a) {
      a.done ? o(a.value) : r(a.value).then(g, i);
    }
    E((s = s.apply(e, A || [])).next());
  });
};
Object.defineProperty(de, "__esModule", { value: !0 });
de.HttpClient = de.isHttps = de.HttpClientResponse = de.HttpClientError = de.getProxyUrl = de.MediaTypes = de.Headers = de.HttpCodes = void 0;
const Ln = Vi(Vt), Ta = Vi(Wl), CQ = Vi(Hs), Tn = Vi(xp), o0 = UA;
var It;
(function(e) {
  e[e.OK = 200] = "OK", e[e.MultipleChoices = 300] = "MultipleChoices", e[e.MovedPermanently = 301] = "MovedPermanently", e[e.ResourceMoved = 302] = "ResourceMoved", e[e.SeeOther = 303] = "SeeOther", e[e.NotModified = 304] = "NotModified", e[e.UseProxy = 305] = "UseProxy", e[e.SwitchProxy = 306] = "SwitchProxy", e[e.TemporaryRedirect = 307] = "TemporaryRedirect", e[e.PermanentRedirect = 308] = "PermanentRedirect", e[e.BadRequest = 400] = "BadRequest", e[e.Unauthorized = 401] = "Unauthorized", e[e.PaymentRequired = 402] = "PaymentRequired", e[e.Forbidden = 403] = "Forbidden", e[e.NotFound = 404] = "NotFound", e[e.MethodNotAllowed = 405] = "MethodNotAllowed", e[e.NotAcceptable = 406] = "NotAcceptable", e[e.ProxyAuthenticationRequired = 407] = "ProxyAuthenticationRequired", e[e.RequestTimeout = 408] = "RequestTimeout", e[e.Conflict = 409] = "Conflict", e[e.Gone = 410] = "Gone", e[e.TooManyRequests = 429] = "TooManyRequests", e[e.InternalServerError = 500] = "InternalServerError", e[e.NotImplemented = 501] = "NotImplemented", e[e.BadGateway = 502] = "BadGateway", e[e.ServiceUnavailable = 503] = "ServiceUnavailable", e[e.GatewayTimeout = 504] = "GatewayTimeout";
})(It || (de.HttpCodes = It = {}));
var Le;
(function(e) {
  e.Accept = "accept", e.ContentType = "content-type";
})(Le || (de.Headers = Le = {}));
var zt;
(function(e) {
  e.ApplicationJson = "application/json";
})(zt || (de.MediaTypes = zt = {}));
function n0(e) {
  const A = CQ.getProxyUrl(new URL(e));
  return A ? A.href : "";
}
de.getProxyUrl = n0;
const i0 = [
  It.MovedPermanently,
  It.ResourceMoved,
  It.SeeOther,
  It.TemporaryRedirect,
  It.PermanentRedirect
], g0 = [
  It.BadGateway,
  It.ServiceUnavailable,
  It.GatewayTimeout
], a0 = ["OPTIONS", "GET", "DELETE", "HEAD"], E0 = 10, Q0 = 5;
class xi extends Error {
  constructor(A, t) {
    super(A), this.name = "HttpClientError", this.statusCode = t, Object.setPrototypeOf(this, xi.prototype);
  }
}
de.HttpClientError = xi;
class Zu {
  constructor(A) {
    this.message = A;
  }
  readBody() {
    return ce(this, void 0, void 0, function* () {
      return new Promise((A) => ce(this, void 0, void 0, function* () {
        let t = Buffer.alloc(0);
        this.message.on("data", (s) => {
          t = Buffer.concat([t, s]);
        }), this.message.on("end", () => {
          A(t.toString());
        });
      }));
    });
  }
  readBodyBuffer() {
    return ce(this, void 0, void 0, function* () {
      return new Promise((A) => ce(this, void 0, void 0, function* () {
        const t = [];
        this.message.on("data", (s) => {
          t.push(s);
        }), this.message.on("end", () => {
          A(Buffer.concat(t));
        });
      }));
    });
  }
}
de.HttpClientResponse = Zu;
function c0(e) {
  return new URL(e).protocol === "https:";
}
de.isHttps = c0;
class C0 {
  constructor(A, t, s) {
    this._ignoreSslError = !1, this._allowRedirects = !0, this._allowRedirectDowngrade = !1, this._maxRedirects = 50, this._allowRetries = !1, this._maxRetries = 1, this._keepAlive = !1, this._disposed = !1, this.userAgent = A, this.handlers = t || [], this.requestOptions = s, s && (s.ignoreSslError != null && (this._ignoreSslError = s.ignoreSslError), this._socketTimeout = s.socketTimeout, s.allowRedirects != null && (this._allowRedirects = s.allowRedirects), s.allowRedirectDowngrade != null && (this._allowRedirectDowngrade = s.allowRedirectDowngrade), s.maxRedirects != null && (this._maxRedirects = Math.max(s.maxRedirects, 0)), s.keepAlive != null && (this._keepAlive = s.keepAlive), s.allowRetries != null && (this._allowRetries = s.allowRetries), s.maxRetries != null && (this._maxRetries = s.maxRetries));
  }
  options(A, t) {
    return ce(this, void 0, void 0, function* () {
      return this.request("OPTIONS", A, null, t || {});
    });
  }
  get(A, t) {
    return ce(this, void 0, void 0, function* () {
      return this.request("GET", A, null, t || {});
    });
  }
  del(A, t) {
    return ce(this, void 0, void 0, function* () {
      return this.request("DELETE", A, null, t || {});
    });
  }
  post(A, t, s) {
    return ce(this, void 0, void 0, function* () {
      return this.request("POST", A, t, s || {});
    });
  }
  patch(A, t, s) {
    return ce(this, void 0, void 0, function* () {
      return this.request("PATCH", A, t, s || {});
    });
  }
  put(A, t, s) {
    return ce(this, void 0, void 0, function* () {
      return this.request("PUT", A, t, s || {});
    });
  }
  head(A, t) {
    return ce(this, void 0, void 0, function* () {
      return this.request("HEAD", A, null, t || {});
    });
  }
  sendStream(A, t, s, r) {
    return ce(this, void 0, void 0, function* () {
      return this.request(A, t, s, r);
    });
  }
  /**
   * Gets a typed object from an endpoint
   * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
   */
  getJson(A, t = {}) {
    return ce(this, void 0, void 0, function* () {
      t[Le.Accept] = this._getExistingOrDefaultHeader(t, Le.Accept, zt.ApplicationJson);
      const s = yield this.get(A, t);
      return this._processResponse(s, this.requestOptions);
    });
  }
  postJson(A, t, s = {}) {
    return ce(this, void 0, void 0, function* () {
      const r = JSON.stringify(t, null, 2);
      s[Le.Accept] = this._getExistingOrDefaultHeader(s, Le.Accept, zt.ApplicationJson), s[Le.ContentType] = this._getExistingOrDefaultHeader(s, Le.ContentType, zt.ApplicationJson);
      const o = yield this.post(A, r, s);
      return this._processResponse(o, this.requestOptions);
    });
  }
  putJson(A, t, s = {}) {
    return ce(this, void 0, void 0, function* () {
      const r = JSON.stringify(t, null, 2);
      s[Le.Accept] = this._getExistingOrDefaultHeader(s, Le.Accept, zt.ApplicationJson), s[Le.ContentType] = this._getExistingOrDefaultHeader(s, Le.ContentType, zt.ApplicationJson);
      const o = yield this.put(A, r, s);
      return this._processResponse(o, this.requestOptions);
    });
  }
  patchJson(A, t, s = {}) {
    return ce(this, void 0, void 0, function* () {
      const r = JSON.stringify(t, null, 2);
      s[Le.Accept] = this._getExistingOrDefaultHeader(s, Le.Accept, zt.ApplicationJson), s[Le.ContentType] = this._getExistingOrDefaultHeader(s, Le.ContentType, zt.ApplicationJson);
      const o = yield this.patch(A, r, s);
      return this._processResponse(o, this.requestOptions);
    });
  }
  /**
   * Makes a raw http request.
   * All other methods such as get, post, patch, and request ultimately call this.
   * Prefer get, del, post and patch
   */
  request(A, t, s, r) {
    return ce(this, void 0, void 0, function* () {
      if (this._disposed)
        throw new Error("Client has already been disposed.");
      const o = new URL(t);
      let n = this._prepareRequest(A, o, r);
      const g = this._allowRetries && a0.includes(A) ? this._maxRetries + 1 : 1;
      let i = 0, E;
      do {
        if (E = yield this.requestRaw(n, s), E && E.message && E.message.statusCode === It.Unauthorized) {
          let Q;
          for (const c of this.handlers)
            if (c.canHandleAuthentication(E)) {
              Q = c;
              break;
            }
          return Q ? Q.handleAuthentication(this, n, s) : E;
        }
        let a = this._maxRedirects;
        for (; E.message.statusCode && i0.includes(E.message.statusCode) && this._allowRedirects && a > 0; ) {
          const Q = E.message.headers.location;
          if (!Q)
            break;
          const c = new URL(Q);
          if (o.protocol === "https:" && o.protocol !== c.protocol && !this._allowRedirectDowngrade)
            throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.");
          if (yield E.readBody(), c.hostname !== o.hostname)
            for (const h in r)
              h.toLowerCase() === "authorization" && delete r[h];
          n = this._prepareRequest(A, c, r), E = yield this.requestRaw(n, s), a--;
        }
        if (!E.message.statusCode || !g0.includes(E.message.statusCode))
          return E;
        i += 1, i < g && (yield E.readBody(), yield this._performExponentialBackoff(i));
      } while (i < g);
      return E;
    });
  }
  /**
   * Needs to be called if keepAlive is set to true in request options.
   */
  dispose() {
    this._agent && this._agent.destroy(), this._disposed = !0;
  }
  /**
   * Raw request.
   * @param info
   * @param data
   */
  requestRaw(A, t) {
    return ce(this, void 0, void 0, function* () {
      return new Promise((s, r) => {
        function o(n, g) {
          n ? r(n) : g ? s(g) : r(new Error("Unknown error"));
        }
        this.requestRawWithCallback(A, t, o);
      });
    });
  }
  /**
   * Raw request with callback.
   * @param info
   * @param data
   * @param onResult
   */
  requestRawWithCallback(A, t, s) {
    typeof t == "string" && (A.options.headers || (A.options.headers = {}), A.options.headers["Content-Length"] = Buffer.byteLength(t, "utf8"));
    let r = !1;
    function o(i, E) {
      r || (r = !0, s(i, E));
    }
    const n = A.httpModule.request(A.options, (i) => {
      const E = new Zu(i);
      o(void 0, E);
    });
    let g;
    n.on("socket", (i) => {
      g = i;
    }), n.setTimeout(this._socketTimeout || 3 * 6e4, () => {
      g && g.end(), o(new Error(`Request timeout: ${A.options.path}`));
    }), n.on("error", function(i) {
      o(i);
    }), t && typeof t == "string" && n.write(t, "utf8"), t && typeof t != "string" ? (t.on("close", function() {
      n.end();
    }), t.pipe(n)) : n.end();
  }
  /**
   * Gets an http agent. This function is useful when you need an http agent that handles
   * routing through a proxy server - depending upon the url and proxy environment variables.
   * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
   */
  getAgent(A) {
    const t = new URL(A);
    return this._getAgent(t);
  }
  getAgentDispatcher(A) {
    const t = new URL(A), s = CQ.getProxyUrl(t);
    if (s && s.hostname)
      return this._getProxyAgentDispatcher(t, s);
  }
  _prepareRequest(A, t, s) {
    const r = {};
    r.parsedUrl = t;
    const o = r.parsedUrl.protocol === "https:";
    r.httpModule = o ? Ta : Ln;
    const n = o ? 443 : 80;
    if (r.options = {}, r.options.host = r.parsedUrl.hostname, r.options.port = r.parsedUrl.port ? parseInt(r.parsedUrl.port) : n, r.options.path = (r.parsedUrl.pathname || "") + (r.parsedUrl.search || ""), r.options.method = A, r.options.headers = this._mergeHeaders(s), this.userAgent != null && (r.options.headers["user-agent"] = this.userAgent), r.options.agent = this._getAgent(r.parsedUrl), this.handlers)
      for (const g of this.handlers)
        g.prepareRequest(r.options);
    return r;
  }
  _mergeHeaders(A) {
    return this.requestOptions && this.requestOptions.headers ? Object.assign({}, Mn(this.requestOptions.headers), Mn(A || {})) : Mn(A || {});
  }
  _getExistingOrDefaultHeader(A, t, s) {
    let r;
    return this.requestOptions && this.requestOptions.headers && (r = Mn(this.requestOptions.headers)[t]), A[t] || r || s;
  }
  _getAgent(A) {
    let t;
    const s = CQ.getProxyUrl(A), r = s && s.hostname;
    if (this._keepAlive && r && (t = this._proxyAgent), this._keepAlive && !r && (t = this._agent), t)
      return t;
    const o = A.protocol === "https:";
    let n = 100;
    if (this.requestOptions && (n = this.requestOptions.maxSockets || Ln.globalAgent.maxSockets), s && s.hostname) {
      const g = {
        maxSockets: n,
        keepAlive: this._keepAlive,
        proxy: Object.assign(Object.assign({}, (s.username || s.password) && {
          proxyAuth: `${s.username}:${s.password}`
        }), { host: s.hostname, port: s.port })
      };
      let i;
      const E = s.protocol === "https:";
      o ? i = E ? Tn.httpsOverHttps : Tn.httpsOverHttp : i = E ? Tn.httpOverHttps : Tn.httpOverHttp, t = i(g), this._proxyAgent = t;
    }
    if (this._keepAlive && !t) {
      const g = { keepAlive: this._keepAlive, maxSockets: n };
      t = o ? new Ta.Agent(g) : new Ln.Agent(g), this._agent = t;
    }
    return t || (t = o ? Ta.globalAgent : Ln.globalAgent), o && this._ignoreSslError && (t.options = Object.assign(t.options || {}, {
      rejectUnauthorized: !1
    })), t;
  }
  _getProxyAgentDispatcher(A, t) {
    let s;
    if (this._keepAlive && (s = this._proxyAgentDispatcher), s)
      return s;
    const r = A.protocol === "https:";
    return s = new o0.ProxyAgent(Object.assign({ uri: t.href, pipelining: this._keepAlive ? 1 : 0 }, (t.username || t.password) && {
      token: `${t.username}:${t.password}`
    })), this._proxyAgentDispatcher = s, r && this._ignoreSslError && (s.options = Object.assign(s.options.requestTls || {}, {
      rejectUnauthorized: !1
    })), s;
  }
  _performExponentialBackoff(A) {
    return ce(this, void 0, void 0, function* () {
      A = Math.min(E0, A);
      const t = Q0 * Math.pow(2, A);
      return new Promise((s) => setTimeout(() => s(), t));
    });
  }
  _processResponse(A, t) {
    return ce(this, void 0, void 0, function* () {
      return new Promise((s, r) => ce(this, void 0, void 0, function* () {
        const o = A.message.statusCode || 0, n = {
          statusCode: o,
          result: null,
          headers: {}
        };
        o === It.NotFound && s(n);
        function g(a, Q) {
          if (typeof Q == "string") {
            const c = new Date(Q);
            if (!isNaN(c.valueOf()))
              return c;
          }
          return Q;
        }
        let i, E;
        try {
          E = yield A.readBody(), E && E.length > 0 && (t && t.deserializeDates ? i = JSON.parse(E, g) : i = JSON.parse(E), n.result = i), n.headers = A.message.headers;
        } catch {
        }
        if (o > 299) {
          let a;
          i && i.message ? a = i.message : E && E.length > 0 ? a = E : a = `Failed request: (${o})`;
          const Q = new xi(a, o);
          Q.result = n.result, r(Q);
        } else
          s(n);
      }));
    });
  }
}
de.HttpClient = C0;
const Mn = (e) => Object.keys(e).reduce((A, t) => (A[t.toLowerCase()] = e[t], A), {});
var kr = {}, jQ = rA && rA.__awaiter || function(e, A, t, s) {
  function r(o) {
    return o instanceof t ? o : new t(function(n) {
      n(o);
    });
  }
  return new (t || (t = Promise))(function(o, n) {
    function g(a) {
      try {
        E(s.next(a));
      } catch (Q) {
        n(Q);
      }
    }
    function i(a) {
      try {
        E(s.throw(a));
      } catch (Q) {
        n(Q);
      }
    }
    function E(a) {
      a.done ? o(a.value) : r(a.value).then(g, i);
    }
    E((s = s.apply(e, A || [])).next());
  });
};
Object.defineProperty(kr, "__esModule", { value: !0 });
kr.PersonalAccessTokenCredentialHandler = kr.BearerCredentialHandler = kr.BasicCredentialHandler = void 0;
class B0 {
  constructor(A, t) {
    this.username = A, this.password = t;
  }
  prepareRequest(A) {
    if (!A.headers)
      throw Error("The request has no headers");
    A.headers.Authorization = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString("base64")}`;
  }
  // This handler cannot handle 401
  canHandleAuthentication() {
    return !1;
  }
  handleAuthentication() {
    return jQ(this, void 0, void 0, function* () {
      throw new Error("not implemented");
    });
  }
}
kr.BasicCredentialHandler = B0;
class I0 {
  constructor(A) {
    this.token = A;
  }
  // currently implements pre-authorization
  // TODO: support preAuth = false where it hooks on 401
  prepareRequest(A) {
    if (!A.headers)
      throw Error("The request has no headers");
    A.headers.Authorization = `Bearer ${this.token}`;
  }
  // This handler cannot handle 401
  canHandleAuthentication() {
    return !1;
  }
  handleAuthentication() {
    return jQ(this, void 0, void 0, function* () {
      throw new Error("not implemented");
    });
  }
}
kr.BearerCredentialHandler = I0;
class l0 {
  constructor(A) {
    this.token = A;
  }
  // currently implements pre-authorization
  // TODO: support preAuth = false where it hooks on 401
  prepareRequest(A) {
    if (!A.headers)
      throw Error("The request has no headers");
    A.headers.Authorization = `Basic ${Buffer.from(`PAT:${this.token}`).toString("base64")}`;
  }
  // This handler cannot handle 401
  canHandleAuthentication() {
    return !1;
  }
  handleAuthentication() {
    return jQ(this, void 0, void 0, function* () {
      throw new Error("not implemented");
    });
  }
}
kr.PersonalAccessTokenCredentialHandler = l0;
var kB;
function h0() {
  if (kB) return io;
  kB = 1;
  var e = rA && rA.__awaiter || function(o, n, g, i) {
    function E(a) {
      return a instanceof g ? a : new g(function(Q) {
        Q(a);
      });
    }
    return new (g || (g = Promise))(function(a, Q) {
      function c(I) {
        try {
          u(i.next(I));
        } catch (C) {
          Q(C);
        }
      }
      function h(I) {
        try {
          u(i.throw(I));
        } catch (C) {
          Q(C);
        }
      }
      function u(I) {
        I.done ? a(I.value) : E(I.value).then(c, h);
      }
      u((i = i.apply(o, n || [])).next());
    });
  };
  Object.defineProperty(io, "__esModule", { value: !0 }), io.OidcClient = void 0;
  const A = de, t = kr, s = ju();
  class r {
    static createHttpClient(n = !0, g = 10) {
      const i = {
        allowRetries: n,
        maxRetries: g
      };
      return new A.HttpClient("actions/oidc-client", [new t.BearerCredentialHandler(r.getRequestToken())], i);
    }
    static getRequestToken() {
      const n = process.env.ACTIONS_ID_TOKEN_REQUEST_TOKEN;
      if (!n)
        throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable");
      return n;
    }
    static getIDTokenUrl() {
      const n = process.env.ACTIONS_ID_TOKEN_REQUEST_URL;
      if (!n)
        throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable");
      return n;
    }
    static getCall(n) {
      var g;
      return e(this, void 0, void 0, function* () {
        const a = (g = (yield r.createHttpClient().getJson(n).catch((Q) => {
          throw new Error(`Failed to get ID Token. 
 
        Error Code : ${Q.statusCode}
 
        Error Message: ${Q.message}`);
        })).result) === null || g === void 0 ? void 0 : g.value;
        if (!a)
          throw new Error("Response json body do not have ID Token field");
        return a;
      });
    }
    static getIDToken(n) {
      return e(this, void 0, void 0, function* () {
        try {
          let g = r.getIDTokenUrl();
          if (n) {
            const E = encodeURIComponent(n);
            g = `${g}&audience=${E}`;
          }
          (0, s.debug)(`ID token url is ${g}`);
          const i = yield r.getCall(g);
          return (0, s.setSecret)(i), i;
        } catch (g) {
          throw new Error(`Error message: ${g.message}`);
        }
      });
    }
  }
  return io.OidcClient = r, io;
}
var Ma = {}, FB;
function bB() {
  return FB || (FB = 1, function(e) {
    var A = rA && rA.__awaiter || function(E, a, Q, c) {
      function h(u) {
        return u instanceof Q ? u : new Q(function(I) {
          I(u);
        });
      }
      return new (Q || (Q = Promise))(function(u, I) {
        function C(l) {
          try {
            B(c.next(l));
          } catch (y) {
            I(y);
          }
        }
        function f(l) {
          try {
            B(c.throw(l));
          } catch (y) {
            I(y);
          }
        }
        function B(l) {
          l.done ? u(l.value) : h(l.value).then(C, f);
        }
        B((c = c.apply(E, a || [])).next());
      });
    };
    Object.defineProperty(e, "__esModule", { value: !0 }), e.summary = e.markdownSummary = e.SUMMARY_DOCS_URL = e.SUMMARY_ENV_VAR = void 0;
    const t = cs, s = mi, { access: r, appendFile: o, writeFile: n } = s.promises;
    e.SUMMARY_ENV_VAR = "GITHUB_STEP_SUMMARY", e.SUMMARY_DOCS_URL = "https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary";
    class g {
      constructor() {
        this._buffer = "";
      }
      /**
       * Finds the summary file path from the environment, rejects if env var is not found or file does not exist
       * Also checks r/w permissions.
       *
       * @returns step summary file path
       */
      filePath() {
        return A(this, void 0, void 0, function* () {
          if (this._filePath)
            return this._filePath;
          const a = process.env[e.SUMMARY_ENV_VAR];
          if (!a)
            throw new Error(`Unable to find environment variable for $${e.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
          try {
            yield r(a, s.constants.R_OK | s.constants.W_OK);
          } catch {
            throw new Error(`Unable to access summary file: '${a}'. Check if the file has correct read/write permissions.`);
          }
          return this._filePath = a, this._filePath;
        });
      }
      /**
       * Wraps content in an HTML tag, adding any HTML attributes
       *
       * @param {string} tag HTML tag to wrap
       * @param {string | null} content content within the tag
       * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add
       *
       * @returns {string} content wrapped in HTML element
       */
      wrap(a, Q, c = {}) {
        const h = Object.entries(c).map(([u, I]) => ` ${u}="${I}"`).join("");
        return Q ? `<${a}${h}>${Q}</${a}>` : `<${a}${h}>`;
      }
      /**
       * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.
       *
       * @param {SummaryWriteOptions} [options] (optional) options for write operation
       *
       * @returns {Promise<Summary>} summary instance
       */
      write(a) {
        return A(this, void 0, void 0, function* () {
          const Q = !!(a != null && a.overwrite), c = yield this.filePath();
          return yield (Q ? n : o)(c, this._buffer, { encoding: "utf8" }), this.emptyBuffer();
        });
      }
      /**
       * Clears the summary buffer and wipes the summary file
       *
       * @returns {Summary} summary instance
       */
      clear() {
        return A(this, void 0, void 0, function* () {
          return this.emptyBuffer().write({ overwrite: !0 });
        });
      }
      /**
       * Returns the current summary buffer as a string
       *
       * @returns {string} string of summary buffer
       */
      stringify() {
        return this._buffer;
      }
      /**
       * If the summary buffer is empty
       *
       * @returns {boolen} true if the buffer is empty
       */
      isEmptyBuffer() {
        return this._buffer.length === 0;
      }
      /**
       * Resets the summary buffer without writing to summary file
       *
       * @returns {Summary} summary instance
       */
      emptyBuffer() {
        return this._buffer = "", this;
      }
      /**
       * Adds raw text to the summary buffer
       *
       * @param {string} text content to add
       * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)
       *
       * @returns {Summary} summary instance
       */
      addRaw(a, Q = !1) {
        return this._buffer += a, Q ? this.addEOL() : this;
      }
      /**
       * Adds the operating system-specific end-of-line marker to the buffer
       *
       * @returns {Summary} summary instance
       */
      addEOL() {
        return this.addRaw(t.EOL);
      }
      /**
       * Adds an HTML codeblock to the summary buffer
       *
       * @param {string} code content to render within fenced code block
       * @param {string} lang (optional) language to syntax highlight code
       *
       * @returns {Summary} summary instance
       */
      addCodeBlock(a, Q) {
        const c = Object.assign({}, Q && { lang: Q }), h = this.wrap("pre", this.wrap("code", a), c);
        return this.addRaw(h).addEOL();
      }
      /**
       * Adds an HTML list to the summary buffer
       *
       * @param {string[]} items list of items to render
       * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)
       *
       * @returns {Summary} summary instance
       */
      addList(a, Q = !1) {
        const c = Q ? "ol" : "ul", h = a.map((I) => this.wrap("li", I)).join(""), u = this.wrap(c, h);
        return this.addRaw(u).addEOL();
      }
      /**
       * Adds an HTML table to the summary buffer
       *
       * @param {SummaryTableCell[]} rows table rows
       *
       * @returns {Summary} summary instance
       */
      addTable(a) {
        const Q = a.map((h) => {
          const u = h.map((I) => {
            if (typeof I == "string")
              return this.wrap("td", I);
            const { header: C, data: f, colspan: B, rowspan: l } = I, y = C ? "th" : "td", d = Object.assign(Object.assign({}, B && { colspan: B }), l && { rowspan: l });
            return this.wrap(y, f, d);
          }).join("");
          return this.wrap("tr", u);
        }).join(""), c = this.wrap("table", Q);
        return this.addRaw(c).addEOL();
      }
      /**
       * Adds a collapsable HTML details element to the summary buffer
       *
       * @param {string} label text for the closed state
       * @param {string} content collapsable content
       *
       * @returns {Summary} summary instance
       */
      addDetails(a, Q) {
        const c = this.wrap("details", this.wrap("summary", a) + Q);
        return this.addRaw(c).addEOL();
      }
      /**
       * Adds an HTML image tag to the summary buffer
       *
       * @param {string} src path to the image you to embed
       * @param {string} alt text description of the image
       * @param {SummaryImageOptions} options (optional) addition image attributes
       *
       * @returns {Summary} summary instance
       */
      addImage(a, Q, c) {
        const { width: h, height: u } = c || {}, I = Object.assign(Object.assign({}, h && { width: h }), u && { height: u }), C = this.wrap("img", null, Object.assign({ src: a, alt: Q }, I));
        return this.addRaw(C).addEOL();
      }
      /**
       * Adds an HTML section heading element
       *
       * @param {string} text heading text
       * @param {number | string} [level=1] (optional) the heading level, default: 1
       *
       * @returns {Summary} summary instance
       */
      addHeading(a, Q) {
        const c = `h${Q}`, h = ["h1", "h2", "h3", "h4", "h5", "h6"].includes(c) ? c : "h1", u = this.wrap(h, a);
        return this.addRaw(u).addEOL();
      }
      /**
       * Adds an HTML thematic break (<hr>) to the summary buffer
       *
       * @returns {Summary} summary instance
       */
      addSeparator() {
        const a = this.wrap("hr", null);
        return this.addRaw(a).addEOL();
      }
      /**
       * Adds an HTML line break (<br>) to the summary buffer
       *
       * @returns {Summary} summary instance
       */
      addBreak() {
        const a = this.wrap("br", null);
        return this.addRaw(a).addEOL();
      }
      /**
       * Adds an HTML blockquote to the summary buffer
       *
       * @param {string} text quote text
       * @param {string} cite (optional) citation url
       *
       * @returns {Summary} summary instance
       */
      addQuote(a, Q) {
        const c = Object.assign({}, Q && { cite: Q }), h = this.wrap("blockquote", a, c);
        return this.addRaw(h).addEOL();
      }
      /**
       * Adds an HTML anchor tag to the summary buffer
       *
       * @param {string} text link text/content
       * @param {string} href hyperlink
       *
       * @returns {Summary} summary instance
       */
      addLink(a, Q) {
        const c = this.wrap("a", a, { href: Q });
        return this.addRaw(c).addEOL();
      }
    }
    const i = new g();
    e.markdownSummary = i, e.summary = i;
  }(Ma)), Ma;
}
var Xt = {}, NB;
function u0() {
  if (NB) return Xt;
  NB = 1;
  var e = rA && rA.__createBinding || (Object.create ? function(g, i, E, a) {
    a === void 0 && (a = E);
    var Q = Object.getOwnPropertyDescriptor(i, E);
    (!Q || ("get" in Q ? !i.__esModule : Q.writable || Q.configurable)) && (Q = { enumerable: !0, get: function() {
      return i[E];
    } }), Object.defineProperty(g, a, Q);
  } : function(g, i, E, a) {
    a === void 0 && (a = E), g[a] = i[E];
  }), A = rA && rA.__setModuleDefault || (Object.create ? function(g, i) {
    Object.defineProperty(g, "default", { enumerable: !0, value: i });
  } : function(g, i) {
    g.default = i;
  }), t = rA && rA.__importStar || function(g) {
    if (g && g.__esModule) return g;
    var i = {};
    if (g != null) for (var E in g) E !== "default" && Object.prototype.hasOwnProperty.call(g, E) && e(i, g, E);
    return A(i, g), i;
  };
  Object.defineProperty(Xt, "__esModule", { value: !0 }), Xt.toPlatformPath = Xt.toWin32Path = Xt.toPosixPath = void 0;
  const s = t(Zo);
  function r(g) {
    return g.replace(/[\\]/g, "/");
  }
  Xt.toPosixPath = r;
  function o(g) {
    return g.replace(/[/]/g, "\\");
  }
  Xt.toWin32Path = o;
  function n(g) {
    return g.replace(/[/\\]/g, s.sep);
  }
  return Xt.toPlatformPath = n, Xt;
}
var Ga = {}, Pr = {}, Wr = {}, He = {}, Ya = {}, SB;
function Xu() {
  return SB || (SB = 1, function(e) {
    var A = rA && rA.__createBinding || (Object.create ? function(I, C, f, B) {
      B === void 0 && (B = f), Object.defineProperty(I, B, { enumerable: !0, get: function() {
        return C[f];
      } });
    } : function(I, C, f, B) {
      B === void 0 && (B = f), I[B] = C[f];
    }), t = rA && rA.__setModuleDefault || (Object.create ? function(I, C) {
      Object.defineProperty(I, "default", { enumerable: !0, value: C });
    } : function(I, C) {
      I.default = C;
    }), s = rA && rA.__importStar || function(I) {
      if (I && I.__esModule) return I;
      var C = {};
      if (I != null) for (var f in I) f !== "default" && Object.hasOwnProperty.call(I, f) && A(C, I, f);
      return t(C, I), C;
    }, r = rA && rA.__awaiter || function(I, C, f, B) {
      function l(y) {
        return y instanceof f ? y : new f(function(d) {
          d(y);
        });
      }
      return new (f || (f = Promise))(function(y, d) {
        function p(b) {
          try {
            D(B.next(b));
          } catch (M) {
            d(M);
          }
        }
        function R(b) {
          try {
            D(B.throw(b));
          } catch (M) {
            d(M);
          }
        }
        function D(b) {
          b.done ? y(b.value) : l(b.value).then(p, R);
        }
        D((B = B.apply(I, C || [])).next());
      });
    }, o;
    Object.defineProperty(e, "__esModule", { value: !0 }), e.getCmdPath = e.tryGetExecutablePath = e.isRooted = e.isDirectory = e.exists = e.READONLY = e.UV_FS_O_EXLOCK = e.IS_WINDOWS = e.unlink = e.symlink = e.stat = e.rmdir = e.rm = e.rename = e.readlink = e.readdir = e.open = e.mkdir = e.lstat = e.copyFile = e.chmod = void 0;
    const n = s(mi), g = s(Zo);
    o = n.promises, e.chmod = o.chmod, e.copyFile = o.copyFile, e.lstat = o.lstat, e.mkdir = o.mkdir, e.open = o.open, e.readdir = o.readdir, e.readlink = o.readlink, e.rename = o.rename, e.rm = o.rm, e.rmdir = o.rmdir, e.stat = o.stat, e.symlink = o.symlink, e.unlink = o.unlink, e.IS_WINDOWS = process.platform === "win32", e.UV_FS_O_EXLOCK = 268435456, e.READONLY = n.constants.O_RDONLY;
    function i(I) {
      return r(this, void 0, void 0, function* () {
        try {
          yield e.stat(I);
        } catch (C) {
          if (C.code === "ENOENT")
            return !1;
          throw C;
        }
        return !0;
      });
    }
    e.exists = i;
    function E(I, C = !1) {
      return r(this, void 0, void 0, function* () {
        return (C ? yield e.stat(I) : yield e.lstat(I)).isDirectory();
      });
    }
    e.isDirectory = E;
    function a(I) {
      if (I = c(I), !I)
        throw new Error('isRooted() parameter "p" cannot be empty');
      return e.IS_WINDOWS ? I.startsWith("\\") || /^[A-Z]:/i.test(I) : I.startsWith("/");
    }
    e.isRooted = a;
    function Q(I, C) {
      return r(this, void 0, void 0, function* () {
        let f;
        try {
          f = yield e.stat(I);
        } catch (l) {
          l.code !== "ENOENT" && console.log(`Unexpected error attempting to determine if executable file exists '${I}': ${l}`);
        }
        if (f && f.isFile()) {
          if (e.IS_WINDOWS) {
            const l = g.extname(I).toUpperCase();
            if (C.some((y) => y.toUpperCase() === l))
              return I;
          } else if (h(f))
            return I;
        }
        const B = I;
        for (const l of C) {
          I = B + l, f = void 0;
          try {
            f = yield e.stat(I);
          } catch (y) {
            y.code !== "ENOENT" && console.log(`Unexpected error attempting to determine if executable file exists '${I}': ${y}`);
          }
          if (f && f.isFile()) {
            if (e.IS_WINDOWS) {
              try {
                const y = g.dirname(I), d = g.basename(I).toUpperCase();
                for (const p of yield e.readdir(y))
                  if (d === p.toUpperCase()) {
                    I = g.join(y, p);
                    break;
                  }
              } catch (y) {
                console.log(`Unexpected error attempting to determine the actual case of the file '${I}': ${y}`);
              }
              return I;
            } else if (h(f))
              return I;
          }
        }
        return "";
      });
    }
    e.tryGetExecutablePath = Q;
    function c(I) {
      return I = I || "", e.IS_WINDOWS ? (I = I.replace(/\//g, "\\"), I.replace(/\\\\+/g, "\\")) : I.replace(/\/\/+/g, "/");
    }
    function h(I) {
      return (I.mode & 1) > 0 || (I.mode & 8) > 0 && I.gid === process.getgid() || (I.mode & 64) > 0 && I.uid === process.getuid();
    }
    function u() {
      var I;
      return (I = process.env.COMSPEC) !== null && I !== void 0 ? I : "cmd.exe";
    }
    e.getCmdPath = u;
  }(Ya)), Ya;
}
var UB;
function d0() {
  if (UB) return He;
  UB = 1;
  var e = rA && rA.__createBinding || (Object.create ? function(C, f, B, l) {
    l === void 0 && (l = B), Object.defineProperty(C, l, { enumerable: !0, get: function() {
      return f[B];
    } });
  } : function(C, f, B, l) {
    l === void 0 && (l = B), C[l] = f[B];
  }), A = rA && rA.__setModuleDefault || (Object.create ? function(C, f) {
    Object.defineProperty(C, "default", { enumerable: !0, value: f });
  } : function(C, f) {
    C.default = f;
  }), t = rA && rA.__importStar || function(C) {
    if (C && C.__esModule) return C;
    var f = {};
    if (C != null) for (var B in C) B !== "default" && Object.hasOwnProperty.call(C, B) && e(f, C, B);
    return A(f, C), f;
  }, s = rA && rA.__awaiter || function(C, f, B, l) {
    function y(d) {
      return d instanceof B ? d : new B(function(p) {
        p(d);
      });
    }
    return new (B || (B = Promise))(function(d, p) {
      function R(M) {
        try {
          b(l.next(M));
        } catch (F) {
          p(F);
        }
      }
      function D(M) {
        try {
          b(l.throw(M));
        } catch (F) {
          p(F);
        }
      }
      function b(M) {
        M.done ? d(M.value) : y(M.value).then(R, D);
      }
      b((l = l.apply(C, f || [])).next());
    });
  };
  Object.defineProperty(He, "__esModule", { value: !0 }), He.findInPath = He.which = He.mkdirP = He.rmRF = He.mv = He.cp = void 0;
  const r = bA, o = t(Zo), n = t(Xu());
  function g(C, f, B = {}) {
    return s(this, void 0, void 0, function* () {
      const { force: l, recursive: y, copySourceDirectory: d } = h(B), p = (yield n.exists(f)) ? yield n.stat(f) : null;
      if (p && p.isFile() && !l)
        return;
      const R = p && p.isDirectory() && d ? o.join(f, o.basename(C)) : f;
      if (!(yield n.exists(C)))
        throw new Error(`no such file or directory: ${C}`);
      if ((yield n.stat(C)).isDirectory())
        if (y)
          yield u(C, R, 0, l);
        else
          throw new Error(`Failed to copy. ${C} is a directory, but tried to copy without recursive flag.`);
      else {
        if (o.relative(C, R) === "")
          throw new Error(`'${R}' and '${C}' are the same file`);
        yield I(C, R, l);
      }
    });
  }
  He.cp = g;
  function i(C, f, B = {}) {
    return s(this, void 0, void 0, function* () {
      if (yield n.exists(f)) {
        let l = !0;
        if ((yield n.isDirectory(f)) && (f = o.join(f, o.basename(C)), l = yield n.exists(f)), l)
          if (B.force == null || B.force)
            yield E(f);
          else
            throw new Error("Destination already exists");
      }
      yield a(o.dirname(f)), yield n.rename(C, f);
    });
  }
  He.mv = i;
  function E(C) {
    return s(this, void 0, void 0, function* () {
      if (n.IS_WINDOWS && /[*"<>|]/.test(C))
        throw new Error('File path must not contain `*`, `"`, `<`, `>` or `|` on Windows');
      try {
        yield n.rm(C, {
          force: !0,
          maxRetries: 3,
          recursive: !0,
          retryDelay: 300
        });
      } catch (f) {
        throw new Error(`File was unable to be removed ${f}`);
      }
    });
  }
  He.rmRF = E;
  function a(C) {
    return s(this, void 0, void 0, function* () {
      r.ok(C, "a path argument must be provided"), yield n.mkdir(C, { recursive: !0 });
    });
  }
  He.mkdirP = a;
  function Q(C, f) {
    return s(this, void 0, void 0, function* () {
      if (!C)
        throw new Error("parameter 'tool' is required");
      if (f) {
        const l = yield Q(C, !1);
        if (!l)
          throw n.IS_WINDOWS ? new Error(`Unable to locate executable file: ${C}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also verify the file has a valid extension for an executable file.`) : new Error(`Unable to locate executable file: ${C}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.`);
        return l;
      }
      const B = yield c(C);
      return B && B.length > 0 ? B[0] : "";
    });
  }
  He.which = Q;
  function c(C) {
    return s(this, void 0, void 0, function* () {
      if (!C)
        throw new Error("parameter 'tool' is required");
      const f = [];
      if (n.IS_WINDOWS && process.env.PATHEXT)
        for (const y of process.env.PATHEXT.split(o.delimiter))
          y && f.push(y);
      if (n.isRooted(C)) {
        const y = yield n.tryGetExecutablePath(C, f);
        return y ? [y] : [];
      }
      if (C.includes(o.sep))
        return [];
      const B = [];
      if (process.env.PATH)
        for (const y of process.env.PATH.split(o.delimiter))
          y && B.push(y);
      const l = [];
      for (const y of B) {
        const d = yield n.tryGetExecutablePath(o.join(y, C), f);
        d && l.push(d);
      }
      return l;
    });
  }
  He.findInPath = c;
  function h(C) {
    const f = C.force == null ? !0 : C.force, B = !!C.recursive, l = C.copySourceDirectory == null ? !0 : !!C.copySourceDirectory;
    return { force: f, recursive: B, copySourceDirectory: l };
  }
  function u(C, f, B, l) {
    return s(this, void 0, void 0, function* () {
      if (B >= 255)
        return;
      B++, yield a(f);
      const y = yield n.readdir(C);
      for (const d of y) {
        const p = `${C}/${d}`, R = `${f}/${d}`;
        (yield n.lstat(p)).isDirectory() ? yield u(p, R, B, l) : yield I(p, R, l);
      }
      yield n.chmod(f, (yield n.stat(C)).mode);
    });
  }
  function I(C, f, B) {
    return s(this, void 0, void 0, function* () {
      if ((yield n.lstat(C)).isSymbolicLink()) {
        try {
          yield n.lstat(f), yield n.unlink(f);
        } catch (y) {
          y.code === "EPERM" && (yield n.chmod(f, "0666"), yield n.unlink(f));
        }
        const l = yield n.readlink(C);
        yield n.symlink(l, f, n.IS_WINDOWS ? "junction" : null);
      } else (!(yield n.exists(f)) || B) && (yield n.copyFile(C, f));
    });
  }
  return He;
}
var LB;
function f0() {
  if (LB) return Wr;
  LB = 1;
  var e = rA && rA.__createBinding || (Object.create ? function(I, C, f, B) {
    B === void 0 && (B = f), Object.defineProperty(I, B, { enumerable: !0, get: function() {
      return C[f];
    } });
  } : function(I, C, f, B) {
    B === void 0 && (B = f), I[B] = C[f];
  }), A = rA && rA.__setModuleDefault || (Object.create ? function(I, C) {
    Object.defineProperty(I, "default", { enumerable: !0, value: C });
  } : function(I, C) {
    I.default = C;
  }), t = rA && rA.__importStar || function(I) {
    if (I && I.__esModule) return I;
    var C = {};
    if (I != null) for (var f in I) f !== "default" && Object.hasOwnProperty.call(I, f) && e(C, I, f);
    return A(C, I), C;
  }, s = rA && rA.__awaiter || function(I, C, f, B) {
    function l(y) {
      return y instanceof f ? y : new f(function(d) {
        d(y);
      });
    }
    return new (f || (f = Promise))(function(y, d) {
      function p(b) {
        try {
          D(B.next(b));
        } catch (M) {
          d(M);
        }
      }
      function R(b) {
        try {
          D(B.throw(b));
        } catch (M) {
          d(M);
        }
      }
      function D(b) {
        b.done ? y(b.value) : l(b.value).then(p, R);
      }
      D((B = B.apply(I, C || [])).next());
    });
  };
  Object.defineProperty(Wr, "__esModule", { value: !0 }), Wr.argStringToArray = Wr.ToolRunner = void 0;
  const r = t(cs), o = t(xt), n = t(Ip), g = t(Zo), i = t(d0()), E = t(Xu()), a = lp, Q = process.platform === "win32";
  class c extends o.EventEmitter {
    constructor(C, f, B) {
      if (super(), !C)
        throw new Error("Parameter 'toolPath' cannot be null or empty.");
      this.toolPath = C, this.args = f || [], this.options = B || {};
    }
    _debug(C) {
      this.options.listeners && this.options.listeners.debug && this.options.listeners.debug(C);
    }
    _getCommandString(C, f) {
      const B = this._getSpawnFileName(), l = this._getSpawnArgs(C);
      let y = f ? "" : "[command]";
      if (Q)
        if (this._isCmdFile()) {
          y += B;
          for (const d of l)
            y += ` ${d}`;
        } else if (C.windowsVerbatimArguments) {
          y += `"${B}"`;
          for (const d of l)
            y += ` ${d}`;
        } else {
          y += this._windowsQuoteCmdArg(B);
          for (const d of l)
            y += ` ${this._windowsQuoteCmdArg(d)}`;
        }
      else {
        y += B;
        for (const d of l)
          y += ` ${d}`;
      }
      return y;
    }
    _processLineBuffer(C, f, B) {
      try {
        let l = f + C.toString(), y = l.indexOf(r.EOL);
        for (; y > -1; ) {
          const d = l.substring(0, y);
          B(d), l = l.substring(y + r.EOL.length), y = l.indexOf(r.EOL);
        }
        return l;
      } catch (l) {
        return this._debug(`error processing line. Failed with error ${l}`), "";
      }
    }
    _getSpawnFileName() {
      return Q && this._isCmdFile() ? process.env.COMSPEC || "cmd.exe" : this.toolPath;
    }
    _getSpawnArgs(C) {
      if (Q && this._isCmdFile()) {
        let f = `/D /S /C "${this._windowsQuoteCmdArg(this.toolPath)}`;
        for (const B of this.args)
          f += " ", f += C.windowsVerbatimArguments ? B : this._windowsQuoteCmdArg(B);
        return f += '"', [f];
      }
      return this.args;
    }
    _endsWith(C, f) {
      return C.endsWith(f);
    }
    _isCmdFile() {
      const C = this.toolPath.toUpperCase();
      return this._endsWith(C, ".CMD") || this._endsWith(C, ".BAT");
    }
    _windowsQuoteCmdArg(C) {
      if (!this._isCmdFile())
        return this._uvQuoteCmdArg(C);
      if (!C)
        return '""';
      const f = [
        " ",
        "	",
        "&",
        "(",
        ")",
        "[",
        "]",
        "{",
        "}",
        "^",
        "=",
        ";",
        "!",
        "'",
        "+",
        ",",
        "`",
        "~",
        "|",
        "<",
        ">",
        '"'
      ];
      let B = !1;
      for (const d of C)
        if (f.some((p) => p === d)) {
          B = !0;
          break;
        }
      if (!B)
        return C;
      let l = '"', y = !0;
      for (let d = C.length; d > 0; d--)
        l += C[d - 1], y && C[d - 1] === "\\" ? l += "\\" : C[d - 1] === '"' ? (y = !0, l += '"') : y = !1;
      return l += '"', l.split("").reverse().join("");
    }
    _uvQuoteCmdArg(C) {
      if (!C)
        return '""';
      if (!C.includes(" ") && !C.includes("	") && !C.includes('"'))
        return C;
      if (!C.includes('"') && !C.includes("\\"))
        return `"${C}"`;
      let f = '"', B = !0;
      for (let l = C.length; l > 0; l--)
        f += C[l - 1], B && C[l - 1] === "\\" ? f += "\\" : C[l - 1] === '"' ? (B = !0, f += "\\") : B = !1;
      return f += '"', f.split("").reverse().join("");
    }
    _cloneExecOptions(C) {
      C = C || {};
      const f = {
        cwd: C.cwd || process.cwd(),
        env: C.env || process.env,
        silent: C.silent || !1,
        windowsVerbatimArguments: C.windowsVerbatimArguments || !1,
        failOnStdErr: C.failOnStdErr || !1,
        ignoreReturnCode: C.ignoreReturnCode || !1,
        delay: C.delay || 1e4
      };
      return f.outStream = C.outStream || process.stdout, f.errStream = C.errStream || process.stderr, f;
    }
    _getSpawnOptions(C, f) {
      C = C || {};
      const B = {};
      return B.cwd = C.cwd, B.env = C.env, B.windowsVerbatimArguments = C.windowsVerbatimArguments || this._isCmdFile(), C.windowsVerbatimArguments && (B.argv0 = `"${f}"`), B;
    }
    /**
     * Exec a tool.
     * Output will be streamed to the live console.
     * Returns promise with return code
     *
     * @param     tool     path to tool to exec
     * @param     options  optional exec options.  See ExecOptions
     * @returns   number
     */
    exec() {
      return s(this, void 0, void 0, function* () {
        return !E.isRooted(this.toolPath) && (this.toolPath.includes("/") || Q && this.toolPath.includes("\\")) && (this.toolPath = g.resolve(process.cwd(), this.options.cwd || process.cwd(), this.toolPath)), this.toolPath = yield i.which(this.toolPath, !0), new Promise((C, f) => s(this, void 0, void 0, function* () {
          this._debug(`exec tool: ${this.toolPath}`), this._debug("arguments:");
          for (const D of this.args)
            this._debug(`   ${D}`);
          const B = this._cloneExecOptions(this.options);
          !B.silent && B.outStream && B.outStream.write(this._getCommandString(B) + r.EOL);
          const l = new u(B, this.toolPath);
          if (l.on("debug", (D) => {
            this._debug(D);
          }), this.options.cwd && !(yield E.exists(this.options.cwd)))
            return f(new Error(`The cwd: ${this.options.cwd} does not exist!`));
          const y = this._getSpawnFileName(), d = n.spawn(y, this._getSpawnArgs(B), this._getSpawnOptions(this.options, y));
          let p = "";
          d.stdout && d.stdout.on("data", (D) => {
            this.options.listeners && this.options.listeners.stdout && this.options.listeners.stdout(D), !B.silent && B.outStream && B.outStream.write(D), p = this._processLineBuffer(D, p, (b) => {
              this.options.listeners && this.options.listeners.stdline && this.options.listeners.stdline(b);
            });
          });
          let R = "";
          if (d.stderr && d.stderr.on("data", (D) => {
            l.processStderr = !0, this.options.listeners && this.options.listeners.stderr && this.options.listeners.stderr(D), !B.silent && B.errStream && B.outStream && (B.failOnStdErr ? B.errStream : B.outStream).write(D), R = this._processLineBuffer(D, R, (b) => {
              this.options.listeners && this.options.listeners.errline && this.options.listeners.errline(b);
            });
          }), d.on("error", (D) => {
            l.processError = D.message, l.processExited = !0, l.processClosed = !0, l.CheckComplete();
          }), d.on("exit", (D) => {
            l.processExitCode = D, l.processExited = !0, this._debug(`Exit code ${D} received from tool '${this.toolPath}'`), l.CheckComplete();
          }), d.on("close", (D) => {
            l.processExitCode = D, l.processExited = !0, l.processClosed = !0, this._debug(`STDIO streams have closed for tool '${this.toolPath}'`), l.CheckComplete();
          }), l.on("done", (D, b) => {
            p.length > 0 && this.emit("stdline", p), R.length > 0 && this.emit("errline", R), d.removeAllListeners(), D ? f(D) : C(b);
          }), this.options.input) {
            if (!d.stdin)
              throw new Error("child process missing stdin");
            d.stdin.end(this.options.input);
          }
        }));
      });
    }
  }
  Wr.ToolRunner = c;
  function h(I) {
    const C = [];
    let f = !1, B = !1, l = "";
    function y(d) {
      B && d !== '"' && (l += "\\"), l += d, B = !1;
    }
    for (let d = 0; d < I.length; d++) {
      const p = I.charAt(d);
      if (p === '"') {
        B ? y(p) : f = !f;
        continue;
      }
      if (p === "\\" && B) {
        y(p);
        continue;
      }
      if (p === "\\" && f) {
        B = !0;
        continue;
      }
      if (p === " " && !f) {
        l.length > 0 && (C.push(l), l = "");
        continue;
      }
      y(p);
    }
    return l.length > 0 && C.push(l.trim()), C;
  }
  Wr.argStringToArray = h;
  class u extends o.EventEmitter {
    constructor(C, f) {
      if (super(), this.processClosed = !1, this.processError = "", this.processExitCode = 0, this.processExited = !1, this.processStderr = !1, this.delay = 1e4, this.done = !1, this.timeout = null, !f)
        throw new Error("toolPath must not be empty");
      this.options = C, this.toolPath = f, C.delay && (this.delay = C.delay);
    }
    CheckComplete() {
      this.done || (this.processClosed ? this._setResult() : this.processExited && (this.timeout = a.setTimeout(u.HandleTimeout, this.delay, this)));
    }
    _debug(C) {
      this.emit("debug", C);
    }
    _setResult() {
      let C;
      this.processExited && (this.processError ? C = new Error(`There was an error when attempting to execute the process '${this.toolPath}'. This may indicate the process failed to start. Error: ${this.processError}`) : this.processExitCode !== 0 && !this.options.ignoreReturnCode ? C = new Error(`The process '${this.toolPath}' failed with exit code ${this.processExitCode}`) : this.processStderr && this.options.failOnStdErr && (C = new Error(`The process '${this.toolPath}' failed because one or more lines were written to the STDERR stream`))), this.timeout && (clearTimeout(this.timeout), this.timeout = null), this.done = !0, this.emit("done", C, this.processExitCode);
    }
    static HandleTimeout(C) {
      if (!C.done) {
        if (!C.processClosed && C.processExited) {
          const f = `The STDIO streams did not close within ${C.delay / 1e3} seconds of the exit event from process '${C.toolPath}'. This may indicate a child process inherited the STDIO streams and has not yet exited.`;
          C._debug(f);
        }
        C._setResult();
      }
    }
  }
  return Wr;
}
var TB;
function Ku() {
  if (TB) return Pr;
  TB = 1;
  var e = rA && rA.__createBinding || (Object.create ? function(i, E, a, Q) {
    Q === void 0 && (Q = a), Object.defineProperty(i, Q, { enumerable: !0, get: function() {
      return E[a];
    } });
  } : function(i, E, a, Q) {
    Q === void 0 && (Q = a), i[Q] = E[a];
  }), A = rA && rA.__setModuleDefault || (Object.create ? function(i, E) {
    Object.defineProperty(i, "default", { enumerable: !0, value: E });
  } : function(i, E) {
    i.default = E;
  }), t = rA && rA.__importStar || function(i) {
    if (i && i.__esModule) return i;
    var E = {};
    if (i != null) for (var a in i) a !== "default" && Object.hasOwnProperty.call(i, a) && e(E, i, a);
    return A(E, i), E;
  }, s = rA && rA.__awaiter || function(i, E, a, Q) {
    function c(h) {
      return h instanceof a ? h : new a(function(u) {
        u(h);
      });
    }
    return new (a || (a = Promise))(function(h, u) {
      function I(B) {
        try {
          f(Q.next(B));
        } catch (l) {
          u(l);
        }
      }
      function C(B) {
        try {
          f(Q.throw(B));
        } catch (l) {
          u(l);
        }
      }
      function f(B) {
        B.done ? h(B.value) : c(B.value).then(I, C);
      }
      f((Q = Q.apply(i, E || [])).next());
    });
  };
  Object.defineProperty(Pr, "__esModule", { value: !0 }), Pr.getExecOutput = Pr.exec = void 0;
  const r = UQ, o = t(f0());
  function n(i, E, a) {
    return s(this, void 0, void 0, function* () {
      const Q = o.argStringToArray(i);
      if (Q.length === 0)
        throw new Error("Parameter 'commandLine' cannot be null or empty.");
      const c = Q[0];
      return E = Q.slice(1).concat(E || []), new o.ToolRunner(c, E, a).exec();
    });
  }
  Pr.exec = n;
  function g(i, E, a) {
    var Q, c;
    return s(this, void 0, void 0, function* () {
      let h = "", u = "";
      const I = new r.StringDecoder("utf8"), C = new r.StringDecoder("utf8"), f = (Q = a == null ? void 0 : a.listeners) === null || Q === void 0 ? void 0 : Q.stdout, B = (c = a == null ? void 0 : a.listeners) === null || c === void 0 ? void 0 : c.stderr, l = (R) => {
        u += C.write(R), B && B(R);
      }, y = (R) => {
        h += I.write(R), f && f(R);
      }, d = Object.assign(Object.assign({}, a == null ? void 0 : a.listeners), { stdout: y, stderr: l }), p = yield n(i, E, Object.assign(Object.assign({}, a), { listeners: d }));
      return h += I.end(), u += C.end(), {
        exitCode: p,
        stdout: h,
        stderr: u
      };
    });
  }
  return Pr.getExecOutput = g, Pr;
}
var MB;
function p0() {
  return MB || (MB = 1, function(e) {
    var A = rA && rA.__createBinding || (Object.create ? function(c, h, u, I) {
      I === void 0 && (I = u);
      var C = Object.getOwnPropertyDescriptor(h, u);
      (!C || ("get" in C ? !h.__esModule : C.writable || C.configurable)) && (C = { enumerable: !0, get: function() {
        return h[u];
      } }), Object.defineProperty(c, I, C);
    } : function(c, h, u, I) {
      I === void 0 && (I = u), c[I] = h[u];
    }), t = rA && rA.__setModuleDefault || (Object.create ? function(c, h) {
      Object.defineProperty(c, "default", { enumerable: !0, value: h });
    } : function(c, h) {
      c.default = h;
    }), s = rA && rA.__importStar || function(c) {
      if (c && c.__esModule) return c;
      var h = {};
      if (c != null) for (var u in c) u !== "default" && Object.prototype.hasOwnProperty.call(c, u) && A(h, c, u);
      return t(h, c), h;
    }, r = rA && rA.__awaiter || function(c, h, u, I) {
      function C(f) {
        return f instanceof u ? f : new u(function(B) {
          B(f);
        });
      }
      return new (u || (u = Promise))(function(f, B) {
        function l(p) {
          try {
            d(I.next(p));
          } catch (R) {
            B(R);
          }
        }
        function y(p) {
          try {
            d(I.throw(p));
          } catch (R) {
            B(R);
          }
        }
        function d(p) {
          p.done ? f(p.value) : C(p.value).then(l, y);
        }
        d((I = I.apply(c, h || [])).next());
      });
    }, o = rA && rA.__importDefault || function(c) {
      return c && c.__esModule ? c : { default: c };
    };
    Object.defineProperty(e, "__esModule", { value: !0 }), e.getDetails = e.isLinux = e.isMacOS = e.isWindows = e.arch = e.platform = void 0;
    const n = o(cs), g = s(Ku()), i = () => r(void 0, void 0, void 0, function* () {
      const { stdout: c } = yield g.getExecOutput('powershell -command "(Get-CimInstance -ClassName Win32_OperatingSystem).Version"', void 0, {
        silent: !0
      }), { stdout: h } = yield g.getExecOutput('powershell -command "(Get-CimInstance -ClassName Win32_OperatingSystem).Caption"', void 0, {
        silent: !0
      });
      return {
        name: h.trim(),
        version: c.trim()
      };
    }), E = () => r(void 0, void 0, void 0, function* () {
      var c, h, u, I;
      const { stdout: C } = yield g.getExecOutput("sw_vers", void 0, {
        silent: !0
      }), f = (h = (c = C.match(/ProductVersion:\s*(.+)/)) === null || c === void 0 ? void 0 : c[1]) !== null && h !== void 0 ? h : "";
      return {
        name: (I = (u = C.match(/ProductName:\s*(.+)/)) === null || u === void 0 ? void 0 : u[1]) !== null && I !== void 0 ? I : "",
        version: f
      };
    }), a = () => r(void 0, void 0, void 0, function* () {
      const { stdout: c } = yield g.getExecOutput("lsb_release", ["-i", "-r", "-s"], {
        silent: !0
      }), [h, u] = c.trim().split(`
`);
      return {
        name: h,
        version: u
      };
    });
    e.platform = n.default.platform(), e.arch = n.default.arch(), e.isWindows = e.platform === "win32", e.isMacOS = e.platform === "darwin", e.isLinux = e.platform === "linux";
    function Q() {
      return r(this, void 0, void 0, function* () {
        return Object.assign(Object.assign({}, yield e.isWindows ? i() : e.isMacOS ? E() : a()), {
          platform: e.platform,
          arch: e.arch,
          isWindows: e.isWindows,
          isMacOS: e.isMacOS,
          isLinux: e.isLinux
        });
      });
    }
    e.getDetails = Q;
  }(Ga)), Ga;
}
var GB;
function ju() {
  return GB || (GB = 1, function(e) {
    var A = rA && rA.__createBinding || (Object.create ? function(L, eA, v, Y) {
      Y === void 0 && (Y = v);
      var w = Object.getOwnPropertyDescriptor(eA, v);
      (!w || ("get" in w ? !eA.__esModule : w.writable || w.configurable)) && (w = { enumerable: !0, get: function() {
        return eA[v];
      } }), Object.defineProperty(L, Y, w);
    } : function(L, eA, v, Y) {
      Y === void 0 && (Y = v), L[Y] = eA[v];
    }), t = rA && rA.__setModuleDefault || (Object.create ? function(L, eA) {
      Object.defineProperty(L, "default", { enumerable: !0, value: eA });
    } : function(L, eA) {
      L.default = eA;
    }), s = rA && rA.__importStar || function(L) {
      if (L && L.__esModule) return L;
      var eA = {};
      if (L != null) for (var v in L) v !== "default" && Object.prototype.hasOwnProperty.call(L, v) && A(eA, L, v);
      return t(eA, L), eA;
    }, r = rA && rA.__awaiter || function(L, eA, v, Y) {
      function w(k) {
        return k instanceof v ? k : new v(function(N) {
          N(k);
        });
      }
      return new (v || (v = Promise))(function(k, N) {
        function O(H) {
          try {
            x(Y.next(H));
          } catch (iA) {
            N(iA);
          }
        }
        function Z(H) {
          try {
            x(Y.throw(H));
          } catch (iA) {
            N(iA);
          }
        }
        function x(H) {
          H.done ? k(H.value) : w(H.value).then(O, Z);
        }
        x((Y = Y.apply(L, eA || [])).next());
      });
    };
    Object.defineProperty(e, "__esModule", { value: !0 }), e.platform = e.toPlatformPath = e.toWin32Path = e.toPosixPath = e.markdownSummary = e.summary = e.getIDToken = e.getState = e.saveState = e.group = e.endGroup = e.startGroup = e.info = e.notice = e.warning = e.error = e.debug = e.isDebug = e.setFailed = e.setCommandEcho = e.setOutput = e.getBooleanInput = e.getMultilineInput = e.getInput = e.addPath = e.setSecret = e.exportVariable = e.ExitCode = void 0;
    const o = Js, n = vs, g = Fr, i = s(cs), E = s(Zo), a = h0();
    var Q;
    (function(L) {
      L[L.Success = 0] = "Success", L[L.Failure = 1] = "Failure";
    })(Q || (e.ExitCode = Q = {}));
    function c(L, eA) {
      const v = (0, g.toCommandValue)(eA);
      if (process.env[L] = v, process.env.GITHUB_ENV || "")
        return (0, n.issueFileCommand)("ENV", (0, n.prepareKeyValueMessage)(L, eA));
      (0, o.issueCommand)("set-env", { name: L }, v);
    }
    e.exportVariable = c;
    function h(L) {
      (0, o.issueCommand)("add-mask", {}, L);
    }
    e.setSecret = h;
    function u(L) {
      process.env.GITHUB_PATH || "" ? (0, n.issueFileCommand)("PATH", L) : (0, o.issueCommand)("add-path", {}, L), process.env.PATH = `${L}${E.delimiter}${process.env.PATH}`;
    }
    e.addPath = u;
    function I(L, eA) {
      const v = process.env[`INPUT_${L.replace(/ /g, "_").toUpperCase()}`] || "";
      if (eA && eA.required && !v)
        throw new Error(`Input required and not supplied: ${L}`);
      return eA && eA.trimWhitespace === !1 ? v : v.trim();
    }
    e.getInput = I;
    function C(L, eA) {
      const v = I(L, eA).split(`
`).filter((Y) => Y !== "");
      return eA && eA.trimWhitespace === !1 ? v : v.map((Y) => Y.trim());
    }
    e.getMultilineInput = C;
    function f(L, eA) {
      const v = ["true", "True", "TRUE"], Y = ["false", "False", "FALSE"], w = I(L, eA);
      if (v.includes(w))
        return !0;
      if (Y.includes(w))
        return !1;
      throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${L}
Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
    }
    e.getBooleanInput = f;
    function B(L, eA) {
      if (process.env.GITHUB_OUTPUT || "")
        return (0, n.issueFileCommand)("OUTPUT", (0, n.prepareKeyValueMessage)(L, eA));
      process.stdout.write(i.EOL), (0, o.issueCommand)("set-output", { name: L }, (0, g.toCommandValue)(eA));
    }
    e.setOutput = B;
    function l(L) {
      (0, o.issue)("echo", L ? "on" : "off");
    }
    e.setCommandEcho = l;
    function y(L) {
      process.exitCode = Q.Failure, R(L);
    }
    e.setFailed = y;
    function d() {
      return process.env.RUNNER_DEBUG === "1";
    }
    e.isDebug = d;
    function p(L) {
      (0, o.issueCommand)("debug", {}, L);
    }
    e.debug = p;
    function R(L, eA = {}) {
      (0, o.issueCommand)("error", (0, g.toCommandProperties)(eA), L instanceof Error ? L.toString() : L);
    }
    e.error = R;
    function D(L, eA = {}) {
      (0, o.issueCommand)("warning", (0, g.toCommandProperties)(eA), L instanceof Error ? L.toString() : L);
    }
    e.warning = D;
    function b(L, eA = {}) {
      (0, o.issueCommand)("notice", (0, g.toCommandProperties)(eA), L instanceof Error ? L.toString() : L);
    }
    e.notice = b;
    function M(L) {
      process.stdout.write(L + i.EOL);
    }
    e.info = M;
    function F(L) {
      (0, o.issue)("group", L);
    }
    e.startGroup = F;
    function z() {
      (0, o.issue)("endgroup");
    }
    e.endGroup = z;
    function U(L, eA) {
      return r(this, void 0, void 0, function* () {
        F(L);
        let v;
        try {
          v = yield eA();
        } finally {
          z();
        }
        return v;
      });
    }
    e.group = U;
    function _(L, eA) {
      if (process.env.GITHUB_STATE || "")
        return (0, n.issueFileCommand)("STATE", (0, n.prepareKeyValueMessage)(L, eA));
      (0, o.issueCommand)("save-state", { name: L }, (0, g.toCommandValue)(eA));
    }
    e.saveState = _;
    function q(L) {
      return process.env[`STATE_${L}`] || "";
    }
    e.getState = q;
    function X(L) {
      return r(this, void 0, void 0, function* () {
        return yield a.OidcClient.getIDToken(L);
      });
    }
    e.getIDToken = X;
    var nA = bB();
    Object.defineProperty(e, "summary", { enumerable: !0, get: function() {
      return nA.summary;
    } });
    var K = bB();
    Object.defineProperty(e, "markdownSummary", { enumerable: !0, get: function() {
      return K.markdownSummary;
    } });
    var P = u0();
    Object.defineProperty(e, "toPosixPath", { enumerable: !0, get: function() {
      return P.toPosixPath;
    } }), Object.defineProperty(e, "toWin32Path", { enumerable: !0, get: function() {
      return P.toWin32Path;
    } }), Object.defineProperty(e, "toPlatformPath", { enumerable: !0, get: function() {
      return P.toPlatformPath;
    } }), e.platform = s(p0());
  }(ag)), ag;
}
var VA = ju(), uo = Ku(), Wo = {}, rn = {};
Object.defineProperty(rn, "__esModule", { value: !0 });
rn.Context = void 0;
const YB = mi, y0 = cs;
let w0 = class {
  /**
   * Hydrate the context from the environment
   */
  constructor() {
    var A, t, s;
    if (this.payload = {}, process.env.GITHUB_EVENT_PATH)
      if ((0, YB.existsSync)(process.env.GITHUB_EVENT_PATH))
        this.payload = JSON.parse((0, YB.readFileSync)(process.env.GITHUB_EVENT_PATH, { encoding: "utf8" }));
      else {
        const r = process.env.GITHUB_EVENT_PATH;
        process.stdout.write(`GITHUB_EVENT_PATH ${r} does not exist${y0.EOL}`);
      }
    this.eventName = process.env.GITHUB_EVENT_NAME, this.sha = process.env.GITHUB_SHA, this.ref = process.env.GITHUB_REF, this.workflow = process.env.GITHUB_WORKFLOW, this.action = process.env.GITHUB_ACTION, this.actor = process.env.GITHUB_ACTOR, this.job = process.env.GITHUB_JOB, this.runAttempt = parseInt(process.env.GITHUB_RUN_ATTEMPT, 10), this.runNumber = parseInt(process.env.GITHUB_RUN_NUMBER, 10), this.runId = parseInt(process.env.GITHUB_RUN_ID, 10), this.apiUrl = (A = process.env.GITHUB_API_URL) !== null && A !== void 0 ? A : "https://api.github.com", this.serverUrl = (t = process.env.GITHUB_SERVER_URL) !== null && t !== void 0 ? t : "https://github.com", this.graphqlUrl = (s = process.env.GITHUB_GRAPHQL_URL) !== null && s !== void 0 ? s : "https://api.github.com/graphql";
  }
  get issue() {
    const A = this.payload;
    return Object.assign(Object.assign({}, this.repo), { number: (A.issue || A.pull_request || A).number });
  }
  get repo() {
    if (process.env.GITHUB_REPOSITORY) {
      const [A, t] = process.env.GITHUB_REPOSITORY.split("/");
      return { owner: A, repo: t };
    }
    if (this.payload.repository)
      return {
        owner: this.payload.repository.owner.login,
        repo: this.payload.repository.name
      };
    throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'");
  }
};
rn.Context = w0;
var zu = {}, lt = {}, LA = {}, Ae = {
  kClose: Symbol("close"),
  kDestroy: Symbol("destroy"),
  kDispatch: Symbol("dispatch"),
  kUrl: Symbol("url"),
  kWriting: Symbol("writing"),
  kResuming: Symbol("resuming"),
  kQueue: Symbol("queue"),
  kConnect: Symbol("connect"),
  kConnecting: Symbol("connecting"),
  kHeadersList: Symbol("headers list"),
  kKeepAliveDefaultTimeout: Symbol("default keep alive timeout"),
  kKeepAliveMaxTimeout: Symbol("max keep alive timeout"),
  kKeepAliveTimeoutThreshold: Symbol("keep alive timeout threshold"),
  kKeepAliveTimeoutValue: Symbol("keep alive timeout"),
  kKeepAlive: Symbol("keep alive"),
  kHeadersTimeout: Symbol("headers timeout"),
  kBodyTimeout: Symbol("body timeout"),
  kServerName: Symbol("server name"),
  kLocalAddress: Symbol("local address"),
  kHost: Symbol("host"),
  kNoRef: Symbol("no ref"),
  kBodyUsed: Symbol("used"),
  kRunning: Symbol("running"),
  kBlocking: Symbol("blocking"),
  kPending: Symbol("pending"),
  kSize: Symbol("size"),
  kBusy: Symbol("busy"),
  kQueued: Symbol("queued"),
  kFree: Symbol("free"),
  kConnected: Symbol("connected"),
  kClosed: Symbol("closed"),
  kNeedDrain: Symbol("need drain"),
  kReset: Symbol("reset"),
  kDestroyed: Symbol.for("nodejs.stream.destroyed"),
  kMaxHeadersSize: Symbol("max headers size"),
  kRunningIdx: Symbol("running index"),
  kPendingIdx: Symbol("pending index"),
  kError: Symbol("error"),
  kClients: Symbol("clients"),
  kClient: Symbol("client"),
  kParser: Symbol("parser"),
  kOnDestroyed: Symbol("destroy callbacks"),
  kPipelining: Symbol("pipelining"),
  kSocket: Symbol("socket"),
  kHostHeader: Symbol("host header"),
  kConnector: Symbol("connector"),
  kStrictContentLength: Symbol("strict content length"),
  kMaxRedirections: Symbol("maxRedirections"),
  kMaxRequests: Symbol("maxRequestsPerClient"),
  kProxy: Symbol("proxy agent options"),
  kCounter: Symbol("socket request counter"),
  kInterceptors: Symbol("dispatch interceptors"),
  kMaxResponseSize: Symbol("max response size"),
  kHTTP2Session: Symbol("http2Session"),
  kHTTP2SessionState: Symbol("http2Session state"),
  kHTTP2BuildRequest: Symbol("http2 build request"),
  kHTTP1BuildRequest: Symbol("http1 build request"),
  kHTTP2CopyHeaders: Symbol("http2 copy headers"),
  kHTTPConnVersion: Symbol("http connection version"),
  kRetryHandlerDefaultRetry: Symbol("retry agent default retry"),
  kConstruct: Symbol("constructable")
};
let pe = class extends Error {
  constructor(A) {
    super(A), this.name = "UndiciError", this.code = "UND_ERR";
  }
}, D0 = class Ad extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, Ad), this.name = "ConnectTimeoutError", this.message = A || "Connect Timeout Error", this.code = "UND_ERR_CONNECT_TIMEOUT";
  }
}, R0 = class ed extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, ed), this.name = "HeadersTimeoutError", this.message = A || "Headers Timeout Error", this.code = "UND_ERR_HEADERS_TIMEOUT";
  }
}, m0 = class td extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, td), this.name = "HeadersOverflowError", this.message = A || "Headers Overflow Error", this.code = "UND_ERR_HEADERS_OVERFLOW";
  }
}, k0 = class rd extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, rd), this.name = "BodyTimeoutError", this.message = A || "Body Timeout Error", this.code = "UND_ERR_BODY_TIMEOUT";
  }
}, F0 = class sd extends pe {
  constructor(A, t, s, r) {
    super(A), Error.captureStackTrace(this, sd), this.name = "ResponseStatusCodeError", this.message = A || "Response Status Code Error", this.code = "UND_ERR_RESPONSE_STATUS_CODE", this.body = r, this.status = t, this.statusCode = t, this.headers = s;
  }
}, b0 = class od extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, od), this.name = "InvalidArgumentError", this.message = A || "Invalid Argument Error", this.code = "UND_ERR_INVALID_ARG";
  }
}, N0 = class nd extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, nd), this.name = "InvalidReturnValueError", this.message = A || "Invalid Return Value Error", this.code = "UND_ERR_INVALID_RETURN_VALUE";
  }
}, S0 = class id extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, id), this.name = "AbortError", this.message = A || "Request aborted", this.code = "UND_ERR_ABORTED";
  }
}, U0 = class gd extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, gd), this.name = "InformationalError", this.message = A || "Request information", this.code = "UND_ERR_INFO";
  }
}, L0 = class ad extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, ad), this.name = "RequestContentLengthMismatchError", this.message = A || "Request body length does not match content-length header", this.code = "UND_ERR_REQ_CONTENT_LENGTH_MISMATCH";
  }
}, T0 = class Ed extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, Ed), this.name = "ResponseContentLengthMismatchError", this.message = A || "Response body length does not match content-length header", this.code = "UND_ERR_RES_CONTENT_LENGTH_MISMATCH";
  }
}, M0 = class Qd extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, Qd), this.name = "ClientDestroyedError", this.message = A || "The client is destroyed", this.code = "UND_ERR_DESTROYED";
  }
}, G0 = class cd extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, cd), this.name = "ClientClosedError", this.message = A || "The client is closed", this.code = "UND_ERR_CLOSED";
  }
}, Y0 = class Cd extends pe {
  constructor(A, t) {
    super(A), Error.captureStackTrace(this, Cd), this.name = "SocketError", this.message = A || "Socket error", this.code = "UND_ERR_SOCKET", this.socket = t;
  }
}, Bd = class Id extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, Id), this.name = "NotSupportedError", this.message = A || "Not supported error", this.code = "UND_ERR_NOT_SUPPORTED";
  }
}, J0 = class extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, Bd), this.name = "MissingUpstreamError", this.message = A || "No upstream has been added to the BalancedPool", this.code = "UND_ERR_BPL_MISSING_UPSTREAM";
  }
}, v0 = class ld extends Error {
  constructor(A, t, s) {
    super(A), Error.captureStackTrace(this, ld), this.name = "HTTPParserError", this.code = t ? `HPE_${t}` : void 0, this.data = s ? s.toString() : void 0;
  }
}, H0 = class hd extends pe {
  constructor(A) {
    super(A), Error.captureStackTrace(this, hd), this.name = "ResponseExceededMaxSizeError", this.message = A || "Response content exceeded max size", this.code = "UND_ERR_RES_EXCEEDED_MAX_SIZE";
  }
}, V0 = class ud extends pe {
  constructor(A, t, { headers: s, data: r }) {
    super(A), Error.captureStackTrace(this, ud), this.name = "RequestRetryError", this.message = A || "Request retry error", this.code = "UND_ERR_REQ_RETRY", this.statusCode = t, this.data = r, this.headers = s;
  }
};
var _A = {
  HTTPParserError: v0,
  UndiciError: pe,
  HeadersTimeoutError: R0,
  HeadersOverflowError: m0,
  BodyTimeoutError: k0,
  RequestContentLengthMismatchError: L0,
  ConnectTimeoutError: D0,
  ResponseStatusCodeError: F0,
  InvalidArgumentError: b0,
  InvalidReturnValueError: N0,
  RequestAbortedError: S0,
  ClientDestroyedError: M0,
  ClientClosedError: G0,
  InformationalError: U0,
  SocketError: Y0,
  NotSupportedError: Bd,
  ResponseContentLengthMismatchError: T0,
  BalancedPoolMissingUpstreamError: J0,
  ResponseExceededMaxSizeError: H0,
  RequestRetryError: V0
};
const pi = {}, BQ = [
  "Accept",
  "Accept-Encoding",
  "Accept-Language",
  "Accept-Ranges",
  "Access-Control-Allow-Credentials",
  "Access-Control-Allow-Headers",
  "Access-Control-Allow-Methods",
  "Access-Control-Allow-Origin",
  "Access-Control-Expose-Headers",
  "Access-Control-Max-Age",
  "Access-Control-Request-Headers",
  "Access-Control-Request-Method",
  "Age",
  "Allow",
  "Alt-Svc",
  "Alt-Used",
  "Authorization",
  "Cache-Control",
  "Clear-Site-Data",
  "Connection",
  "Content-Disposition",
  "Content-Encoding",
  "Content-Language",
  "Content-Length",
  "Content-Location",
  "Content-Range",
  "Content-Security-Policy",
  "Content-Security-Policy-Report-Only",
  "Content-Type",
  "Cookie",
  "Cross-Origin-Embedder-Policy",
  "Cross-Origin-Opener-Policy",
  "Cross-Origin-Resource-Policy",
  "Date",
  "Device-Memory",
  "Downlink",
  "ECT",
  "ETag",
  "Expect",
  "Expect-CT",
  "Expires",
  "Forwarded",
  "From",
  "Host",
  "If-Match",
  "If-Modified-Since",
  "If-None-Match",
  "If-Range",
  "If-Unmodified-Since",
  "Keep-Alive",
  "Last-Modified",
  "Link",
  "Location",
  "Max-Forwards",
  "Origin",
  "Permissions-Policy",
  "Pragma",
  "Proxy-Authenticate",
  "Proxy-Authorization",
  "RTT",
  "Range",
  "Referer",
  "Referrer-Policy",
  "Refresh",
  "Retry-After",
  "Sec-WebSocket-Accept",
  "Sec-WebSocket-Extensions",
  "Sec-WebSocket-Key",
  "Sec-WebSocket-Protocol",
  "Sec-WebSocket-Version",
  "Server",
  "Server-Timing",
  "Service-Worker-Allowed",
  "Service-Worker-Navigation-Preload",
  "Set-Cookie",
  "SourceMap",
  "Strict-Transport-Security",
  "Supports-Loading-Mode",
  "TE",
  "Timing-Allow-Origin",
  "Trailer",
  "Transfer-Encoding",
  "Upgrade",
  "Upgrade-Insecure-Requests",
  "User-Agent",
  "Vary",
  "Via",
  "WWW-Authenticate",
  "X-Content-Type-Options",
  "X-DNS-Prefetch-Control",
  "X-Frame-Options",
  "X-Permitted-Cross-Domain-Policies",
  "X-Powered-By",
  "X-Requested-With",
  "X-XSS-Protection"
];
for (let e = 0; e < BQ.length; ++e) {
  const A = BQ[e], t = A.toLowerCase();
  pi[A] = pi[t] = t;
}
Object.setPrototypeOf(pi, null);
var x0 = {
  wellknownHeaderNames: BQ,
  headerNameLowerCasedRecord: pi
};
const dd = bA, { kDestroyed: fd, kBodyUsed: JB } = Ae, { IncomingMessage: O0 } = Vt, Ws = Ye, P0 = Zs, { InvalidArgumentError: be } = _A, { Blob: vB } = ze, yi = le, { stringify: W0 } = ql, { headerNameLowerCasedRecord: q0 } = x0, [Ja, HB] = process.versions.node.split(".").map((e) => Number(e));
function _0() {
}
function zQ(e) {
  return e && typeof e == "object" && typeof e.pipe == "function" && typeof e.on == "function";
}
function pd(e) {
  return vB && e instanceof vB || e && typeof e == "object" && (typeof e.stream == "function" || typeof e.arrayBuffer == "function") && /^(Blob|File)$/.test(e[Symbol.toStringTag]);
}
function $0(e, A) {
  if (e.includes("?") || e.includes("#"))
    throw new Error('Query params cannot be passed when url already contains "?" or "#".');
  const t = W0(A);
  return t && (e += "?" + t), e;
}
function yd(e) {
  if (typeof e == "string") {
    if (e = new URL(e), !/^https?:/.test(e.origin || e.protocol))
      throw new be("Invalid URL protocol: the URL must start with `http:` or `https:`.");
    return e;
  }
  if (!e || typeof e != "object")
    throw new be("Invalid URL: The URL argument must be a non-null object.");
  if (!/^https?:/.test(e.origin || e.protocol))
    throw new be("Invalid URL protocol: the URL must start with `http:` or `https:`.");
  if (!(e instanceof URL)) {
    if (e.port != null && e.port !== "" && !Number.isFinite(parseInt(e.port)))
      throw new be("Invalid URL: port must be a valid integer or a string representation of an integer.");
    if (e.path != null && typeof e.path != "string")
      throw new be("Invalid URL path: the path must be a string or null/undefined.");
    if (e.pathname != null && typeof e.pathname != "string")
      throw new be("Invalid URL pathname: the pathname must be a string or null/undefined.");
    if (e.hostname != null && typeof e.hostname != "string")
      throw new be("Invalid URL hostname: the hostname must be a string or null/undefined.");
    if (e.origin != null && typeof e.origin != "string")
      throw new be("Invalid URL origin: the origin must be a string or null/undefined.");
    const A = e.port != null ? e.port : e.protocol === "https:" ? 443 : 80;
    let t = e.origin != null ? e.origin : `${e.protocol}//${e.hostname}:${A}`, s = e.path != null ? e.path : `${e.pathname || ""}${e.search || ""}`;
    t.endsWith("/") && (t = t.substring(0, t.length - 1)), s && !s.startsWith("/") && (s = `/${s}`), e = new URL(t + s);
  }
  return e;
}
function Z0(e) {
  if (e = yd(e), e.pathname !== "/" || e.search || e.hash)
    throw new be("invalid url");
  return e;
}
function X0(e) {
  if (e[0] === "[") {
    const t = e.indexOf("]");
    return dd(t !== -1), e.substring(1, t);
  }
  const A = e.indexOf(":");
  return A === -1 ? e : e.substring(0, A);
}
function K0(e) {
  if (!e)
    return null;
  dd.strictEqual(typeof e, "string");
  const A = X0(e);
  return P0.isIP(A) ? "" : A;
}
function j0(e) {
  return JSON.parse(JSON.stringify(e));
}
function z0(e) {
  return e != null && typeof e[Symbol.asyncIterator] == "function";
}
function AF(e) {
  return e != null && (typeof e[Symbol.iterator] == "function" || typeof e[Symbol.asyncIterator] == "function");
}
function eF(e) {
  if (e == null)
    return 0;
  if (zQ(e)) {
    const A = e._readableState;
    return A && A.objectMode === !1 && A.ended === !0 && Number.isFinite(A.length) ? A.length : null;
  } else {
    if (pd(e))
      return e.size != null ? e.size : null;
    if (Dd(e))
      return e.byteLength;
  }
  return null;
}
function Ac(e) {
  return !e || !!(e.destroyed || e[fd]);
}
function wd(e) {
  const A = e && e._readableState;
  return Ac(e) && A && !A.endEmitted;
}
function tF(e, A) {
  e == null || !zQ(e) || Ac(e) || (typeof e.destroy == "function" ? (Object.getPrototypeOf(e).constructor === O0 && (e.socket = null), e.destroy(A)) : A && process.nextTick((t, s) => {
    t.emit("error", s);
  }, e, A), e.destroyed !== !0 && (e[fd] = !0));
}
const rF = /timeout=(\d+)/;
function sF(e) {
  const A = e.toString().match(rF);
  return A ? parseInt(A[1], 10) * 1e3 : null;
}
function oF(e) {
  return q0[e] || e.toLowerCase();
}
function nF(e, A = {}) {
  if (!Array.isArray(e)) return e;
  for (let t = 0; t < e.length; t += 2) {
    const s = e[t].toString().toLowerCase();
    let r = A[s];
    r ? (Array.isArray(r) || (r = [r], A[s] = r), r.push(e[t + 1].toString("utf8"))) : Array.isArray(e[t + 1]) ? A[s] = e[t + 1].map((o) => o.toString("utf8")) : A[s] = e[t + 1].toString("utf8");
  }
  return "content-length" in A && "content-disposition" in A && (A["content-disposition"] = Buffer.from(A["content-disposition"]).toString("latin1")), A;
}
function iF(e) {
  const A = [];
  let t = !1, s = -1;
  for (let r = 0; r < e.length; r += 2) {
    const o = e[r + 0].toString(), n = e[r + 1].toString("utf8");
    o.length === 14 && (o === "content-length" || o.toLowerCase() === "content-length") ? (A.push(o, n), t = !0) : o.length === 19 && (o === "content-disposition" || o.toLowerCase() === "content-disposition") ? s = A.push(o, n) - 1 : A.push(o, n);
  }
  return t && s !== -1 && (A[s] = Buffer.from(A[s]).toString("latin1")), A;
}
function Dd(e) {
  return e instanceof Uint8Array || Buffer.isBuffer(e);
}
function gF(e, A, t) {
  if (!e || typeof e != "object")
    throw new be("handler must be an object");
  if (typeof e.onConnect != "function")
    throw new be("invalid onConnect method");
  if (typeof e.onError != "function")
    throw new be("invalid onError method");
  if (typeof e.onBodySent != "function" && e.onBodySent !== void 0)
    throw new be("invalid onBodySent method");
  if (t || A === "CONNECT") {
    if (typeof e.onUpgrade != "function")
      throw new be("invalid onUpgrade method");
  } else {
    if (typeof e.onHeaders != "function")
      throw new be("invalid onHeaders method");
    if (typeof e.onData != "function")
      throw new be("invalid onData method");
    if (typeof e.onComplete != "function")
      throw new be("invalid onComplete method");
  }
}
function aF(e) {
  return !!(e && (Ws.isDisturbed ? Ws.isDisturbed(e) || e[JB] : e[JB] || e.readableDidRead || e._readableState && e._readableState.dataEmitted || wd(e)));
}
function EF(e) {
  return !!(e && (Ws.isErrored ? Ws.isErrored(e) : /state: 'errored'/.test(
    yi.inspect(e)
  )));
}
function QF(e) {
  return !!(e && (Ws.isReadable ? Ws.isReadable(e) : /state: 'readable'/.test(
    yi.inspect(e)
  )));
}
function cF(e) {
  return {
    localAddress: e.localAddress,
    localPort: e.localPort,
    remoteAddress: e.remoteAddress,
    remotePort: e.remotePort,
    remoteFamily: e.remoteFamily,
    timeout: e.timeout,
    bytesWritten: e.bytesWritten,
    bytesRead: e.bytesRead
  };
}
async function* CF(e) {
  for await (const A of e)
    yield Buffer.isBuffer(A) ? A : Buffer.from(A);
}
let fo;
function BF(e) {
  if (fo || (fo = Ge.ReadableStream), fo.from)
    return fo.from(CF(e));
  let A;
  return new fo(
    {
      async start() {
        A = e[Symbol.asyncIterator]();
      },
      async pull(t) {
        const { done: s, value: r } = await A.next();
        if (s)
          queueMicrotask(() => {
            t.close();
          });
        else {
          const o = Buffer.isBuffer(r) ? r : Buffer.from(r);
          t.enqueue(new Uint8Array(o));
        }
        return t.desiredSize > 0;
      },
      async cancel(t) {
        await A.return();
      }
    },
    0
  );
}
function IF(e) {
  return e && typeof e == "object" && typeof e.append == "function" && typeof e.delete == "function" && typeof e.get == "function" && typeof e.getAll == "function" && typeof e.has == "function" && typeof e.set == "function" && e[Symbol.toStringTag] === "FormData";
}
function lF(e) {
  if (e) {
    if (typeof e.throwIfAborted == "function")
      e.throwIfAborted();
    else if (e.aborted) {
      const A = new Error("The operation was aborted");
      throw A.name = "AbortError", A;
    }
  }
}
function hF(e, A) {
  return "addEventListener" in e ? (e.addEventListener("abort", A, { once: !0 }), () => e.removeEventListener("abort", A)) : (e.addListener("abort", A), () => e.removeListener("abort", A));
}
const uF = !!String.prototype.toWellFormed;
function dF(e) {
  return uF ? `${e}`.toWellFormed() : yi.toUSVString ? yi.toUSVString(e) : `${e}`;
}
function fF(e) {
  if (e == null || e === "") return { start: 0, end: null, size: null };
  const A = e ? e.match(/^bytes (\d+)-(\d+)\/(\d+)?$/) : null;
  return A ? {
    start: parseInt(A[1]),
    end: A[2] ? parseInt(A[2]) : null,
    size: A[3] ? parseInt(A[3]) : null
  } : null;
}
const Rd = /* @__PURE__ */ Object.create(null);
Rd.enumerable = !0;
var vA = {
  kEnumerableProperty: Rd,
  nop: _0,
  isDisturbed: aF,
  isErrored: EF,
  isReadable: QF,
  toUSVString: dF,
  isReadableAborted: wd,
  isBlobLike: pd,
  parseOrigin: Z0,
  parseURL: yd,
  getServerName: K0,
  isStream: zQ,
  isIterable: AF,
  isAsyncIterable: z0,
  isDestroyed: Ac,
  headerNameToString: oF,
  parseRawHeaders: iF,
  parseHeaders: nF,
  parseKeepAliveTimeout: sF,
  destroy: tF,
  bodyLength: eF,
  deepClone: j0,
  ReadableStreamFrom: BF,
  isBuffer: Dd,
  validateHandler: gF,
  getSocketInfo: cF,
  isFormDataLike: IF,
  buildURL: $0,
  throwIfAborted: lF,
  addAbortListener: hF,
  parseRangeHeader: fF,
  nodeMajor: Ja,
  nodeMinor: HB,
  nodeHasAutoSelectFamily: Ja > 18 || Ja === 18 && HB >= 13,
  safeHTTPMethods: ["GET", "HEAD", "OPTIONS", "TRACE"]
};
let va = Date.now(), Qr;
const Br = [];
function pF() {
  va = Date.now();
  let e = Br.length, A = 0;
  for (; A < e; ) {
    const t = Br[A];
    t.state === 0 ? t.state = va + t.delay : t.state > 0 && va >= t.state && (t.state = -1, t.callback(t.opaque)), t.state === -1 ? (t.state = -2, A !== e - 1 ? Br[A] = Br.pop() : Br.pop(), e -= 1) : A += 1;
  }
  Br.length > 0 && md();
}
function md() {
  Qr && Qr.refresh ? Qr.refresh() : (clearTimeout(Qr), Qr = setTimeout(pF, 1e3), Qr.unref && Qr.unref());
}
class VB {
  constructor(A, t, s) {
    this.callback = A, this.delay = t, this.opaque = s, this.state = -2, this.refresh();
  }
  refresh() {
    this.state === -2 && (Br.push(this), (!Qr || Br.length === 1) && md()), this.state = 0;
  }
  clear() {
    this.state = -1;
  }
}
var yF = {
  setTimeout(e, A, t) {
    return A < 1e3 ? setTimeout(e, A, t) : new VB(e, A, t);
  },
  clearTimeout(e) {
    e instanceof VB ? e.clear() : clearTimeout(e);
  }
}, Ha, xB;
function Bs() {
  if (xB) return Ha;
  xB = 1;
  const { MessageChannel: e, receiveMessageOnPort: A } = Fi, t = ["GET", "HEAD", "POST"], s = new Set(t), r = [101, 204, 205, 304], o = [301, 302, 303, 307, 308], n = new Set(o), g = [
    "1",
    "7",
    "9",
    "11",
    "13",
    "15",
    "17",
    "19",
    "20",
    "21",
    "22",
    "23",
    "25",
    "37",
    "42",
    "43",
    "53",
    "69",
    "77",
    "79",
    "87",
    "95",
    "101",
    "102",
    "103",
    "104",
    "109",
    "110",
    "111",
    "113",
    "115",
    "117",
    "119",
    "123",
    "135",
    "137",
    "139",
    "143",
    "161",
    "179",
    "389",
    "427",
    "465",
    "512",
    "513",
    "514",
    "515",
    "526",
    "530",
    "531",
    "532",
    "540",
    "548",
    "554",
    "556",
    "563",
    "587",
    "601",
    "636",
    "989",
    "990",
    "993",
    "995",
    "1719",
    "1720",
    "1723",
    "2049",
    "3659",
    "4045",
    "5060",
    "5061",
    "6000",
    "6566",
    "6665",
    "6666",
    "6667",
    "6668",
    "6669",
    "6697",
    "10080"
  ], i = new Set(g), E = [
    "",
    "no-referrer",
    "no-referrer-when-downgrade",
    "same-origin",
    "origin",
    "strict-origin",
    "origin-when-cross-origin",
    "strict-origin-when-cross-origin",
    "unsafe-url"
  ], a = new Set(E), Q = ["follow", "manual", "error"], c = ["GET", "HEAD", "OPTIONS", "TRACE"], h = new Set(c), u = ["navigate", "same-origin", "no-cors", "cors"], I = ["omit", "same-origin", "include"], C = [
    "default",
    "no-store",
    "reload",
    "no-cache",
    "force-cache",
    "only-if-cached"
  ], f = [
    "content-encoding",
    "content-language",
    "content-location",
    "content-type",
    // See https://github.com/nodejs/undici/issues/2021
    // 'Content-Length' is a forbidden header name, which is typically
    // removed in the Headers implementation. However, undici doesn't
    // filter out headers, so we add it here.
    "content-length"
  ], B = [
    "half"
  ], l = ["CONNECT", "TRACE", "TRACK"], y = new Set(l), d = [
    "audio",
    "audioworklet",
    "font",
    "image",
    "manifest",
    "paintworklet",
    "script",
    "style",
    "track",
    "video",
    "xslt",
    ""
  ], p = new Set(d), R = globalThis.DOMException ?? (() => {
    try {
      atob("~");
    } catch (M) {
      return Object.getPrototypeOf(M).constructor;
    }
  })();
  let D;
  const b = globalThis.structuredClone ?? // https://github.com/nodejs/node/blob/b27ae24dcc4251bad726d9d84baf678d1f707fed/lib/internal/structured_clone.js
  // structuredClone was added in v17.0.0, but fetch supports v16.8
  function(F, z = void 0) {
    if (arguments.length === 0)
      throw new TypeError("missing argument");
    return D || (D = new e()), D.port1.unref(), D.port2.unref(), D.port1.postMessage(F, z == null ? void 0 : z.transfer), A(D.port2).message;
  };
  return Ha = {
    DOMException: R,
    structuredClone: b,
    subresource: d,
    forbiddenMethods: l,
    requestBodyHeader: f,
    referrerPolicy: E,
    requestRedirect: Q,
    requestMode: u,
    requestCredentials: I,
    requestCache: C,
    redirectStatus: o,
    corsSafeListedMethods: t,
    nullBodyStatus: r,
    safeMethods: c,
    badPorts: g,
    requestDuplex: B,
    subresourceSet: p,
    badPortsSet: i,
    redirectStatusSet: n,
    corsSafeListedMethodsSet: s,
    safeMethodsSet: h,
    forbiddenMethodsSet: y,
    referrerPolicySet: a
  }, Ha;
}
var Va, OB;
function sn() {
  if (OB) return Va;
  OB = 1;
  const e = Symbol.for("undici.globalOrigin.1");
  function A() {
    return globalThis[e];
  }
  function t(s) {
    if (s === void 0) {
      Object.defineProperty(globalThis, e, {
        value: void 0,
        writable: !0,
        enumerable: !1,
        configurable: !1
      });
      return;
    }
    const r = new URL(s);
    if (r.protocol !== "http:" && r.protocol !== "https:")
      throw new TypeError(`Only http & https urls are allowed, received ${r.protocol}`);
    Object.defineProperty(globalThis, e, {
      value: r,
      writable: !0,
      enumerable: !1,
      configurable: !1
    });
  }
  return Va = {
    getGlobalOrigin: A,
    setGlobalOrigin: t
  }, Va;
}
var xa, PB;
function mt() {
  if (PB) return xa;
  PB = 1;
  const { redirectStatusSet: e, referrerPolicySet: A, badPortsSet: t } = Bs(), { getGlobalOrigin: s } = sn(), { performance: r } = $l, { isBlobLike: o, toUSVString: n, ReadableStreamFrom: g } = vA, i = bA, { isUint8Array: E } = bi;
  let a = [], Q;
  try {
    Q = require("crypto");
    const G = ["sha256", "sha384", "sha512"];
    a = Q.getHashes().filter((AA) => G.includes(AA));
  } catch {
  }
  function c(G) {
    const AA = G.urlList, sA = AA.length;
    return sA === 0 ? null : AA[sA - 1].toString();
  }
  function h(G, AA) {
    if (!e.has(G.status))
      return null;
    let sA = G.headersList.get("location");
    return sA !== null && d(sA) && (sA = new URL(sA, c(G))), sA && !sA.hash && (sA.hash = AA), sA;
  }
  function u(G) {
    return G.urlList[G.urlList.length - 1];
  }
  function I(G) {
    const AA = u(G);
    return oA(AA) && t.has(AA.port) ? "blocked" : "allowed";
  }
  function C(G) {
    var AA, sA;
    return G instanceof Error || ((AA = G == null ? void 0 : G.constructor) == null ? void 0 : AA.name) === "Error" || ((sA = G == null ? void 0 : G.constructor) == null ? void 0 : sA.name) === "DOMException";
  }
  function f(G) {
    for (let AA = 0; AA < G.length; ++AA) {
      const sA = G.charCodeAt(AA);
      if (!(sA === 9 || // HTAB
      sA >= 32 && sA <= 126 || // SP / VCHAR
      sA >= 128 && sA <= 255))
        return !1;
    }
    return !0;
  }
  function B(G) {
    switch (G) {
      case 34:
      case 40:
      case 41:
      case 44:
      case 47:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 91:
      case 92:
      case 93:
      case 123:
      case 125:
        return !1;
      default:
        return G >= 33 && G <= 126;
    }
  }
  function l(G) {
    if (G.length === 0)
      return !1;
    for (let AA = 0; AA < G.length; ++AA)
      if (!B(G.charCodeAt(AA)))
        return !1;
    return !0;
  }
  function y(G) {
    return l(G);
  }
  function d(G) {
    return !(G.startsWith("	") || G.startsWith(" ") || G.endsWith("	") || G.endsWith(" ") || G.includes("\0") || G.includes("\r") || G.includes(`
`));
  }
  function p(G, AA) {
    const { headersList: sA } = AA, CA = (sA.get("referrer-policy") ?? "").split(",");
    let RA = "";
    if (CA.length > 0)
      for (let HA = CA.length; HA !== 0; HA--) {
        const $A = CA[HA - 1].trim();
        if (A.has($A)) {
          RA = $A;
          break;
        }
      }
    RA !== "" && (G.referrerPolicy = RA);
  }
  function R() {
    return "allowed";
  }
  function D() {
    return "success";
  }
  function b() {
    return "success";
  }
  function M(G) {
    let AA = null;
    AA = G.mode, G.headersList.set("sec-fetch-mode", AA);
  }
  function F(G) {
    let AA = G.origin;
    if (G.responseTainting === "cors" || G.mode === "websocket")
      AA && G.headersList.append("origin", AA);
    else if (G.method !== "GET" && G.method !== "HEAD") {
      switch (G.referrerPolicy) {
        case "no-referrer":
          AA = null;
          break;
        case "no-referrer-when-downgrade":
        case "strict-origin":
        case "strict-origin-when-cross-origin":
          G.origin && $(G.origin) && !$(u(G)) && (AA = null);
          break;
        case "same-origin":
          N(G, u(G)) || (AA = null);
          break;
      }
      AA && G.headersList.append("origin", AA);
    }
  }
  function z(G) {
    return r.now();
  }
  function U(G) {
    return {
      startTime: G.startTime ?? 0,
      redirectStartTime: 0,
      redirectEndTime: 0,
      postRedirectStartTime: G.startTime ?? 0,
      finalServiceWorkerStartTime: 0,
      finalNetworkResponseStartTime: 0,
      finalNetworkRequestStartTime: 0,
      endTime: 0,
      encodedBodySize: 0,
      decodedBodySize: 0,
      finalConnectionTimingInfo: null
    };
  }
  function _() {
    return {
      referrerPolicy: "strict-origin-when-cross-origin"
    };
  }
  function q(G) {
    return {
      referrerPolicy: G.referrerPolicy
    };
  }
  function X(G) {
    const AA = G.referrerPolicy;
    i(AA);
    let sA = null;
    if (G.referrer === "client") {
      const ye = s();
      if (!ye || ye.origin === "null")
        return "no-referrer";
      sA = new URL(ye);
    } else G.referrer instanceof URL && (sA = G.referrer);
    let CA = nA(sA);
    const RA = nA(sA, !0);
    CA.toString().length > 4096 && (CA = RA);
    const HA = N(G, CA), $A = K(CA) && !K(G.url);
    switch (AA) {
      case "origin":
        return RA ?? nA(sA, !0);
      case "unsafe-url":
        return CA;
      case "same-origin":
        return HA ? RA : "no-referrer";
      case "origin-when-cross-origin":
        return HA ? CA : RA;
      case "strict-origin-when-cross-origin": {
        const ye = u(G);
        return N(CA, ye) ? CA : K(CA) && !K(ye) ? "no-referrer" : RA;
      }
      case "strict-origin":
      case "no-referrer-when-downgrade":
      default:
        return $A ? "no-referrer" : RA;
    }
  }
  function nA(G, AA) {
    return i(G instanceof URL), G.protocol === "file:" || G.protocol === "about:" || G.protocol === "blank:" ? "no-referrer" : (G.username = "", G.password = "", G.hash = "", AA && (G.pathname = "", G.search = ""), G);
  }
  function K(G) {
    if (!(G instanceof URL))
      return !1;
    if (G.href === "about:blank" || G.href === "about:srcdoc" || G.protocol === "data:" || G.protocol === "file:") return !0;
    return AA(G.origin);
    function AA(sA) {
      if (sA == null || sA === "null") return !1;
      const CA = new URL(sA);
      return !!(CA.protocol === "https:" || CA.protocol === "wss:" || /^127(?:\.[0-9]+){0,2}\.[0-9]+$|^\[(?:0*:)*?:?0*1\]$/.test(CA.hostname) || CA.hostname === "localhost" || CA.hostname.includes("localhost.") || CA.hostname.endsWith(".localhost"));
    }
  }
  function P(G, AA) {
    if (Q === void 0)
      return !0;
    const sA = eA(AA);
    if (sA === "no metadata" || sA.length === 0)
      return !0;
    const CA = v(sA), RA = Y(sA, CA);
    for (const HA of RA) {
      const $A = HA.algo, ye = HA.hash;
      let we = Q.createHash($A).update(G).digest("base64");
      if (we[we.length - 1] === "=" && (we[we.length - 2] === "=" ? we = we.slice(0, -2) : we = we.slice(0, -1)), w(we, ye))
        return !0;
    }
    return !1;
  }
  const L = /(?<algo>sha256|sha384|sha512)-((?<hash>[A-Za-z0-9+/]+|[A-Za-z0-9_-]+)={0,2}(?:\s|$)( +[!-~]*)?)?/i;
  function eA(G) {
    const AA = [];
    let sA = !0;
    for (const CA of G.split(" ")) {
      sA = !1;
      const RA = L.exec(CA);
      if (RA === null || RA.groups === void 0 || RA.groups.algo === void 0)
        continue;
      const HA = RA.groups.algo.toLowerCase();
      a.includes(HA) && AA.push(RA.groups);
    }
    return sA === !0 ? "no metadata" : AA;
  }
  function v(G) {
    let AA = G[0].algo;
    if (AA[3] === "5")
      return AA;
    for (let sA = 1; sA < G.length; ++sA) {
      const CA = G[sA];
      if (CA.algo[3] === "5") {
        AA = "sha512";
        break;
      } else {
        if (AA[3] === "3")
          continue;
        CA.algo[3] === "3" && (AA = "sha384");
      }
    }
    return AA;
  }
  function Y(G, AA) {
    if (G.length === 1)
      return G;
    let sA = 0;
    for (let CA = 0; CA < G.length; ++CA)
      G[CA].algo === AA && (G[sA++] = G[CA]);
    return G.length = sA, G;
  }
  function w(G, AA) {
    if (G.length !== AA.length)
      return !1;
    for (let sA = 0; sA < G.length; ++sA)
      if (G[sA] !== AA[sA]) {
        if (G[sA] === "+" && AA[sA] === "-" || G[sA] === "/" && AA[sA] === "_")
          continue;
        return !1;
      }
    return !0;
  }
  function k(G) {
  }
  function N(G, AA) {
    return G.origin === AA.origin && G.origin === "null" || G.protocol === AA.protocol && G.hostname === AA.hostname && G.port === AA.port;
  }
  function O() {
    let G, AA;
    return { promise: new Promise((CA, RA) => {
      G = CA, AA = RA;
    }), resolve: G, reject: AA };
  }
  function Z(G) {
    return G.controller.state === "aborted";
  }
  function x(G) {
    return G.controller.state === "aborted" || G.controller.state === "terminated";
  }
  const H = {
    delete: "DELETE",
    DELETE: "DELETE",
    get: "GET",
    GET: "GET",
    head: "HEAD",
    HEAD: "HEAD",
    options: "OPTIONS",
    OPTIONS: "OPTIONS",
    post: "POST",
    POST: "POST",
    put: "PUT",
    PUT: "PUT"
  };
  Object.setPrototypeOf(H, null);
  function iA(G) {
    return H[G.toLowerCase()] ?? G;
  }
  function IA(G) {
    const AA = JSON.stringify(G);
    if (AA === void 0)
      throw new TypeError("Value is not JSON serializable");
    return i(typeof AA == "string"), AA;
  }
  const EA = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));
  function MA(G, AA, sA) {
    const CA = {
      index: 0,
      kind: sA,
      target: G
    }, RA = {
      next() {
        if (Object.getPrototypeOf(this) !== RA)
          throw new TypeError(
            `'next' called on an object that does not implement interface ${AA} Iterator.`
          );
        const { index: HA, kind: $A, target: ye } = CA, we = ye(), Sr = we.length;
        if (HA >= Sr)
          return { value: void 0, done: !0 };
        const Ur = we[HA];
        return CA.index = HA + 1, kA(Ur, $A);
      },
      // The class string of an iterator prototype object for a given interface is the
      // result of concatenating the identifier of the interface and the string " Iterator".
      [Symbol.toStringTag]: `${AA} Iterator`
    };
    return Object.setPrototypeOf(RA, EA), Object.setPrototypeOf({}, RA);
  }
  function kA(G, AA) {
    let sA;
    switch (AA) {
      case "key": {
        sA = G[0];
        break;
      }
      case "value": {
        sA = G[1];
        break;
      }
      case "key+value": {
        sA = G;
        break;
      }
    }
    return { value: sA, done: !1 };
  }
  async function NA(G, AA, sA) {
    const CA = AA, RA = sA;
    let HA;
    try {
      HA = G.stream.getReader();
    } catch ($A) {
      RA($A);
      return;
    }
    try {
      const $A = await $e(HA);
      CA($A);
    } catch ($A) {
      RA($A);
    }
  }
  let DA = globalThis.ReadableStream;
  function pA(G) {
    return DA || (DA = Ge.ReadableStream), G instanceof DA || G[Symbol.toStringTag] === "ReadableStream" && typeof G.tee == "function";
  }
  const BA = 65535;
  function yA(G) {
    return G.length < BA ? String.fromCharCode(...G) : G.reduce((AA, sA) => AA + String.fromCharCode(sA), "");
  }
  function GA(G) {
    try {
      G.close();
    } catch (AA) {
      if (!AA.message.includes("Controller is already closed"))
        throw AA;
    }
  }
  function Ce(G) {
    for (let AA = 0; AA < G.length; AA++)
      i(G.charCodeAt(AA) <= 255);
    return G;
  }
  async function $e(G) {
    const AA = [];
    let sA = 0;
    for (; ; ) {
      const { done: CA, value: RA } = await G.read();
      if (CA)
        return Buffer.concat(AA, sA);
      if (!E(RA))
        throw new TypeError("Received non-Uint8Array chunk");
      AA.push(RA), sA += RA.length;
    }
  }
  function W(G) {
    i("protocol" in G);
    const AA = G.protocol;
    return AA === "about:" || AA === "blob:" || AA === "data:";
  }
  function $(G) {
    return typeof G == "string" ? G.startsWith("https:") : G.protocol === "https:";
  }
  function oA(G) {
    i("protocol" in G);
    const AA = G.protocol;
    return AA === "http:" || AA === "https:";
  }
  const hA = Object.hasOwn || ((G, AA) => Object.prototype.hasOwnProperty.call(G, AA));
  return xa = {
    isAborted: Z,
    isCancelled: x,
    createDeferredPromise: O,
    ReadableStreamFrom: g,
    toUSVString: n,
    tryUpgradeRequestToAPotentiallyTrustworthyURL: k,
    coarsenedSharedCurrentTime: z,
    determineRequestsReferrer: X,
    makePolicyContainer: _,
    clonePolicyContainer: q,
    appendFetchMetadata: M,
    appendRequestOriginHeader: F,
    TAOCheck: b,
    corsCheck: D,
    crossOriginResourcePolicyCheck: R,
    createOpaqueTimingInfo: U,
    setRequestReferrerPolicyOnRedirect: p,
    isValidHTTPToken: l,
    requestBadPort: I,
    requestCurrentURL: u,
    responseURL: c,
    responseLocationURL: h,
    isBlobLike: o,
    isURLPotentiallyTrustworthy: K,
    isValidReasonPhrase: f,
    sameOrigin: N,
    normalizeMethod: iA,
    serializeJavascriptValueToJSONString: IA,
    makeIterator: MA,
    isValidHeaderName: y,
    isValidHeaderValue: d,
    hasOwn: hA,
    isErrorLike: C,
    fullyReadBody: NA,
    bytesMatch: P,
    isReadableStreamLike: pA,
    readableStreamClose: GA,
    isomorphicEncode: Ce,
    isomorphicDecode: yA,
    urlIsLocal: W,
    urlHasHttpsScheme: $,
    urlIsHttpHttpsScheme: oA,
    readAllBytes: $e,
    normalizeMethodRecord: H,
    parseMetadata: eA
  }, xa;
}
var Oa, WB;
function Nr() {
  return WB || (WB = 1, Oa = {
    kUrl: Symbol("url"),
    kHeaders: Symbol("headers"),
    kSignal: Symbol("signal"),
    kState: Symbol("state"),
    kGuard: Symbol("guard"),
    kRealm: Symbol("realm")
  }), Oa;
}
var Pa, qB;
function et() {
  if (qB) return Pa;
  qB = 1;
  const { types: e } = le, { hasOwn: A, toUSVString: t } = mt(), s = {};
  return s.converters = {}, s.util = {}, s.errors = {}, s.errors.exception = function(r) {
    return new TypeError(`${r.header}: ${r.message}`);
  }, s.errors.conversionFailed = function(r) {
    const o = r.types.length === 1 ? "" : " one of", n = `${r.argument} could not be converted to${o}: ${r.types.join(", ")}.`;
    return s.errors.exception({
      header: r.prefix,
      message: n
    });
  }, s.errors.invalidArgument = function(r) {
    return s.errors.exception({
      header: r.prefix,
      message: `"${r.value}" is an invalid ${r.type}.`
    });
  }, s.brandCheck = function(r, o, n = void 0) {
    if ((n == null ? void 0 : n.strict) !== !1 && !(r instanceof o))
      throw new TypeError("Illegal invocation");
    return (r == null ? void 0 : r[Symbol.toStringTag]) === o.prototype[Symbol.toStringTag];
  }, s.argumentLengthCheck = function({ length: r }, o, n) {
    if (r < o)
      throw s.errors.exception({
        message: `${o} argument${o !== 1 ? "s" : ""} required, but${r ? " only" : ""} ${r} found.`,
        ...n
      });
  }, s.illegalConstructor = function() {
    throw s.errors.exception({
      header: "TypeError",
      message: "Illegal constructor"
    });
  }, s.util.Type = function(r) {
    switch (typeof r) {
      case "undefined":
        return "Undefined";
      case "boolean":
        return "Boolean";
      case "string":
        return "String";
      case "symbol":
        return "Symbol";
      case "number":
        return "Number";
      case "bigint":
        return "BigInt";
      case "function":
      case "object":
        return r === null ? "Null" : "Object";
    }
  }, s.util.ConvertToInt = function(r, o, n, g = {}) {
    let i, E;
    o === 64 ? (i = Math.pow(2, 53) - 1, n === "unsigned" ? E = 0 : E = Math.pow(-2, 53) + 1) : n === "unsigned" ? (E = 0, i = Math.pow(2, o) - 1) : (E = Math.pow(-2, o) - 1, i = Math.pow(2, o - 1) - 1);
    let a = Number(r);
    if (a === 0 && (a = 0), g.enforceRange === !0) {
      if (Number.isNaN(a) || a === Number.POSITIVE_INFINITY || a === Number.NEGATIVE_INFINITY)
        throw s.errors.exception({
          header: "Integer conversion",
          message: `Could not convert ${r} to an integer.`
        });
      if (a = s.util.IntegerPart(a), a < E || a > i)
        throw s.errors.exception({
          header: "Integer conversion",
          message: `Value must be between ${E}-${i}, got ${a}.`
        });
      return a;
    }
    return !Number.isNaN(a) && g.clamp === !0 ? (a = Math.min(Math.max(a, E), i), Math.floor(a) % 2 === 0 ? a = Math.floor(a) : a = Math.ceil(a), a) : Number.isNaN(a) || a === 0 && Object.is(0, a) || a === Number.POSITIVE_INFINITY || a === Number.NEGATIVE_INFINITY ? 0 : (a = s.util.IntegerPart(a), a = a % Math.pow(2, o), n === "signed" && a >= Math.pow(2, o) - 1 ? a - Math.pow(2, o) : a);
  }, s.util.IntegerPart = function(r) {
    const o = Math.floor(Math.abs(r));
    return r < 0 ? -1 * o : o;
  }, s.sequenceConverter = function(r) {
    return (o) => {
      var i;
      if (s.util.Type(o) !== "Object")
        throw s.errors.exception({
          header: "Sequence",
          message: `Value of type ${s.util.Type(o)} is not an Object.`
        });
      const n = (i = o == null ? void 0 : o[Symbol.iterator]) == null ? void 0 : i.call(o), g = [];
      if (n === void 0 || typeof n.next != "function")
        throw s.errors.exception({
          header: "Sequence",
          message: "Object is not an iterator."
        });
      for (; ; ) {
        const { done: E, value: a } = n.next();
        if (E)
          break;
        g.push(r(a));
      }
      return g;
    };
  }, s.recordConverter = function(r, o) {
    return (n) => {
      if (s.util.Type(n) !== "Object")
        throw s.errors.exception({
          header: "Record",
          message: `Value of type ${s.util.Type(n)} is not an Object.`
        });
      const g = {};
      if (!e.isProxy(n)) {
        const E = Object.keys(n);
        for (const a of E) {
          const Q = r(a), c = o(n[a]);
          g[Q] = c;
        }
        return g;
      }
      const i = Reflect.ownKeys(n);
      for (const E of i) {
        const a = Reflect.getOwnPropertyDescriptor(n, E);
        if (a != null && a.enumerable) {
          const Q = r(E), c = o(n[E]);
          g[Q] = c;
        }
      }
      return g;
    };
  }, s.interfaceConverter = function(r) {
    return (o, n = {}) => {
      if (n.strict !== !1 && !(o instanceof r))
        throw s.errors.exception({
          header: r.name,
          message: `Expected ${o} to be an instance of ${r.name}.`
        });
      return o;
    };
  }, s.dictionaryConverter = function(r) {
    return (o) => {
      const n = s.util.Type(o), g = {};
      if (n === "Null" || n === "Undefined")
        return g;
      if (n !== "Object")
        throw s.errors.exception({
          header: "Dictionary",
          message: `Expected ${o} to be one of: Null, Undefined, Object.`
        });
      for (const i of r) {
        const { key: E, defaultValue: a, required: Q, converter: c } = i;
        if (Q === !0 && !A(o, E))
          throw s.errors.exception({
            header: "Dictionary",
            message: `Missing required key "${E}".`
          });
        let h = o[E];
        const u = A(i, "defaultValue");
        if (u && h !== null && (h = h ?? a), Q || u || h !== void 0) {
          if (h = c(h), i.allowedValues && !i.allowedValues.includes(h))
            throw s.errors.exception({
              header: "Dictionary",
              message: `${h} is not an accepted type. Expected one of ${i.allowedValues.join(", ")}.`
            });
          g[E] = h;
        }
      }
      return g;
    };
  }, s.nullableConverter = function(r) {
    return (o) => o === null ? o : r(o);
  }, s.converters.DOMString = function(r, o = {}) {
    if (r === null && o.legacyNullToEmptyString)
      return "";
    if (typeof r == "symbol")
      throw new TypeError("Could not convert argument of type symbol to string.");
    return String(r);
  }, s.converters.ByteString = function(r) {
    const o = s.converters.DOMString(r);
    for (let n = 0; n < o.length; n++)
      if (o.charCodeAt(n) > 255)
        throw new TypeError(
          `Cannot convert argument to a ByteString because the character at index ${n} has a value of ${o.charCodeAt(n)} which is greater than 255.`
        );
    return o;
  }, s.converters.USVString = t, s.converters.boolean = function(r) {
    return !!r;
  }, s.converters.any = function(r) {
    return r;
  }, s.converters["long long"] = function(r) {
    return s.util.ConvertToInt(r, 64, "signed");
  }, s.converters["unsigned long long"] = function(r) {
    return s.util.ConvertToInt(r, 64, "unsigned");
  }, s.converters["unsigned long"] = function(r) {
    return s.util.ConvertToInt(r, 32, "unsigned");
  }, s.converters["unsigned short"] = function(r, o) {
    return s.util.ConvertToInt(r, 16, "unsigned", o);
  }, s.converters.ArrayBuffer = function(r, o = {}) {
    if (s.util.Type(r) !== "Object" || !e.isAnyArrayBuffer(r))
      throw s.errors.conversionFailed({
        prefix: `${r}`,
        argument: `${r}`,
        types: ["ArrayBuffer"]
      });
    if (o.allowShared === !1 && e.isSharedArrayBuffer(r))
      throw s.errors.exception({
        header: "ArrayBuffer",
        message: "SharedArrayBuffer is not allowed."
      });
    return r;
  }, s.converters.TypedArray = function(r, o, n = {}) {
    if (s.util.Type(r) !== "Object" || !e.isTypedArray(r) || r.constructor.name !== o.name)
      throw s.errors.conversionFailed({
        prefix: `${o.name}`,
        argument: `${r}`,
        types: [o.name]
      });
    if (n.allowShared === !1 && e.isSharedArrayBuffer(r.buffer))
      throw s.errors.exception({
        header: "ArrayBuffer",
        message: "SharedArrayBuffer is not allowed."
      });
    return r;
  }, s.converters.DataView = function(r, o = {}) {
    if (s.util.Type(r) !== "Object" || !e.isDataView(r))
      throw s.errors.exception({
        header: "DataView",
        message: "Object is not a DataView."
      });
    if (o.allowShared === !1 && e.isSharedArrayBuffer(r.buffer))
      throw s.errors.exception({
        header: "ArrayBuffer",
        message: "SharedArrayBuffer is not allowed."
      });
    return r;
  }, s.converters.BufferSource = function(r, o = {}) {
    if (e.isAnyArrayBuffer(r))
      return s.converters.ArrayBuffer(r, o);
    if (e.isTypedArray(r))
      return s.converters.TypedArray(r, r.constructor);
    if (e.isDataView(r))
      return s.converters.DataView(r, o);
    throw new TypeError(`Could not convert ${r} to a BufferSource.`);
  }, s.converters["sequence<ByteString>"] = s.sequenceConverter(
    s.converters.ByteString
  ), s.converters["sequence<sequence<ByteString>>"] = s.sequenceConverter(
    s.converters["sequence<ByteString>"]
  ), s.converters["record<ByteString, ByteString>"] = s.recordConverter(
    s.converters.ByteString,
    s.converters.ByteString
  ), Pa = {
    webidl: s
  }, Pa;
}
var Wa, _B;
function Wt() {
  if (_B) return Wa;
  _B = 1;
  const e = bA, { atob: A } = ze, { isomorphicDecode: t } = mt(), s = new TextEncoder(), r = /^[!#$%&'*+-.^_|~A-Za-z0-9]+$/, o = /(\u000A|\u000D|\u0009|\u0020)/, n = /[\u0009|\u0020-\u007E|\u0080-\u00FF]/;
  function g(d) {
    e(d.protocol === "data:");
    let p = i(d, !0);
    p = p.slice(5);
    const R = { position: 0 };
    let D = a(
      ",",
      p,
      R
    );
    const b = D.length;
    if (D = y(D, !0, !0), R.position >= p.length)
      return "failure";
    R.position++;
    const M = p.slice(b + 1);
    let F = Q(M);
    if (/;(\u0020){0,}base64$/i.test(D)) {
      const U = t(F);
      if (F = u(U), F === "failure")
        return "failure";
      D = D.slice(0, -6), D = D.replace(/(\u0020)+$/, ""), D = D.slice(0, -1);
    }
    D.startsWith(";") && (D = "text/plain" + D);
    let z = h(D);
    return z === "failure" && (z = h("text/plain;charset=US-ASCII")), { mimeType: z, body: F };
  }
  function i(d, p = !1) {
    if (!p)
      return d.href;
    const R = d.href, D = d.hash.length;
    return D === 0 ? R : R.substring(0, R.length - D);
  }
  function E(d, p, R) {
    let D = "";
    for (; R.position < p.length && d(p[R.position]); )
      D += p[R.position], R.position++;
    return D;
  }
  function a(d, p, R) {
    const D = p.indexOf(d, R.position), b = R.position;
    return D === -1 ? (R.position = p.length, p.slice(b)) : (R.position = D, p.slice(b, R.position));
  }
  function Q(d) {
    const p = s.encode(d);
    return c(p);
  }
  function c(d) {
    const p = [];
    for (let R = 0; R < d.length; R++) {
      const D = d[R];
      if (D !== 37)
        p.push(D);
      else if (D === 37 && !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(d[R + 1], d[R + 2])))
        p.push(37);
      else {
        const b = String.fromCharCode(d[R + 1], d[R + 2]), M = Number.parseInt(b, 16);
        p.push(M), R += 2;
      }
    }
    return Uint8Array.from(p);
  }
  function h(d) {
    d = B(d, !0, !0);
    const p = { position: 0 }, R = a(
      "/",
      d,
      p
    );
    if (R.length === 0 || !r.test(R) || p.position > d.length)
      return "failure";
    p.position++;
    let D = a(
      ";",
      d,
      p
    );
    if (D = B(D, !1, !0), D.length === 0 || !r.test(D))
      return "failure";
    const b = R.toLowerCase(), M = D.toLowerCase(), F = {
      type: b,
      subtype: M,
      /** @type {Map<string, string>} */
      parameters: /* @__PURE__ */ new Map(),
      // https://mimesniff.spec.whatwg.org/#mime-type-essence
      essence: `${b}/${M}`
    };
    for (; p.position < d.length; ) {
      p.position++, E(
        // https://fetch.spec.whatwg.org/#http-whitespace
        (_) => o.test(_),
        d,
        p
      );
      let z = E(
        (_) => _ !== ";" && _ !== "=",
        d,
        p
      );
      if (z = z.toLowerCase(), p.position < d.length) {
        if (d[p.position] === ";")
          continue;
        p.position++;
      }
      if (p.position > d.length)
        break;
      let U = null;
      if (d[p.position] === '"')
        U = I(d, p, !0), a(
          ";",
          d,
          p
        );
      else if (U = a(
        ";",
        d,
        p
      ), U = B(U, !1, !0), U.length === 0)
        continue;
      z.length !== 0 && r.test(z) && (U.length === 0 || n.test(U)) && !F.parameters.has(z) && F.parameters.set(z, U);
    }
    return F;
  }
  function u(d) {
    if (d = d.replace(/[\u0009\u000A\u000C\u000D\u0020]/g, ""), d.length % 4 === 0 && (d = d.replace(/=?=$/, "")), d.length % 4 === 1 || /[^+/0-9A-Za-z]/.test(d))
      return "failure";
    const p = A(d), R = new Uint8Array(p.length);
    for (let D = 0; D < p.length; D++)
      R[D] = p.charCodeAt(D);
    return R;
  }
  function I(d, p, R) {
    const D = p.position;
    let b = "";
    for (e(d[p.position] === '"'), p.position++; b += E(
      (F) => F !== '"' && F !== "\\",
      d,
      p
    ), !(p.position >= d.length); ) {
      const M = d[p.position];
      if (p.position++, M === "\\") {
        if (p.position >= d.length) {
          b += "\\";
          break;
        }
        b += d[p.position], p.position++;
      } else {
        e(M === '"');
        break;
      }
    }
    return R ? b : d.slice(D, p.position);
  }
  function C(d) {
    e(d !== "failure");
    const { parameters: p, essence: R } = d;
    let D = R;
    for (let [b, M] of p.entries())
      D += ";", D += b, D += "=", r.test(M) || (M = M.replace(/(\\|")/g, "\\$1"), M = '"' + M, M += '"'), D += M;
    return D;
  }
  function f(d) {
    return d === "\r" || d === `
` || d === "	" || d === " ";
  }
  function B(d, p = !0, R = !0) {
    let D = 0, b = d.length - 1;
    if (p)
      for (; D < d.length && f(d[D]); D++) ;
    if (R)
      for (; b > 0 && f(d[b]); b--) ;
    return d.slice(D, b + 1);
  }
  function l(d) {
    return d === "\r" || d === `
` || d === "	" || d === "\f" || d === " ";
  }
  function y(d, p = !0, R = !0) {
    let D = 0, b = d.length - 1;
    if (p)
      for (; D < d.length && l(d[D]); D++) ;
    if (R)
      for (; b > 0 && l(d[b]); b--) ;
    return d.slice(D, b + 1);
  }
  return Wa = {
    dataURLProcessor: g,
    URLSerializer: i,
    collectASequenceOfCodePoints: E,
    collectASequenceOfCodePointsFast: a,
    stringPercentDecode: Q,
    parseMIMEType: h,
    collectAnHTTPQuotedString: I,
    serializeAMimeType: C
  }, Wa;
}
var qa, $B;
function ec() {
  if ($B) return qa;
  $B = 1;
  const { Blob: e, File: A } = ze, { types: t } = le, { kState: s } = Nr(), { isBlobLike: r } = mt(), { webidl: o } = et(), { parseMIMEType: n, serializeAMimeType: g } = Wt(), { kEnumerableProperty: i } = vA, E = new TextEncoder();
  class a extends e {
    constructor(C, f, B = {}) {
      o.argumentLengthCheck(arguments, 2, { header: "File constructor" }), C = o.converters["sequence<BlobPart>"](C), f = o.converters.USVString(f), B = o.converters.FilePropertyBag(B);
      const l = f;
      let y = B.type, d;
      A: {
        if (y) {
          if (y = n(y), y === "failure") {
            y = "";
            break A;
          }
          y = g(y).toLowerCase();
        }
        d = B.lastModified;
      }
      super(c(C, B), { type: y }), this[s] = {
        name: l,
        lastModified: d,
        type: y
      };
    }
    get name() {
      return o.brandCheck(this, a), this[s].name;
    }
    get lastModified() {
      return o.brandCheck(this, a), this[s].lastModified;
    }
    get type() {
      return o.brandCheck(this, a), this[s].type;
    }
  }
  class Q {
    constructor(C, f, B = {}) {
      const l = f, y = B.type, d = B.lastModified ?? Date.now();
      this[s] = {
        blobLike: C,
        name: l,
        type: y,
        lastModified: d
      };
    }
    stream(...C) {
      return o.brandCheck(this, Q), this[s].blobLike.stream(...C);
    }
    arrayBuffer(...C) {
      return o.brandCheck(this, Q), this[s].blobLike.arrayBuffer(...C);
    }
    slice(...C) {
      return o.brandCheck(this, Q), this[s].blobLike.slice(...C);
    }
    text(...C) {
      return o.brandCheck(this, Q), this[s].blobLike.text(...C);
    }
    get size() {
      return o.brandCheck(this, Q), this[s].blobLike.size;
    }
    get type() {
      return o.brandCheck(this, Q), this[s].blobLike.type;
    }
    get name() {
      return o.brandCheck(this, Q), this[s].name;
    }
    get lastModified() {
      return o.brandCheck(this, Q), this[s].lastModified;
    }
    get [Symbol.toStringTag]() {
      return "File";
    }
  }
  Object.defineProperties(a.prototype, {
    [Symbol.toStringTag]: {
      value: "File",
      configurable: !0
    },
    name: i,
    lastModified: i
  }), o.converters.Blob = o.interfaceConverter(e), o.converters.BlobPart = function(I, C) {
    if (o.util.Type(I) === "Object") {
      if (r(I))
        return o.converters.Blob(I, { strict: !1 });
      if (ArrayBuffer.isView(I) || t.isAnyArrayBuffer(I))
        return o.converters.BufferSource(I, C);
    }
    return o.converters.USVString(I, C);
  }, o.converters["sequence<BlobPart>"] = o.sequenceConverter(
    o.converters.BlobPart
  ), o.converters.FilePropertyBag = o.dictionaryConverter([
    {
      key: "lastModified",
      converter: o.converters["long long"],
      get defaultValue() {
        return Date.now();
      }
    },
    {
      key: "type",
      converter: o.converters.DOMString,
      defaultValue: ""
    },
    {
      key: "endings",
      converter: (I) => (I = o.converters.DOMString(I), I = I.toLowerCase(), I !== "native" && (I = "transparent"), I),
      defaultValue: "transparent"
    }
  ]);
  function c(I, C) {
    const f = [];
    for (const B of I)
      if (typeof B == "string") {
        let l = B;
        C.endings === "native" && (l = h(l)), f.push(E.encode(l));
      } else t.isAnyArrayBuffer(B) || t.isTypedArray(B) ? B.buffer ? f.push(
        new Uint8Array(B.buffer, B.byteOffset, B.byteLength)
      ) : f.push(new Uint8Array(B)) : r(B) && f.push(B);
    return f;
  }
  function h(I) {
    let C = `
`;
    return process.platform === "win32" && (C = `\r
`), I.replace(/\r?\n/g, C);
  }
  function u(I) {
    return A && I instanceof A || I instanceof a || I && (typeof I.stream == "function" || typeof I.arrayBuffer == "function") && I[Symbol.toStringTag] === "File";
  }
  return qa = { File: a, FileLike: Q, isFileLike: u }, qa;
}
var _a, ZB;
function tc() {
  if (ZB) return _a;
  ZB = 1;
  const { isBlobLike: e, toUSVString: A, makeIterator: t } = mt(), { kState: s } = Nr(), { File: r, FileLike: o, isFileLike: n } = ec(), { webidl: g } = et(), { Blob: i, File: E } = ze, a = E ?? r;
  class Q {
    constructor(u) {
      if (u !== void 0)
        throw g.errors.conversionFailed({
          prefix: "FormData constructor",
          argument: "Argument 1",
          types: ["undefined"]
        });
      this[s] = [];
    }
    append(u, I, C = void 0) {
      if (g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 2, { header: "FormData.append" }), arguments.length === 3 && !e(I))
        throw new TypeError(
          "Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'"
        );
      u = g.converters.USVString(u), I = e(I) ? g.converters.Blob(I, { strict: !1 }) : g.converters.USVString(I), C = arguments.length === 3 ? g.converters.USVString(C) : void 0;
      const f = c(u, I, C);
      this[s].push(f);
    }
    delete(u) {
      g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 1, { header: "FormData.delete" }), u = g.converters.USVString(u), this[s] = this[s].filter((I) => I.name !== u);
    }
    get(u) {
      g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 1, { header: "FormData.get" }), u = g.converters.USVString(u);
      const I = this[s].findIndex((C) => C.name === u);
      return I === -1 ? null : this[s][I].value;
    }
    getAll(u) {
      return g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 1, { header: "FormData.getAll" }), u = g.converters.USVString(u), this[s].filter((I) => I.name === u).map((I) => I.value);
    }
    has(u) {
      return g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 1, { header: "FormData.has" }), u = g.converters.USVString(u), this[s].findIndex((I) => I.name === u) !== -1;
    }
    set(u, I, C = void 0) {
      if (g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 2, { header: "FormData.set" }), arguments.length === 3 && !e(I))
        throw new TypeError(
          "Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'"
        );
      u = g.converters.USVString(u), I = e(I) ? g.converters.Blob(I, { strict: !1 }) : g.converters.USVString(I), C = arguments.length === 3 ? A(C) : void 0;
      const f = c(u, I, C), B = this[s].findIndex((l) => l.name === u);
      B !== -1 ? this[s] = [
        ...this[s].slice(0, B),
        f,
        ...this[s].slice(B + 1).filter((l) => l.name !== u)
      ] : this[s].push(f);
    }
    entries() {
      return g.brandCheck(this, Q), t(
        () => this[s].map((u) => [u.name, u.value]),
        "FormData",
        "key+value"
      );
    }
    keys() {
      return g.brandCheck(this, Q), t(
        () => this[s].map((u) => [u.name, u.value]),
        "FormData",
        "key"
      );
    }
    values() {
      return g.brandCheck(this, Q), t(
        () => this[s].map((u) => [u.name, u.value]),
        "FormData",
        "value"
      );
    }
    /**
     * @param {(value: string, key: string, self: FormData) => void} callbackFn
     * @param {unknown} thisArg
     */
    forEach(u, I = globalThis) {
      if (g.brandCheck(this, Q), g.argumentLengthCheck(arguments, 1, { header: "FormData.forEach" }), typeof u != "function")
        throw new TypeError(
          "Failed to execute 'forEach' on 'FormData': parameter 1 is not of type 'Function'."
        );
      for (const [C, f] of this)
        u.apply(I, [f, C, this]);
    }
  }
  Q.prototype[Symbol.iterator] = Q.prototype.entries, Object.defineProperties(Q.prototype, {
    [Symbol.toStringTag]: {
      value: "FormData",
      configurable: !0
    }
  });
  function c(h, u, I) {
    if (h = Buffer.from(h).toString("utf8"), typeof u == "string")
      u = Buffer.from(u).toString("utf8");
    else if (n(u) || (u = u instanceof i ? new a([u], "blob", { type: u.type }) : new o(u, "blob", { type: u.type })), I !== void 0) {
      const C = {
        type: u.type,
        lastModified: u.lastModified
      };
      u = E && u instanceof E || u instanceof r ? new a([u], I, C) : new o(u, I, C);
    }
    return { name: h, value: u };
  }
  return _a = { FormData: Q }, _a;
}
var $a, XB;
function Oi() {
  if (XB) return $a;
  XB = 1;
  const e = Mh(), A = vA, {
    ReadableStreamFrom: t,
    isBlobLike: s,
    isReadableStreamLike: r,
    readableStreamClose: o,
    createDeferredPromise: n,
    fullyReadBody: g
  } = mt(), { FormData: i } = tc(), { kState: E } = Nr(), { webidl: a } = et(), { DOMException: Q, structuredClone: c } = Bs(), { Blob: h, File: u } = ze, { kBodyUsed: I } = Ae, C = bA, { isErrored: f } = vA, { isUint8Array: B, isArrayBuffer: l } = bi, { File: y } = ec(), { parseMIMEType: d, serializeAMimeType: p } = Wt();
  let R;
  try {
    const w = require("node:crypto");
    R = (k) => w.randomInt(0, k);
  } catch {
    R = (w) => Math.floor(Math.random(w));
  }
  let D = globalThis.ReadableStream;
  const b = u ?? y, M = new TextEncoder(), F = new TextDecoder();
  function z(w, k = !1) {
    D || (D = Ge.ReadableStream);
    let N = null;
    w instanceof D ? N = w : s(w) ? N = w.stream() : N = new D({
      async pull(IA) {
        IA.enqueue(
          typeof Z == "string" ? M.encode(Z) : Z
        ), queueMicrotask(() => o(IA));
      },
      start() {
      },
      type: void 0
    }), C(r(N));
    let O = null, Z = null, x = null, H = null;
    if (typeof w == "string")
      Z = w, H = "text/plain;charset=UTF-8";
    else if (w instanceof URLSearchParams)
      Z = w.toString(), H = "application/x-www-form-urlencoded;charset=UTF-8";
    else if (l(w))
      Z = new Uint8Array(w.slice());
    else if (ArrayBuffer.isView(w))
      Z = new Uint8Array(w.buffer.slice(w.byteOffset, w.byteOffset + w.byteLength));
    else if (A.isFormDataLike(w)) {
      const IA = `----formdata-undici-0${`${R(1e11)}`.padStart(11, "0")}`, EA = `--${IA}\r
Content-Disposition: form-data`;
      /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
      const MA = (yA) => yA.replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/"/g, "%22"), kA = (yA) => yA.replace(/\r?\n|\r/g, `\r
`), NA = [], DA = new Uint8Array([13, 10]);
      x = 0;
      let pA = !1;
      for (const [yA, GA] of w)
        if (typeof GA == "string") {
          const Ce = M.encode(EA + `; name="${MA(kA(yA))}"\r
\r
${kA(GA)}\r
`);
          NA.push(Ce), x += Ce.byteLength;
        } else {
          const Ce = M.encode(`${EA}; name="${MA(kA(yA))}"` + (GA.name ? `; filename="${MA(GA.name)}"` : "") + `\r
Content-Type: ${GA.type || "application/octet-stream"}\r
\r
`);
          NA.push(Ce, GA, DA), typeof GA.size == "number" ? x += Ce.byteLength + GA.size + DA.byteLength : pA = !0;
        }
      const BA = M.encode(`--${IA}--`);
      NA.push(BA), x += BA.byteLength, pA && (x = null), Z = w, O = async function* () {
        for (const yA of NA)
          yA.stream ? yield* yA.stream() : yield yA;
      }, H = "multipart/form-data; boundary=" + IA;
    } else if (s(w))
      Z = w, x = w.size, w.type && (H = w.type);
    else if (typeof w[Symbol.asyncIterator] == "function") {
      if (k)
        throw new TypeError("keepalive");
      if (A.isDisturbed(w) || w.locked)
        throw new TypeError(
          "Response body object should not be disturbed or locked"
        );
      N = w instanceof D ? w : t(w);
    }
    if ((typeof Z == "string" || A.isBuffer(Z)) && (x = Buffer.byteLength(Z)), O != null) {
      let IA;
      N = new D({
        async start() {
          IA = O(w)[Symbol.asyncIterator]();
        },
        async pull(EA) {
          const { value: MA, done: kA } = await IA.next();
          return kA ? queueMicrotask(() => {
            EA.close();
          }) : f(N) || EA.enqueue(new Uint8Array(MA)), EA.desiredSize > 0;
        },
        async cancel(EA) {
          await IA.return();
        },
        type: void 0
      });
    }
    return [{ stream: N, source: Z, length: x }, H];
  }
  function U(w, k = !1) {
    return D || (D = Ge.ReadableStream), w instanceof D && (C(!A.isDisturbed(w), "The body has already been consumed."), C(!w.locked, "The stream is locked.")), z(w, k);
  }
  function _(w) {
    const [k, N] = w.stream.tee(), O = c(N, { transfer: [N] }), [, Z] = O.tee();
    return w.stream = k, {
      stream: Z,
      length: w.length,
      source: w.source
    };
  }
  async function* q(w) {
    if (w)
      if (B(w))
        yield w;
      else {
        const k = w.stream;
        if (A.isDisturbed(k))
          throw new TypeError("The body has already been consumed.");
        if (k.locked)
          throw new TypeError("The stream is locked.");
        k[I] = !0, yield* k;
      }
  }
  function X(w) {
    if (w.aborted)
      throw new Q("The operation was aborted.", "AbortError");
  }
  function nA(w) {
    return {
      blob() {
        return P(this, (N) => {
          let O = Y(this);
          return O === "failure" ? O = "" : O && (O = p(O)), new h([N], { type: O });
        }, w);
      },
      arrayBuffer() {
        return P(this, (N) => new Uint8Array(N).buffer, w);
      },
      text() {
        return P(this, eA, w);
      },
      json() {
        return P(this, v, w);
      },
      async formData() {
        a.brandCheck(this, w), X(this[E]);
        const N = this.headers.get("Content-Type");
        if (/multipart\/form-data/.test(N)) {
          const O = {};
          for (const [iA, IA] of this.headers) O[iA.toLowerCase()] = IA;
          const Z = new i();
          let x;
          try {
            x = new e({
              headers: O,
              preservePath: !0
            });
          } catch (iA) {
            throw new Q(`${iA}`, "AbortError");
          }
          x.on("field", (iA, IA) => {
            Z.append(iA, IA);
          }), x.on("file", (iA, IA, EA, MA, kA) => {
            const NA = [];
            if (MA === "base64" || MA.toLowerCase() === "base64") {
              let DA = "";
              IA.on("data", (pA) => {
                DA += pA.toString().replace(/[\r\n]/gm, "");
                const BA = DA.length - DA.length % 4;
                NA.push(Buffer.from(DA.slice(0, BA), "base64")), DA = DA.slice(BA);
              }), IA.on("end", () => {
                NA.push(Buffer.from(DA, "base64")), Z.append(iA, new b(NA, EA, { type: kA }));
              });
            } else
              IA.on("data", (DA) => {
                NA.push(DA);
              }), IA.on("end", () => {
                Z.append(iA, new b(NA, EA, { type: kA }));
              });
          });
          const H = new Promise((iA, IA) => {
            x.on("finish", iA), x.on("error", (EA) => IA(new TypeError(EA)));
          });
          if (this.body !== null) for await (const iA of q(this[E].body)) x.write(iA);
          return x.end(), await H, Z;
        } else if (/application\/x-www-form-urlencoded/.test(N)) {
          let O;
          try {
            let x = "";
            const H = new TextDecoder("utf-8", { ignoreBOM: !0 });
            for await (const iA of q(this[E].body)) {
              if (!B(iA))
                throw new TypeError("Expected Uint8Array chunk");
              x += H.decode(iA, { stream: !0 });
            }
            x += H.decode(), O = new URLSearchParams(x);
          } catch (x) {
            throw Object.assign(new TypeError(), { cause: x });
          }
          const Z = new i();
          for (const [x, H] of O)
            Z.append(x, H);
          return Z;
        } else
          throw await Promise.resolve(), X(this[E]), a.errors.exception({
            header: `${w.name}.formData`,
            message: "Could not parse content as FormData."
          });
      }
    };
  }
  function K(w) {
    Object.assign(w.prototype, nA(w));
  }
  async function P(w, k, N) {
    if (a.brandCheck(w, N), X(w[E]), L(w[E].body))
      throw new TypeError("Body is unusable");
    const O = n(), Z = (H) => O.reject(H), x = (H) => {
      try {
        O.resolve(k(H));
      } catch (iA) {
        Z(iA);
      }
    };
    return w[E].body == null ? (x(new Uint8Array()), O.promise) : (await g(w[E].body, x, Z), O.promise);
  }
  function L(w) {
    return w != null && (w.stream.locked || A.isDisturbed(w.stream));
  }
  function eA(w) {
    return w.length === 0 ? "" : (w[0] === 239 && w[1] === 187 && w[2] === 191 && (w = w.subarray(3)), F.decode(w));
  }
  function v(w) {
    return JSON.parse(eA(w));
  }
  function Y(w) {
    const { headersList: k } = w[E], N = k.get("content-type");
    return N === null ? "failure" : d(N);
  }
  return $a = {
    extractBody: z,
    safelyExtractBody: U,
    cloneBody: _,
    mixinBody: K
  }, $a;
}
const {
  InvalidArgumentError: WA,
  NotSupportedError: wF
} = _A, Kt = bA, { kHTTP2BuildRequest: DF, kHTTP2CopyHeaders: RF, kHTTP1BuildRequest: mF } = Ae, Xe = vA, kd = /^[\^_`a-zA-Z\-0-9!#$%&'*+.|~]+$/, Fd = /[^\t\x20-\x7e\x80-\xff]/, kF = /[^\u0021-\u00ff]/, pt = Symbol("handler"), Ie = {};
let Za;
try {
  const e = require("diagnostics_channel");
  Ie.create = e.channel("undici:request:create"), Ie.bodySent = e.channel("undici:request:bodySent"), Ie.headers = e.channel("undici:request:headers"), Ie.trailers = e.channel("undici:request:trailers"), Ie.error = e.channel("undici:request:error");
} catch {
  Ie.create = { hasSubscribers: !1 }, Ie.bodySent = { hasSubscribers: !1 }, Ie.headers = { hasSubscribers: !1 }, Ie.trailers = { hasSubscribers: !1 }, Ie.error = { hasSubscribers: !1 };
}
let FF = class IQ {
  constructor(A, {
    path: t,
    method: s,
    body: r,
    headers: o,
    query: n,
    idempotent: g,
    blocking: i,
    upgrade: E,
    headersTimeout: a,
    bodyTimeout: Q,
    reset: c,
    throwOnError: h,
    expectContinue: u
  }, I) {
    if (typeof t != "string")
      throw new WA("path must be a string");
    if (t[0] !== "/" && !(t.startsWith("http://") || t.startsWith("https://")) && s !== "CONNECT")
      throw new WA("path must be an absolute URL or start with a slash");
    if (kF.exec(t) !== null)
      throw new WA("invalid request path");
    if (typeof s != "string")
      throw new WA("method must be a string");
    if (kd.exec(s) === null)
      throw new WA("invalid request method");
    if (E && typeof E != "string")
      throw new WA("upgrade must be a string");
    if (a != null && (!Number.isFinite(a) || a < 0))
      throw new WA("invalid headersTimeout");
    if (Q != null && (!Number.isFinite(Q) || Q < 0))
      throw new WA("invalid bodyTimeout");
    if (c != null && typeof c != "boolean")
      throw new WA("invalid reset");
    if (u != null && typeof u != "boolean")
      throw new WA("invalid expectContinue");
    if (this.headersTimeout = a, this.bodyTimeout = Q, this.throwOnError = h === !0, this.method = s, this.abort = null, r == null)
      this.body = null;
    else if (Xe.isStream(r)) {
      this.body = r;
      const C = this.body._readableState;
      (!C || !C.autoDestroy) && (this.endHandler = function() {
        Xe.destroy(this);
      }, this.body.on("end", this.endHandler)), this.errorHandler = (f) => {
        this.abort ? this.abort(f) : this.error = f;
      }, this.body.on("error", this.errorHandler);
    } else if (Xe.isBuffer(r))
      this.body = r.byteLength ? r : null;
    else if (ArrayBuffer.isView(r))
      this.body = r.buffer.byteLength ? Buffer.from(r.buffer, r.byteOffset, r.byteLength) : null;
    else if (r instanceof ArrayBuffer)
      this.body = r.byteLength ? Buffer.from(r) : null;
    else if (typeof r == "string")
      this.body = r.length ? Buffer.from(r) : null;
    else if (Xe.isFormDataLike(r) || Xe.isIterable(r) || Xe.isBlobLike(r))
      this.body = r;
    else
      throw new WA("body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable");
    if (this.completed = !1, this.aborted = !1, this.upgrade = E || null, this.path = n ? Xe.buildURL(t, n) : t, this.origin = A, this.idempotent = g ?? (s === "HEAD" || s === "GET"), this.blocking = i ?? !1, this.reset = c ?? null, this.host = null, this.contentLength = null, this.contentType = null, this.headers = "", this.expectContinue = u ?? !1, Array.isArray(o)) {
      if (o.length % 2 !== 0)
        throw new WA("headers array must be even");
      for (let C = 0; C < o.length; C += 2)
        po(this, o[C], o[C + 1]);
    } else if (o && typeof o == "object") {
      const C = Object.keys(o);
      for (let f = 0; f < C.length; f++) {
        const B = C[f];
        po(this, B, o[B]);
      }
    } else if (o != null)
      throw new WA("headers must be an object or an array");
    if (Xe.isFormDataLike(this.body)) {
      if (Xe.nodeMajor < 16 || Xe.nodeMajor === 16 && Xe.nodeMinor < 8)
        throw new WA("Form-Data bodies are only supported in node v16.8 and newer.");
      Za || (Za = Oi().extractBody);
      const [C, f] = Za(r);
      this.contentType == null && (this.contentType = f, this.headers += `content-type: ${f}\r
`), this.body = C.stream, this.contentLength = C.length;
    } else Xe.isBlobLike(r) && this.contentType == null && r.type && (this.contentType = r.type, this.headers += `content-type: ${r.type}\r
`);
    Xe.validateHandler(I, s, E), this.servername = Xe.getServerName(this.host), this[pt] = I, Ie.create.hasSubscribers && Ie.create.publish({ request: this });
  }
  onBodySent(A) {
    if (this[pt].onBodySent)
      try {
        return this[pt].onBodySent(A);
      } catch (t) {
        this.abort(t);
      }
  }
  onRequestSent() {
    if (Ie.bodySent.hasSubscribers && Ie.bodySent.publish({ request: this }), this[pt].onRequestSent)
      try {
        return this[pt].onRequestSent();
      } catch (A) {
        this.abort(A);
      }
  }
  onConnect(A) {
    if (Kt(!this.aborted), Kt(!this.completed), this.error)
      A(this.error);
    else
      return this.abort = A, this[pt].onConnect(A);
  }
  onHeaders(A, t, s, r) {
    Kt(!this.aborted), Kt(!this.completed), Ie.headers.hasSubscribers && Ie.headers.publish({ request: this, response: { statusCode: A, headers: t, statusText: r } });
    try {
      return this[pt].onHeaders(A, t, s, r);
    } catch (o) {
      this.abort(o);
    }
  }
  onData(A) {
    Kt(!this.aborted), Kt(!this.completed);
    try {
      return this[pt].onData(A);
    } catch (t) {
      return this.abort(t), !1;
    }
  }
  onUpgrade(A, t, s) {
    return Kt(!this.aborted), Kt(!this.completed), this[pt].onUpgrade(A, t, s);
  }
  onComplete(A) {
    this.onFinally(), Kt(!this.aborted), this.completed = !0, Ie.trailers.hasSubscribers && Ie.trailers.publish({ request: this, trailers: A });
    try {
      return this[pt].onComplete(A);
    } catch (t) {
      this.onError(t);
    }
  }
  onError(A) {
    if (this.onFinally(), Ie.error.hasSubscribers && Ie.error.publish({ request: this, error: A }), !this.aborted)
      return this.aborted = !0, this[pt].onError(A);
  }
  onFinally() {
    this.errorHandler && (this.body.off("error", this.errorHandler), this.errorHandler = null), this.endHandler && (this.body.off("end", this.endHandler), this.endHandler = null);
  }
  // TODO: adjust to support H2
  addHeader(A, t) {
    return po(this, A, t), this;
  }
  static [mF](A, t, s) {
    return new IQ(A, t, s);
  }
  static [DF](A, t, s) {
    const r = t.headers;
    t = { ...t, headers: null };
    const o = new IQ(A, t, s);
    if (o.headers = {}, Array.isArray(r)) {
      if (r.length % 2 !== 0)
        throw new WA("headers array must be even");
      for (let n = 0; n < r.length; n += 2)
        po(o, r[n], r[n + 1], !0);
    } else if (r && typeof r == "object") {
      const n = Object.keys(r);
      for (let g = 0; g < n.length; g++) {
        const i = n[g];
        po(o, i, r[i], !0);
      }
    } else if (r != null)
      throw new WA("headers must be an object or an array");
    return o;
  }
  static [RF](A) {
    const t = A.split(`\r
`), s = {};
    for (const r of t) {
      const [o, n] = r.split(": ");
      n == null || n.length === 0 || (s[o] ? s[o] += `,${n}` : s[o] = n);
    }
    return s;
  }
};
function qr(e, A, t) {
  if (A && typeof A == "object")
    throw new WA(`invalid ${e} header`);
  if (A = A != null ? `${A}` : "", Fd.exec(A) !== null)
    throw new WA(`invalid ${e} header`);
  return t ? A : `${e}: ${A}\r
`;
}
function po(e, A, t, s = !1) {
  if (t && typeof t == "object" && !Array.isArray(t))
    throw new WA(`invalid ${A} header`);
  if (t === void 0)
    return;
  if (e.host === null && A.length === 4 && A.toLowerCase() === "host") {
    if (Fd.exec(t) !== null)
      throw new WA(`invalid ${A} header`);
    e.host = t;
  } else if (e.contentLength === null && A.length === 14 && A.toLowerCase() === "content-length") {
    if (e.contentLength = parseInt(t, 10), !Number.isFinite(e.contentLength))
      throw new WA("invalid content-length header");
  } else if (e.contentType === null && A.length === 12 && A.toLowerCase() === "content-type")
    e.contentType = t, s ? e.headers[A] = qr(A, t, s) : e.headers += qr(A, t);
  else {
    if (A.length === 17 && A.toLowerCase() === "transfer-encoding")
      throw new WA("invalid transfer-encoding header");
    if (A.length === 10 && A.toLowerCase() === "connection") {
      const r = typeof t == "string" ? t.toLowerCase() : null;
      if (r !== "close" && r !== "keep-alive")
        throw new WA("invalid connection header");
      r === "close" && (e.reset = !0);
    } else {
      if (A.length === 10 && A.toLowerCase() === "keep-alive")
        throw new WA("invalid keep-alive header");
      if (A.length === 7 && A.toLowerCase() === "upgrade")
        throw new WA("invalid upgrade header");
      if (A.length === 6 && A.toLowerCase() === "expect")
        throw new wF("expect header not supported");
      if (kd.exec(A) === null)
        throw new WA("invalid header key");
      if (Array.isArray(t))
        for (let r = 0; r < t.length; r++)
          s ? e.headers[A] ? e.headers[A] += `,${qr(A, t[r], s)}` : e.headers[A] = qr(A, t[r], s) : e.headers += qr(A, t[r]);
      else
        s ? e.headers[A] = qr(A, t, s) : e.headers += qr(A, t);
    }
  }
}
var bF = FF;
const NF = xt;
let SF = class extends NF {
  dispatch() {
    throw new Error("not implemented");
  }
  close() {
    throw new Error("not implemented");
  }
  destroy() {
    throw new Error("not implemented");
  }
};
var rc = SF;
const UF = rc, {
  ClientDestroyedError: Xa,
  ClientClosedError: LF,
  InvalidArgumentError: ys
} = _A, { kDestroy: TF, kClose: MF, kDispatch: Ka, kInterceptors: _r } = Ae, ws = Symbol("destroyed"), yo = Symbol("closed"), jt = Symbol("onDestroyed"), Ds = Symbol("onClosed"), Gn = Symbol("Intercepted Dispatch");
let GF = class extends UF {
  constructor() {
    super(), this[ws] = !1, this[jt] = null, this[yo] = !1, this[Ds] = [];
  }
  get destroyed() {
    return this[ws];
  }
  get closed() {
    return this[yo];
  }
  get interceptors() {
    return this[_r];
  }
  set interceptors(A) {
    if (A) {
      for (let t = A.length - 1; t >= 0; t--)
        if (typeof this[_r][t] != "function")
          throw new ys("interceptor must be an function");
    }
    this[_r] = A;
  }
  close(A) {
    if (A === void 0)
      return new Promise((s, r) => {
        this.close((o, n) => o ? r(o) : s(n));
      });
    if (typeof A != "function")
      throw new ys("invalid callback");
    if (this[ws]) {
      queueMicrotask(() => A(new Xa(), null));
      return;
    }
    if (this[yo]) {
      this[Ds] ? this[Ds].push(A) : queueMicrotask(() => A(null, null));
      return;
    }
    this[yo] = !0, this[Ds].push(A);
    const t = () => {
      const s = this[Ds];
      this[Ds] = null;
      for (let r = 0; r < s.length; r++)
        s[r](null, null);
    };
    this[MF]().then(() => this.destroy()).then(() => {
      queueMicrotask(t);
    });
  }
  destroy(A, t) {
    if (typeof A == "function" && (t = A, A = null), t === void 0)
      return new Promise((r, o) => {
        this.destroy(A, (n, g) => n ? (
          /* istanbul ignore next: should never error */
          o(n)
        ) : r(g));
      });
    if (typeof t != "function")
      throw new ys("invalid callback");
    if (this[ws]) {
      this[jt] ? this[jt].push(t) : queueMicrotask(() => t(null, null));
      return;
    }
    A || (A = new Xa()), this[ws] = !0, this[jt] = this[jt] || [], this[jt].push(t);
    const s = () => {
      const r = this[jt];
      this[jt] = null;
      for (let o = 0; o < r.length; o++)
        r[o](null, null);
    };
    this[TF](A).then(() => {
      queueMicrotask(s);
    });
  }
  [Gn](A, t) {
    if (!this[_r] || this[_r].length === 0)
      return this[Gn] = this[Ka], this[Ka](A, t);
    let s = this[Ka].bind(this);
    for (let r = this[_r].length - 1; r >= 0; r--)
      s = this[_r][r](s);
    return this[Gn] = s, s(A, t);
  }
  dispatch(A, t) {
    if (!t || typeof t != "object")
      throw new ys("handler must be an object");
    try {
      if (!A || typeof A != "object")
        throw new ys("opts must be an object.");
      if (this[ws] || this[jt])
        throw new Xa();
      if (this[yo])
        throw new LF();
      return this[Gn](A, t);
    } catch (s) {
      if (typeof t.onError != "function")
        throw new ys("invalid onError method");
      return t.onError(s), !1;
    }
  }
};
var Pi = GF;
const YF = Zs, KB = bA, bd = vA, { InvalidArgumentError: JF, ConnectTimeoutError: vF } = _A;
let ja, lQ;
rA.FinalizationRegistry && !process.env.NODE_V8_COVERAGE ? lQ = class {
  constructor(A) {
    this._maxCachedSessions = A, this._sessionCache = /* @__PURE__ */ new Map(), this._sessionRegistry = new rA.FinalizationRegistry((t) => {
      if (this._sessionCache.size < this._maxCachedSessions)
        return;
      const s = this._sessionCache.get(t);
      s !== void 0 && s.deref() === void 0 && this._sessionCache.delete(t);
    });
  }
  get(A) {
    const t = this._sessionCache.get(A);
    return t ? t.deref() : null;
  }
  set(A, t) {
    this._maxCachedSessions !== 0 && (this._sessionCache.set(A, new WeakRef(t)), this._sessionRegistry.register(t, A));
  }
} : lQ = class {
  constructor(A) {
    this._maxCachedSessions = A, this._sessionCache = /* @__PURE__ */ new Map();
  }
  get(A) {
    return this._sessionCache.get(A);
  }
  set(A, t) {
    if (this._maxCachedSessions !== 0) {
      if (this._sessionCache.size >= this._maxCachedSessions) {
        const { value: s } = this._sessionCache.keys().next();
        this._sessionCache.delete(s);
      }
      this._sessionCache.set(A, t);
    }
  }
};
function HF({ allowH2: e, maxCachedSessions: A, socketPath: t, timeout: s, ...r }) {
  if (A != null && (!Number.isInteger(A) || A < 0))
    throw new JF("maxCachedSessions must be a positive integer or zero");
  const o = { path: t, ...r }, n = new lQ(A ?? 100);
  return s = s ?? 1e4, e = e ?? !1, function({ hostname: i, host: E, protocol: a, port: Q, servername: c, localAddress: h, httpSocket: u }, I) {
    let C;
    if (a === "https:") {
      ja || (ja = SQ), c = c || o.servername || bd.getServerName(E) || null;
      const B = c || i, l = n.get(B) || null;
      KB(B), C = ja.connect({
        highWaterMark: 16384,
        // TLS in node can't have bigger HWM anyway...
        ...o,
        servername: c,
        session: l,
        localAddress: h,
        // TODO(HTTP/2): Add support for h2c
        ALPNProtocols: e ? ["http/1.1", "h2"] : ["http/1.1"],
        socket: u,
        // upgrade socket connection
        port: Q || 443,
        host: i
      }), C.on("session", function(y) {
        n.set(B, y);
      });
    } else
      KB(!u, "httpSocket can only be sent on TLS update"), C = YF.connect({
        highWaterMark: 64 * 1024,
        // Same as nodejs fs streams.
        ...o,
        localAddress: h,
        port: Q || 80,
        host: i
      });
    if (o.keepAlive == null || o.keepAlive) {
      const B = o.keepAliveInitialDelay === void 0 ? 6e4 : o.keepAliveInitialDelay;
      C.setKeepAlive(!0, B);
    }
    const f = VF(() => xF(C), s);
    return C.setNoDelay(!0).once(a === "https:" ? "secureConnect" : "connect", function() {
      if (f(), I) {
        const B = I;
        I = null, B(null, this);
      }
    }).on("error", function(B) {
      if (f(), I) {
        const l = I;
        I = null, l(B);
      }
    }), C;
  };
}
function VF(e, A) {
  if (!A)
    return () => {
    };
  let t = null, s = null;
  const r = setTimeout(() => {
    t = setImmediate(() => {
      process.platform === "win32" ? s = setImmediate(() => e()) : e();
    });
  }, A);
  return () => {
    clearTimeout(r), clearImmediate(t), clearImmediate(s);
  };
}
function xF(e) {
  bd.destroy(e, new vF());
}
var Wi = HF, za = {}, wo = {}, jB;
function OF() {
  if (jB) return wo;
  jB = 1, Object.defineProperty(wo, "__esModule", { value: !0 }), wo.enumToMap = void 0;
  function e(A) {
    const t = {};
    return Object.keys(A).forEach((s) => {
      const r = A[s];
      typeof r == "number" && (t[s] = r);
    }), t;
  }
  return wo.enumToMap = e, wo;
}
var zB;
function PF() {
  return zB || (zB = 1, function(e) {
    Object.defineProperty(e, "__esModule", { value: !0 }), e.SPECIAL_HEADERS = e.HEADER_STATE = e.MINOR = e.MAJOR = e.CONNECTION_TOKEN_CHARS = e.HEADER_CHARS = e.TOKEN = e.STRICT_TOKEN = e.HEX = e.URL_CHAR = e.STRICT_URL_CHAR = e.USERINFO_CHARS = e.MARK = e.ALPHANUM = e.NUM = e.HEX_MAP = e.NUM_MAP = e.ALPHA = e.FINISH = e.H_METHOD_MAP = e.METHOD_MAP = e.METHODS_RTSP = e.METHODS_ICE = e.METHODS_HTTP = e.METHODS = e.LENIENT_FLAGS = e.FLAGS = e.TYPE = e.ERROR = void 0;
    const A = OF();
    (function(r) {
      r[r.OK = 0] = "OK", r[r.INTERNAL = 1] = "INTERNAL", r[r.STRICT = 2] = "STRICT", r[r.LF_EXPECTED = 3] = "LF_EXPECTED", r[r.UNEXPECTED_CONTENT_LENGTH = 4] = "UNEXPECTED_CONTENT_LENGTH", r[r.CLOSED_CONNECTION = 5] = "CLOSED_CONNECTION", r[r.INVALID_METHOD = 6] = "INVALID_METHOD", r[r.INVALID_URL = 7] = "INVALID_URL", r[r.INVALID_CONSTANT = 8] = "INVALID_CONSTANT", r[r.INVALID_VERSION = 9] = "INVALID_VERSION", r[r.INVALID_HEADER_TOKEN = 10] = "INVALID_HEADER_TOKEN", r[r.INVALID_CONTENT_LENGTH = 11] = "INVALID_CONTENT_LENGTH", r[r.INVALID_CHUNK_SIZE = 12] = "INVALID_CHUNK_SIZE", r[r.INVALID_STATUS = 13] = "INVALID_STATUS", r[r.INVALID_EOF_STATE = 14] = "INVALID_EOF_STATE", r[r.INVALID_TRANSFER_ENCODING = 15] = "INVALID_TRANSFER_ENCODING", r[r.CB_MESSAGE_BEGIN = 16] = "CB_MESSAGE_BEGIN", r[r.CB_HEADERS_COMPLETE = 17] = "CB_HEADERS_COMPLETE", r[r.CB_MESSAGE_COMPLETE = 18] = "CB_MESSAGE_COMPLETE", r[r.CB_CHUNK_HEADER = 19] = "CB_CHUNK_HEADER", r[r.CB_CHUNK_COMPLETE = 20] = "CB_CHUNK_COMPLETE", r[r.PAUSED = 21] = "PAUSED", r[r.PAUSED_UPGRADE = 22] = "PAUSED_UPGRADE", r[r.PAUSED_H2_UPGRADE = 23] = "PAUSED_H2_UPGRADE", r[r.USER = 24] = "USER";
    })(e.ERROR || (e.ERROR = {})), function(r) {
      r[r.BOTH = 0] = "BOTH", r[r.REQUEST = 1] = "REQUEST", r[r.RESPONSE = 2] = "RESPONSE";
    }(e.TYPE || (e.TYPE = {})), function(r) {
      r[r.CONNECTION_KEEP_ALIVE = 1] = "CONNECTION_KEEP_ALIVE", r[r.CONNECTION_CLOSE = 2] = "CONNECTION_CLOSE", r[r.CONNECTION_UPGRADE = 4] = "CONNECTION_UPGRADE", r[r.CHUNKED = 8] = "CHUNKED", r[r.UPGRADE = 16] = "UPGRADE", r[r.CONTENT_LENGTH = 32] = "CONTENT_LENGTH", r[r.SKIPBODY = 64] = "SKIPBODY", r[r.TRAILING = 128] = "TRAILING", r[r.TRANSFER_ENCODING = 512] = "TRANSFER_ENCODING";
    }(e.FLAGS || (e.FLAGS = {})), function(r) {
      r[r.HEADERS = 1] = "HEADERS", r[r.CHUNKED_LENGTH = 2] = "CHUNKED_LENGTH", r[r.KEEP_ALIVE = 4] = "KEEP_ALIVE";
    }(e.LENIENT_FLAGS || (e.LENIENT_FLAGS = {}));
    var t;
    (function(r) {
      r[r.DELETE = 0] = "DELETE", r[r.GET = 1] = "GET", r[r.HEAD = 2] = "HEAD", r[r.POST = 3] = "POST", r[r.PUT = 4] = "PUT", r[r.CONNECT = 5] = "CONNECT", r[r.OPTIONS = 6] = "OPTIONS", r[r.TRACE = 7] = "TRACE", r[r.COPY = 8] = "COPY", r[r.LOCK = 9] = "LOCK", r[r.MKCOL = 10] = "MKCOL", r[r.MOVE = 11] = "MOVE", r[r.PROPFIND = 12] = "PROPFIND", r[r.PROPPATCH = 13] = "PROPPATCH", r[r.SEARCH = 14] = "SEARCH", r[r.UNLOCK = 15] = "UNLOCK", r[r.BIND = 16] = "BIND", r[r.REBIND = 17] = "REBIND", r[r.UNBIND = 18] = "UNBIND", r[r.ACL = 19] = "ACL", r[r.REPORT = 20] = "REPORT", r[r.MKACTIVITY = 21] = "MKACTIVITY", r[r.CHECKOUT = 22] = "CHECKOUT", r[r.MERGE = 23] = "MERGE", r[r["M-SEARCH"] = 24] = "M-SEARCH", r[r.NOTIFY = 25] = "NOTIFY", r[r.SUBSCRIBE = 26] = "SUBSCRIBE", r[r.UNSUBSCRIBE = 27] = "UNSUBSCRIBE", r[r.PATCH = 28] = "PATCH", r[r.PURGE = 29] = "PURGE", r[r.MKCALENDAR = 30] = "MKCALENDAR", r[r.LINK = 31] = "LINK", r[r.UNLINK = 32] = "UNLINK", r[r.SOURCE = 33] = "SOURCE", r[r.PRI = 34] = "PRI", r[r.DESCRIBE = 35] = "DESCRIBE", r[r.ANNOUNCE = 36] = "ANNOUNCE", r[r.SETUP = 37] = "SETUP", r[r.PLAY = 38] = "PLAY", r[r.PAUSE = 39] = "PAUSE", r[r.TEARDOWN = 40] = "TEARDOWN", r[r.GET_PARAMETER = 41] = "GET_PARAMETER", r[r.SET_PARAMETER = 42] = "SET_PARAMETER", r[r.REDIRECT = 43] = "REDIRECT", r[r.RECORD = 44] = "RECORD", r[r.FLUSH = 45] = "FLUSH";
    })(t = e.METHODS || (e.METHODS = {})), e.METHODS_HTTP = [
      t.DELETE,
      t.GET,
      t.HEAD,
      t.POST,
      t.PUT,
      t.CONNECT,
      t.OPTIONS,
      t.TRACE,
      t.COPY,
      t.LOCK,
      t.MKCOL,
      t.MOVE,
      t.PROPFIND,
      t.PROPPATCH,
      t.SEARCH,
      t.UNLOCK,
      t.BIND,
      t.REBIND,
      t.UNBIND,
      t.ACL,
      t.REPORT,
      t.MKACTIVITY,
      t.CHECKOUT,
      t.MERGE,
      t["M-SEARCH"],
      t.NOTIFY,
      t.SUBSCRIBE,
      t.UNSUBSCRIBE,
      t.PATCH,
      t.PURGE,
      t.MKCALENDAR,
      t.LINK,
      t.UNLINK,
      t.PRI,
      // TODO(indutny): should we allow it with HTTP?
      t.SOURCE
    ], e.METHODS_ICE = [
      t.SOURCE
    ], e.METHODS_RTSP = [
      t.OPTIONS,
      t.DESCRIBE,
      t.ANNOUNCE,
      t.SETUP,
      t.PLAY,
      t.PAUSE,
      t.TEARDOWN,
      t.GET_PARAMETER,
      t.SET_PARAMETER,
      t.REDIRECT,
      t.RECORD,
      t.FLUSH,
      // For AirPlay
      t.GET,
      t.POST
    ], e.METHOD_MAP = A.enumToMap(t), e.H_METHOD_MAP = {}, Object.keys(e.METHOD_MAP).forEach((r) => {
      /^H/.test(r) && (e.H_METHOD_MAP[r] = e.METHOD_MAP[r]);
    }), function(r) {
      r[r.SAFE = 0] = "SAFE", r[r.SAFE_WITH_CB = 1] = "SAFE_WITH_CB", r[r.UNSAFE = 2] = "UNSAFE";
    }(e.FINISH || (e.FINISH = {})), e.ALPHA = [];
    for (let r = 65; r <= 90; r++)
      e.ALPHA.push(String.fromCharCode(r)), e.ALPHA.push(String.fromCharCode(r + 32));
    e.NUM_MAP = {
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      8: 8,
      9: 9
    }, e.HEX_MAP = {
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      8: 8,
      9: 9,
      A: 10,
      B: 11,
      C: 12,
      D: 13,
      E: 14,
      F: 15,
      a: 10,
      b: 11,
      c: 12,
      d: 13,
      e: 14,
      f: 15
    }, e.NUM = [
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9"
    ], e.ALPHANUM = e.ALPHA.concat(e.NUM), e.MARK = ["-", "_", ".", "!", "~", "*", "'", "(", ")"], e.USERINFO_CHARS = e.ALPHANUM.concat(e.MARK).concat(["%", ";", ":", "&", "=", "+", "$", ","]), e.STRICT_URL_CHAR = [
      "!",
      '"',
      "$",
      "%",
      "&",
      "'",
      "(",
      ")",
      "*",
      "+",
      ",",
      "-",
      ".",
      "/",
      ":",
      ";",
      "<",
      "=",
      ">",
      "@",
      "[",
      "\\",
      "]",
      "^",
      "_",
      "`",
      "{",
      "|",
      "}",
      "~"
    ].concat(e.ALPHANUM), e.URL_CHAR = e.STRICT_URL_CHAR.concat(["	", "\f"]);
    for (let r = 128; r <= 255; r++)
      e.URL_CHAR.push(r);
    e.HEX = e.NUM.concat(["a", "b", "c", "d", "e", "f", "A", "B", "C", "D", "E", "F"]), e.STRICT_TOKEN = [
      "!",
      "#",
      "$",
      "%",
      "&",
      "'",
      "*",
      "+",
      "-",
      ".",
      "^",
      "_",
      "`",
      "|",
      "~"
    ].concat(e.ALPHANUM), e.TOKEN = e.STRICT_TOKEN.concat([" "]), e.HEADER_CHARS = ["	"];
    for (let r = 32; r <= 255; r++)
      r !== 127 && e.HEADER_CHARS.push(r);
    e.CONNECTION_TOKEN_CHARS = e.HEADER_CHARS.filter((r) => r !== 44), e.MAJOR = e.NUM_MAP, e.MINOR = e.MAJOR;
    var s;
    (function(r) {
      r[r.GENERAL = 0] = "GENERAL", r[r.CONNECTION = 1] = "CONNECTION", r[r.CONTENT_LENGTH = 2] = "CONTENT_LENGTH", r[r.TRANSFER_ENCODING = 3] = "TRANSFER_ENCODING", r[r.UPGRADE = 4] = "UPGRADE", r[r.CONNECTION_KEEP_ALIVE = 5] = "CONNECTION_KEEP_ALIVE", r[r.CONNECTION_CLOSE = 6] = "CONNECTION_CLOSE", r[r.CONNECTION_UPGRADE = 7] = "CONNECTION_UPGRADE", r[r.TRANSFER_ENCODING_CHUNKED = 8] = "TRANSFER_ENCODING_CHUNKED";
    })(s = e.HEADER_STATE || (e.HEADER_STATE = {})), e.SPECIAL_HEADERS = {
      connection: s.CONNECTION,
      "content-length": s.CONTENT_LENGTH,
      "proxy-connection": s.CONNECTION,
      "transfer-encoding": s.TRANSFER_ENCODING,
      upgrade: s.UPGRADE
    };
  }(za)), za;
}
const Ar = vA, { kBodyUsed: Ho } = Ae, sc = bA, { InvalidArgumentError: WF } = _A, qF = xt, _F = [300, 301, 302, 303, 307, 308], AI = Symbol("body");
class eI {
  constructor(A) {
    this[AI] = A, this[Ho] = !1;
  }
  async *[Symbol.asyncIterator]() {
    sc(!this[Ho], "disturbed"), this[Ho] = !0, yield* this[AI];
  }
}
let $F = class {
  constructor(A, t, s, r) {
    if (t != null && (!Number.isInteger(t) || t < 0))
      throw new WF("maxRedirections must be a positive number");
    Ar.validateHandler(r, s.method, s.upgrade), this.dispatch = A, this.location = null, this.abort = null, this.opts = { ...s, maxRedirections: 0 }, this.maxRedirections = t, this.handler = r, this.history = [], Ar.isStream(this.opts.body) ? (Ar.bodyLength(this.opts.body) === 0 && this.opts.body.on("data", function() {
      sc(!1);
    }), typeof this.opts.body.readableDidRead != "boolean" && (this.opts.body[Ho] = !1, qF.prototype.on.call(this.opts.body, "data", function() {
      this[Ho] = !0;
    }))) : this.opts.body && typeof this.opts.body.pipeTo == "function" ? this.opts.body = new eI(this.opts.body) : this.opts.body && typeof this.opts.body != "string" && !ArrayBuffer.isView(this.opts.body) && Ar.isIterable(this.opts.body) && (this.opts.body = new eI(this.opts.body));
  }
  onConnect(A) {
    this.abort = A, this.handler.onConnect(A, { history: this.history });
  }
  onUpgrade(A, t, s) {
    this.handler.onUpgrade(A, t, s);
  }
  onError(A) {
    this.handler.onError(A);
  }
  onHeaders(A, t, s, r) {
    if (this.location = this.history.length >= this.maxRedirections || Ar.isDisturbed(this.opts.body) ? null : ZF(A, t), this.opts.origin && this.history.push(new URL(this.opts.path, this.opts.origin)), !this.location)
      return this.handler.onHeaders(A, t, s, r);
    const { origin: o, pathname: n, search: g } = Ar.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin))), i = g ? `${n}${g}` : n;
    this.opts.headers = XF(this.opts.headers, A === 303, this.opts.origin !== o), this.opts.path = i, this.opts.origin = o, this.opts.maxRedirections = 0, this.opts.query = null, A === 303 && this.opts.method !== "HEAD" && (this.opts.method = "GET", this.opts.body = null);
  }
  onData(A) {
    if (!this.location) return this.handler.onData(A);
  }
  onComplete(A) {
    this.location ? (this.location = null, this.abort = null, this.dispatch(this.opts, this)) : this.handler.onComplete(A);
  }
  onBodySent(A) {
    this.handler.onBodySent && this.handler.onBodySent(A);
  }
};
function ZF(e, A) {
  if (_F.indexOf(e) === -1)
    return null;
  for (let t = 0; t < A.length; t += 2)
    if (A[t].toString().toLowerCase() === "location")
      return A[t + 1];
}
function tI(e, A, t) {
  if (e.length === 4)
    return Ar.headerNameToString(e) === "host";
  if (A && Ar.headerNameToString(e).startsWith("content-"))
    return !0;
  if (t && (e.length === 13 || e.length === 6 || e.length === 19)) {
    const s = Ar.headerNameToString(e);
    return s === "authorization" || s === "cookie" || s === "proxy-authorization";
  }
  return !1;
}
function XF(e, A, t) {
  const s = [];
  if (Array.isArray(e))
    for (let r = 0; r < e.length; r += 2)
      tI(e[r], A, t) || s.push(e[r], e[r + 1]);
  else if (e && typeof e == "object")
    for (const r of Object.keys(e))
      tI(r, A, t) || s.push(r, e[r]);
  else
    sc(e == null, "headers must be an object or an array");
  return s;
}
var Nd = $F;
const KF = Nd;
function jF({ maxRedirections: e }) {
  return (A) => function(s, r) {
    const { maxRedirections: o = e } = s;
    if (!o)
      return A(s, r);
    const n = new KF(A, o, s, r);
    return s = { ...s, maxRedirections: 0 }, A(s, n);
  };
}
var oc = jF, AE, rI;
function sI() {
  return rI || (rI = 1, AE = ""), AE;
}
var eE, oI;
function zF() {
  return oI || (oI = 1, eE = ""), eE;
}
const cA = bA, Sd = Zs, Ab = Vt, { pipeline: eb } = Ye, fA = vA, tE = yF, hQ = bF, tb = Pi, {
  RequestContentLengthMismatchError: tr,
  ResponseContentLengthMismatchError: rb,
  InvalidArgumentError: Qe,
  RequestAbortedError: nc,
  HeadersTimeoutError: sb,
  HeadersOverflowError: ob,
  SocketError: qs,
  InformationalError: Gt,
  BodyTimeoutError: nb,
  HTTPParserError: ib,
  ResponseExceededMaxSizeError: gb,
  ClientDestroyedError: ab
} = _A, Eb = Wi, {
  kUrl: Ne,
  kReset: We,
  kServerName: fr,
  kClient: vt,
  kBusy: uQ,
  kParser: oe,
  kConnect: Qb,
  kBlocking: _s,
  kResuming: ts,
  kRunning: re,
  kPending: Qs,
  kSize: ns,
  kWriting: or,
  kQueue: KA,
  kConnected: cb,
  kConnecting: Us,
  kNeedDrain: Rr,
  kNoRef: Mo,
  kKeepAliveDefaultTimeout: dQ,
  kHostHeader: Ud,
  kPendingIdx: gt,
  kRunningIdx: jA,
  kError: Ue,
  kPipelining: mr,
  kSocket: ie,
  kKeepAliveTimeoutValue: qo,
  kMaxHeadersSize: Ei,
  kKeepAliveMaxTimeout: Ld,
  kKeepAliveTimeoutThreshold: Td,
  kHeadersTimeout: Md,
  kBodyTimeout: Gd,
  kStrictContentLength: _o,
  kConnector: Go,
  kMaxRedirections: Cb,
  kMaxRequests: $o,
  kCounter: Yd,
  kClose: Bb,
  kDestroy: Ib,
  kDispatch: lb,
  kInterceptors: hb,
  kLocalAddress: Yo,
  kMaxResponseSize: Jd,
  kHTTPConnVersion: Ht,
  // HTTP2
  kHost: vd,
  kHTTP2Session: at,
  kHTTP2SessionState: wi,
  kHTTP2BuildRequest: ub,
  kHTTP2CopyHeaders: db,
  kHTTP1BuildRequest: fb
} = Ae;
let Di;
try {
  Di = require("http2");
} catch {
  Di = { constants: {} };
}
const {
  constants: {
    HTTP2_HEADER_AUTHORITY: pb,
    HTTP2_HEADER_METHOD: yb,
    HTTP2_HEADER_PATH: wb,
    HTTP2_HEADER_SCHEME: Db,
    HTTP2_HEADER_CONTENT_LENGTH: Rb,
    HTTP2_HEADER_EXPECT: mb,
    HTTP2_HEADER_STATUS: kb
  }
} = Di;
let nI = !1;
const Yn = Buffer[Symbol.species], pr = Symbol("kClosedResolve"), Me = {};
try {
  const e = require("diagnostics_channel");
  Me.sendHeaders = e.channel("undici:client:sendHeaders"), Me.beforeConnect = e.channel("undici:client:beforeConnect"), Me.connectError = e.channel("undici:client:connectError"), Me.connected = e.channel("undici:client:connected");
} catch {
  Me.sendHeaders = { hasSubscribers: !1 }, Me.beforeConnect = { hasSubscribers: !1 }, Me.connectError = { hasSubscribers: !1 }, Me.connected = { hasSubscribers: !1 };
}
let Fb = class extends tb {
  /**
   *
   * @param {string|URL} url
   * @param {import('../types/client').Client.Options} options
   */
  constructor(A, {
    interceptors: t,
    maxHeaderSize: s,
    headersTimeout: r,
    socketTimeout: o,
    requestTimeout: n,
    connectTimeout: g,
    bodyTimeout: i,
    idleTimeout: E,
    keepAlive: a,
    keepAliveTimeout: Q,
    maxKeepAliveTimeout: c,
    keepAliveMaxTimeout: h,
    keepAliveTimeoutThreshold: u,
    socketPath: I,
    pipelining: C,
    tls: f,
    strictContentLength: B,
    maxCachedSessions: l,
    maxRedirections: y,
    connect: d,
    maxRequestsPerClient: p,
    localAddress: R,
    maxResponseSize: D,
    autoSelectFamily: b,
    autoSelectFamilyAttemptTimeout: M,
    // h2
    allowH2: F,
    maxConcurrentStreams: z
  } = {}) {
    if (super(), a !== void 0)
      throw new Qe("unsupported keepAlive, use pipelining=0 instead");
    if (o !== void 0)
      throw new Qe("unsupported socketTimeout, use headersTimeout & bodyTimeout instead");
    if (n !== void 0)
      throw new Qe("unsupported requestTimeout, use headersTimeout & bodyTimeout instead");
    if (E !== void 0)
      throw new Qe("unsupported idleTimeout, use keepAliveTimeout instead");
    if (c !== void 0)
      throw new Qe("unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead");
    if (s != null && !Number.isFinite(s))
      throw new Qe("invalid maxHeaderSize");
    if (I != null && typeof I != "string")
      throw new Qe("invalid socketPath");
    if (g != null && (!Number.isFinite(g) || g < 0))
      throw new Qe("invalid connectTimeout");
    if (Q != null && (!Number.isFinite(Q) || Q <= 0))
      throw new Qe("invalid keepAliveTimeout");
    if (h != null && (!Number.isFinite(h) || h <= 0))
      throw new Qe("invalid keepAliveMaxTimeout");
    if (u != null && !Number.isFinite(u))
      throw new Qe("invalid keepAliveTimeoutThreshold");
    if (r != null && (!Number.isInteger(r) || r < 0))
      throw new Qe("headersTimeout must be a positive integer or zero");
    if (i != null && (!Number.isInteger(i) || i < 0))
      throw new Qe("bodyTimeout must be a positive integer or zero");
    if (d != null && typeof d != "function" && typeof d != "object")
      throw new Qe("connect must be a function or an object");
    if (y != null && (!Number.isInteger(y) || y < 0))
      throw new Qe("maxRedirections must be a positive number");
    if (p != null && (!Number.isInteger(p) || p < 0))
      throw new Qe("maxRequestsPerClient must be a positive number");
    if (R != null && (typeof R != "string" || Sd.isIP(R) === 0))
      throw new Qe("localAddress must be valid string IP address");
    if (D != null && (!Number.isInteger(D) || D < -1))
      throw new Qe("maxResponseSize must be a positive number");
    if (M != null && (!Number.isInteger(M) || M < -1))
      throw new Qe("autoSelectFamilyAttemptTimeout must be a positive number");
    if (F != null && typeof F != "boolean")
      throw new Qe("allowH2 must be a valid boolean value");
    if (z != null && (typeof z != "number" || z < 1))
      throw new Qe("maxConcurrentStreams must be a possitive integer, greater than 0");
    typeof d != "function" && (d = Eb({
      ...f,
      maxCachedSessions: l,
      allowH2: F,
      socketPath: I,
      timeout: g,
      ...fA.nodeHasAutoSelectFamily && b ? { autoSelectFamily: b, autoSelectFamilyAttemptTimeout: M } : void 0,
      ...d
    })), this[hb] = t && t.Client && Array.isArray(t.Client) ? t.Client : [Lb({ maxRedirections: y })], this[Ne] = fA.parseOrigin(A), this[Go] = d, this[ie] = null, this[mr] = C ?? 1, this[Ei] = s || Ab.maxHeaderSize, this[dQ] = Q ?? 4e3, this[Ld] = h ?? 6e5, this[Td] = u ?? 1e3, this[qo] = this[dQ], this[fr] = null, this[Yo] = R ?? null, this[ts] = 0, this[Rr] = 0, this[Ud] = `host: ${this[Ne].hostname}${this[Ne].port ? `:${this[Ne].port}` : ""}\r
`, this[Gd] = i ?? 3e5, this[Md] = r ?? 3e5, this[_o] = B ?? !0, this[Cb] = y, this[$o] = p, this[pr] = null, this[Jd] = D > -1 ? D : -1, this[Ht] = "h1", this[at] = null, this[wi] = F ? {
      // streams: null, // Fixed queue of streams - For future support of `push`
      openStreams: 0,
      // Keep track of them to decide wether or not unref the session
      maxConcurrentStreams: z ?? 100
      // Max peerConcurrentStreams for a Node h2 server
    } : null, this[vd] = `${this[Ne].hostname}${this[Ne].port ? `:${this[Ne].port}` : ""}`, this[KA] = [], this[jA] = 0, this[gt] = 0;
  }
  get pipelining() {
    return this[mr];
  }
  set pipelining(A) {
    this[mr] = A, Et(this, !0);
  }
  get [Qs]() {
    return this[KA].length - this[gt];
  }
  get [re]() {
    return this[gt] - this[jA];
  }
  get [ns]() {
    return this[KA].length - this[jA];
  }
  get [cb]() {
    return !!this[ie] && !this[Us] && !this[ie].destroyed;
  }
  get [uQ]() {
    const A = this[ie];
    return A && (A[We] || A[or] || A[_s]) || this[ns] >= (this[mr] || 1) || this[Qs] > 0;
  }
  /* istanbul ignore: only used for test */
  [Qb](A) {
    Od(this), this.once("connect", A);
  }
  [lb](A, t) {
    const s = A.origin || this[Ne].origin, r = this[Ht] === "h2" ? hQ[ub](s, A, t) : hQ[fb](s, A, t);
    return this[KA].push(r), this[ts] || (fA.bodyLength(r.body) == null && fA.isIterable(r.body) ? (this[ts] = 1, process.nextTick(Et, this)) : Et(this, !0)), this[ts] && this[Rr] !== 2 && this[uQ] && (this[Rr] = 2), this[Rr] < 2;
  }
  async [Bb]() {
    return new Promise((A) => {
      this[ns] ? this[pr] = A : A(null);
    });
  }
  async [Ib](A) {
    return new Promise((t) => {
      const s = this[KA].splice(this[gt]);
      for (let o = 0; o < s.length; o++) {
        const n = s[o];
        _e(this, n, A);
      }
      const r = () => {
        this[pr] && (this[pr](), this[pr] = null), t();
      };
      this[at] != null && (fA.destroy(this[at], A), this[at] = null, this[wi] = null), this[ie] ? fA.destroy(this[ie].on("close", r), A) : queueMicrotask(r), Et(this);
    });
  }
};
function bb(e) {
  cA(e.code !== "ERR_TLS_CERT_ALTNAME_INVALID"), this[ie][Ue] = e, qi(this[vt], e);
}
function Nb(e, A, t) {
  const s = new Gt(`HTTP/2: "frameError" received - type ${e}, code ${A}`);
  t === 0 && (this[ie][Ue] = s, qi(this[vt], s));
}
function Sb() {
  fA.destroy(this, new qs("other side closed")), fA.destroy(this[ie], new qs("other side closed"));
}
function Ub(e) {
  const A = this[vt], t = new Gt(`HTTP/2: "GOAWAY" frame received with code ${e}`);
  if (A[ie] = null, A[at] = null, A.destroyed) {
    cA(this[Qs] === 0);
    const s = A[KA].splice(A[jA]);
    for (let r = 0; r < s.length; r++) {
      const o = s[r];
      _e(this, o, t);
    }
  } else if (A[re] > 0) {
    const s = A[KA][A[jA]];
    A[KA][A[jA]++] = null, _e(A, s, t);
  }
  A[gt] = A[jA], cA(A[re] === 0), A.emit(
    "disconnect",
    A[Ne],
    [A],
    t
  ), Et(A);
}
const bt = PF(), Lb = oc, Tb = Buffer.alloc(0);
async function Mb() {
  const e = process.env.JEST_WORKER_ID ? sI() : void 0;
  let A;
  try {
    A = await WebAssembly.compile(Buffer.from(zF(), "base64"));
  } catch {
    A = await WebAssembly.compile(Buffer.from(e || sI(), "base64"));
  }
  return await WebAssembly.instantiate(A, {
    env: {
      /* eslint-disable camelcase */
      wasm_on_url: (t, s, r) => 0,
      wasm_on_status: (t, s, r) => {
        cA.strictEqual(ue.ptr, t);
        const o = s - Tt + Ut.byteOffset;
        return ue.onStatus(new Yn(Ut.buffer, o, r)) || 0;
      },
      wasm_on_message_begin: (t) => (cA.strictEqual(ue.ptr, t), ue.onMessageBegin() || 0),
      wasm_on_header_field: (t, s, r) => {
        cA.strictEqual(ue.ptr, t);
        const o = s - Tt + Ut.byteOffset;
        return ue.onHeaderField(new Yn(Ut.buffer, o, r)) || 0;
      },
      wasm_on_header_value: (t, s, r) => {
        cA.strictEqual(ue.ptr, t);
        const o = s - Tt + Ut.byteOffset;
        return ue.onHeaderValue(new Yn(Ut.buffer, o, r)) || 0;
      },
      wasm_on_headers_complete: (t, s, r, o) => (cA.strictEqual(ue.ptr, t), ue.onHeadersComplete(s, !!r, !!o) || 0),
      wasm_on_body: (t, s, r) => {
        cA.strictEqual(ue.ptr, t);
        const o = s - Tt + Ut.byteOffset;
        return ue.onBody(new Yn(Ut.buffer, o, r)) || 0;
      },
      wasm_on_message_complete: (t) => (cA.strictEqual(ue.ptr, t), ue.onMessageComplete() || 0)
      /* eslint-enable camelcase */
    }
  });
}
let rE = null, fQ = Mb();
fQ.catch();
let ue = null, Ut = null, Jn = 0, Tt = null;
const $s = 1, Qi = 2, pQ = 3;
class Gb {
  constructor(A, t, { exports: s }) {
    cA(Number.isFinite(A[Ei]) && A[Ei] > 0), this.llhttp = s, this.ptr = this.llhttp.llhttp_alloc(bt.TYPE.RESPONSE), this.client = A, this.socket = t, this.timeout = null, this.timeoutValue = null, this.timeoutType = null, this.statusCode = null, this.statusText = "", this.upgrade = !1, this.headers = [], this.headersSize = 0, this.headersMaxSize = A[Ei], this.shouldKeepAlive = !1, this.paused = !1, this.resume = this.resume.bind(this), this.bytesRead = 0, this.keepAlive = "", this.contentLength = "", this.connection = "", this.maxResponseSize = A[Jd];
  }
  setTimeout(A, t) {
    this.timeoutType = t, A !== this.timeoutValue ? (tE.clearTimeout(this.timeout), A ? (this.timeout = tE.setTimeout(Yb, A, this), this.timeout.unref && this.timeout.unref()) : this.timeout = null, this.timeoutValue = A) : this.timeout && this.timeout.refresh && this.timeout.refresh();
  }
  resume() {
    this.socket.destroyed || !this.paused || (cA(this.ptr != null), cA(ue == null), this.llhttp.llhttp_resume(this.ptr), cA(this.timeoutType === Qi), this.timeout && this.timeout.refresh && this.timeout.refresh(), this.paused = !1, this.execute(this.socket.read() || Tb), this.readMore());
  }
  readMore() {
    for (; !this.paused && this.ptr; ) {
      const A = this.socket.read();
      if (A === null)
        break;
      this.execute(A);
    }
  }
  execute(A) {
    cA(this.ptr != null), cA(ue == null), cA(!this.paused);
    const { socket: t, llhttp: s } = this;
    A.length > Jn && (Tt && s.free(Tt), Jn = Math.ceil(A.length / 4096) * 4096, Tt = s.malloc(Jn)), new Uint8Array(s.memory.buffer, Tt, Jn).set(A);
    try {
      let r;
      try {
        Ut = A, ue = this, r = s.llhttp_execute(this.ptr, Tt, A.length);
      } catch (n) {
        throw n;
      } finally {
        ue = null, Ut = null;
      }
      const o = s.llhttp_get_error_pos(this.ptr) - Tt;
      if (r === bt.ERROR.PAUSED_UPGRADE)
        this.onUpgrade(A.slice(o));
      else if (r === bt.ERROR.PAUSED)
        this.paused = !0, t.unshift(A.slice(o));
      else if (r !== bt.ERROR.OK) {
        const n = s.llhttp_get_error_reason(this.ptr);
        let g = "";
        if (n) {
          const i = new Uint8Array(s.memory.buffer, n).indexOf(0);
          g = "Response does not match the HTTP/1.1 protocol (" + Buffer.from(s.memory.buffer, n, i).toString() + ")";
        }
        throw new ib(g, bt.ERROR[r], A.slice(o));
      }
    } catch (r) {
      fA.destroy(t, r);
    }
  }
  destroy() {
    cA(this.ptr != null), cA(ue == null), this.llhttp.llhttp_free(this.ptr), this.ptr = null, tE.clearTimeout(this.timeout), this.timeout = null, this.timeoutValue = null, this.timeoutType = null, this.paused = !1;
  }
  onStatus(A) {
    this.statusText = A.toString();
  }
  onMessageBegin() {
    const { socket: A, client: t } = this;
    if (A.destroyed || !t[KA][t[jA]])
      return -1;
  }
  onHeaderField(A) {
    const t = this.headers.length;
    t & 1 ? this.headers[t - 1] = Buffer.concat([this.headers[t - 1], A]) : this.headers.push(A), this.trackHeader(A.length);
  }
  onHeaderValue(A) {
    let t = this.headers.length;
    (t & 1) === 1 ? (this.headers.push(A), t += 1) : this.headers[t - 1] = Buffer.concat([this.headers[t - 1], A]);
    const s = this.headers[t - 2];
    s.length === 10 && s.toString().toLowerCase() === "keep-alive" ? this.keepAlive += A.toString() : s.length === 10 && s.toString().toLowerCase() === "connection" ? this.connection += A.toString() : s.length === 14 && s.toString().toLowerCase() === "content-length" && (this.contentLength += A.toString()), this.trackHeader(A.length);
  }
  trackHeader(A) {
    this.headersSize += A, this.headersSize >= this.headersMaxSize && fA.destroy(this.socket, new ob());
  }
  onUpgrade(A) {
    const { upgrade: t, client: s, socket: r, headers: o, statusCode: n } = this;
    cA(t);
    const g = s[KA][s[jA]];
    cA(g), cA(!r.destroyed), cA(r === s[ie]), cA(!this.paused), cA(g.upgrade || g.method === "CONNECT"), this.statusCode = null, this.statusText = "", this.shouldKeepAlive = null, cA(this.headers.length % 2 === 0), this.headers = [], this.headersSize = 0, r.unshift(A), r[oe].destroy(), r[oe] = null, r[vt] = null, r[Ue] = null, r.removeListener("error", Vd).removeListener("readable", Hd).removeListener("end", xd).removeListener("close", yQ), s[ie] = null, s[KA][s[jA]++] = null, s.emit("disconnect", s[Ne], [s], new Gt("upgrade"));
    try {
      g.onUpgrade(n, o, r);
    } catch (i) {
      fA.destroy(r, i);
    }
    Et(s);
  }
  onHeadersComplete(A, t, s) {
    const { client: r, socket: o, headers: n, statusText: g } = this;
    if (o.destroyed)
      return -1;
    const i = r[KA][r[jA]];
    if (!i)
      return -1;
    if (cA(!this.upgrade), cA(this.statusCode < 200), A === 100)
      return fA.destroy(o, new qs("bad response", fA.getSocketInfo(o))), -1;
    if (t && !i.upgrade)
      return fA.destroy(o, new qs("bad upgrade", fA.getSocketInfo(o))), -1;
    if (cA.strictEqual(this.timeoutType, $s), this.statusCode = A, this.shouldKeepAlive = s || // Override llhttp value which does not allow keepAlive for HEAD.
    i.method === "HEAD" && !o[We] && this.connection.toLowerCase() === "keep-alive", this.statusCode >= 200) {
      const a = i.bodyTimeout != null ? i.bodyTimeout : r[Gd];
      this.setTimeout(a, Qi);
    } else this.timeout && this.timeout.refresh && this.timeout.refresh();
    if (i.method === "CONNECT")
      return cA(r[re] === 1), this.upgrade = !0, 2;
    if (t)
      return cA(r[re] === 1), this.upgrade = !0, 2;
    if (cA(this.headers.length % 2 === 0), this.headers = [], this.headersSize = 0, this.shouldKeepAlive && r[mr]) {
      const a = this.keepAlive ? fA.parseKeepAliveTimeout(this.keepAlive) : null;
      if (a != null) {
        const Q = Math.min(
          a - r[Td],
          r[Ld]
        );
        Q <= 0 ? o[We] = !0 : r[qo] = Q;
      } else
        r[qo] = r[dQ];
    } else
      o[We] = !0;
    const E = i.onHeaders(A, n, this.resume, g) === !1;
    return i.aborted ? -1 : i.method === "HEAD" || A < 200 ? 1 : (o[_s] && (o[_s] = !1, Et(r)), E ? bt.ERROR.PAUSED : 0);
  }
  onBody(A) {
    const { client: t, socket: s, statusCode: r, maxResponseSize: o } = this;
    if (s.destroyed)
      return -1;
    const n = t[KA][t[jA]];
    if (cA(n), cA.strictEqual(this.timeoutType, Qi), this.timeout && this.timeout.refresh && this.timeout.refresh(), cA(r >= 200), o > -1 && this.bytesRead + A.length > o)
      return fA.destroy(s, new gb()), -1;
    if (this.bytesRead += A.length, n.onData(A) === !1)
      return bt.ERROR.PAUSED;
  }
  onMessageComplete() {
    const { client: A, socket: t, statusCode: s, upgrade: r, headers: o, contentLength: n, bytesRead: g, shouldKeepAlive: i } = this;
    if (t.destroyed && (!s || i))
      return -1;
    if (r)
      return;
    const E = A[KA][A[jA]];
    if (cA(E), cA(s >= 100), this.statusCode = null, this.statusText = "", this.bytesRead = 0, this.contentLength = "", this.keepAlive = "", this.connection = "", cA(this.headers.length % 2 === 0), this.headers = [], this.headersSize = 0, !(s < 200)) {
      if (E.method !== "HEAD" && n && g !== parseInt(n, 10))
        return fA.destroy(t, new rb()), -1;
      if (E.onComplete(o), A[KA][A[jA]++] = null, t[or])
        return cA.strictEqual(A[re], 0), fA.destroy(t, new Gt("reset")), bt.ERROR.PAUSED;
      if (i) {
        if (t[We] && A[re] === 0)
          return fA.destroy(t, new Gt("reset")), bt.ERROR.PAUSED;
        A[mr] === 1 ? setImmediate(Et, A) : Et(A);
      } else return fA.destroy(t, new Gt("reset")), bt.ERROR.PAUSED;
    }
  }
}
function Yb(e) {
  const { socket: A, timeoutType: t, client: s } = e;
  t === $s ? (!A[or] || A.writableNeedDrain || s[re] > 1) && (cA(!e.paused, "cannot be paused while waiting for headers"), fA.destroy(A, new sb())) : t === Qi ? e.paused || fA.destroy(A, new nb()) : t === pQ && (cA(s[re] === 0 && s[qo]), fA.destroy(A, new Gt("socket idle timeout")));
}
function Hd() {
  const { [oe]: e } = this;
  e && e.readMore();
}
function Vd(e) {
  const { [vt]: A, [oe]: t } = this;
  if (cA(e.code !== "ERR_TLS_CERT_ALTNAME_INVALID"), A[Ht] !== "h2" && e.code === "ECONNRESET" && t.statusCode && !t.shouldKeepAlive) {
    t.onMessageComplete();
    return;
  }
  this[Ue] = e, qi(this[vt], e);
}
function qi(e, A) {
  if (e[re] === 0 && A.code !== "UND_ERR_INFO" && A.code !== "UND_ERR_SOCKET") {
    cA(e[gt] === e[jA]);
    const t = e[KA].splice(e[jA]);
    for (let s = 0; s < t.length; s++) {
      const r = t[s];
      _e(e, r, A);
    }
    cA(e[ns] === 0);
  }
}
function xd() {
  const { [oe]: e, [vt]: A } = this;
  if (A[Ht] !== "h2" && e.statusCode && !e.shouldKeepAlive) {
    e.onMessageComplete();
    return;
  }
  fA.destroy(this, new qs("other side closed", fA.getSocketInfo(this)));
}
function yQ() {
  const { [vt]: e, [oe]: A } = this;
  e[Ht] === "h1" && A && (!this[Ue] && A.statusCode && !A.shouldKeepAlive && A.onMessageComplete(), this[oe].destroy(), this[oe] = null);
  const t = this[Ue] || new qs("closed", fA.getSocketInfo(this));
  if (e[ie] = null, e.destroyed) {
    cA(e[Qs] === 0);
    const s = e[KA].splice(e[jA]);
    for (let r = 0; r < s.length; r++) {
      const o = s[r];
      _e(e, o, t);
    }
  } else if (e[re] > 0 && t.code !== "UND_ERR_INFO") {
    const s = e[KA][e[jA]];
    e[KA][e[jA]++] = null, _e(e, s, t);
  }
  e[gt] = e[jA], cA(e[re] === 0), e.emit("disconnect", e[Ne], [e], t), Et(e);
}
async function Od(e) {
  cA(!e[Us]), cA(!e[ie]);
  let { host: A, hostname: t, protocol: s, port: r } = e[Ne];
  if (t[0] === "[") {
    const o = t.indexOf("]");
    cA(o !== -1);
    const n = t.substring(1, o);
    cA(Sd.isIP(n)), t = n;
  }
  e[Us] = !0, Me.beforeConnect.hasSubscribers && Me.beforeConnect.publish({
    connectParams: {
      host: A,
      hostname: t,
      protocol: s,
      port: r,
      servername: e[fr],
      localAddress: e[Yo]
    },
    connector: e[Go]
  });
  try {
    const o = await new Promise((g, i) => {
      e[Go]({
        host: A,
        hostname: t,
        protocol: s,
        port: r,
        servername: e[fr],
        localAddress: e[Yo]
      }, (E, a) => {
        E ? i(E) : g(a);
      });
    });
    if (e.destroyed) {
      fA.destroy(o.on("error", () => {
      }), new ab());
      return;
    }
    if (e[Us] = !1, cA(o), o.alpnProtocol === "h2") {
      nI || (nI = !0, process.emitWarning("H2 support is experimental, expect them to change at any time.", {
        code: "UNDICI-H2"
      }));
      const g = Di.connect(e[Ne], {
        createConnection: () => o,
        peerMaxConcurrentStreams: e[wi].maxConcurrentStreams
      });
      e[Ht] = "h2", g[vt] = e, g[ie] = o, g.on("error", bb), g.on("frameError", Nb), g.on("end", Sb), g.on("goaway", Ub), g.on("close", yQ), g.unref(), e[at] = g, o[at] = g;
    } else
      rE || (rE = await fQ, fQ = null), o[Mo] = !1, o[or] = !1, o[We] = !1, o[_s] = !1, o[oe] = new Gb(e, o, rE);
    o[Yd] = 0, o[$o] = e[$o], o[vt] = e, o[Ue] = null, o.on("error", Vd).on("readable", Hd).on("end", xd).on("close", yQ), e[ie] = o, Me.connected.hasSubscribers && Me.connected.publish({
      connectParams: {
        host: A,
        hostname: t,
        protocol: s,
        port: r,
        servername: e[fr],
        localAddress: e[Yo]
      },
      connector: e[Go],
      socket: o
    }), e.emit("connect", e[Ne], [e]);
  } catch (o) {
    if (e.destroyed)
      return;
    if (e[Us] = !1, Me.connectError.hasSubscribers && Me.connectError.publish({
      connectParams: {
        host: A,
        hostname: t,
        protocol: s,
        port: r,
        servername: e[fr],
        localAddress: e[Yo]
      },
      connector: e[Go],
      error: o
    }), o.code === "ERR_TLS_CERT_ALTNAME_INVALID")
      for (cA(e[re] === 0); e[Qs] > 0 && e[KA][e[gt]].servername === e[fr]; ) {
        const n = e[KA][e[gt]++];
        _e(e, n, o);
      }
    else
      qi(e, o);
    e.emit("connectionError", e[Ne], [e], o);
  }
  Et(e);
}
function iI(e) {
  e[Rr] = 0, e.emit("drain", e[Ne], [e]);
}
function Et(e, A) {
  e[ts] !== 2 && (e[ts] = 2, Jb(e, A), e[ts] = 0, e[jA] > 256 && (e[KA].splice(0, e[jA]), e[gt] -= e[jA], e[jA] = 0));
}
function Jb(e, A) {
  for (; ; ) {
    if (e.destroyed) {
      cA(e[Qs] === 0);
      return;
    }
    if (e[pr] && !e[ns]) {
      e[pr](), e[pr] = null;
      return;
    }
    const t = e[ie];
    if (t && !t.destroyed && t.alpnProtocol !== "h2") {
      if (e[ns] === 0 ? !t[Mo] && t.unref && (t.unref(), t[Mo] = !0) : t[Mo] && t.ref && (t.ref(), t[Mo] = !1), e[ns] === 0)
        t[oe].timeoutType !== pQ && t[oe].setTimeout(e[qo], pQ);
      else if (e[re] > 0 && t[oe].statusCode < 200 && t[oe].timeoutType !== $s) {
        const r = e[KA][e[jA]], o = r.headersTimeout != null ? r.headersTimeout : e[Md];
        t[oe].setTimeout(o, $s);
      }
    }
    if (e[uQ])
      e[Rr] = 2;
    else if (e[Rr] === 2) {
      A ? (e[Rr] = 1, process.nextTick(iI, e)) : iI(e);
      continue;
    }
    if (e[Qs] === 0 || e[re] >= (e[mr] || 1))
      return;
    const s = e[KA][e[gt]];
    if (e[Ne].protocol === "https:" && e[fr] !== s.servername) {
      if (e[re] > 0)
        return;
      if (e[fr] = s.servername, t && t.servername !== s.servername) {
        fA.destroy(t, new Gt("servername changed"));
        return;
      }
    }
    if (e[Us])
      return;
    if (!t && !e[at]) {
      Od(e);
      return;
    }
    if (t.destroyed || t[or] || t[We] || t[_s] || e[re] > 0 && !s.idempotent || e[re] > 0 && (s.upgrade || s.method === "CONNECT") || e[re] > 0 && fA.bodyLength(s.body) !== 0 && (fA.isStream(s.body) || fA.isAsyncIterable(s.body)))
      return;
    !s.aborted && vb(e, s) ? e[gt]++ : e[KA].splice(e[gt], 1);
  }
}
function Pd(e) {
  return e !== "GET" && e !== "HEAD" && e !== "OPTIONS" && e !== "TRACE" && e !== "CONNECT";
}
function vb(e, A) {
  if (e[Ht] === "h2") {
    Hb(e, e[at], A);
    return;
  }
  const { body: t, method: s, path: r, host: o, upgrade: n, headers: g, blocking: i, reset: E } = A, a = s === "PUT" || s === "POST" || s === "PATCH";
  t && typeof t.read == "function" && t.read(0);
  const Q = fA.bodyLength(t);
  let c = Q;
  if (c === null && (c = A.contentLength), c === 0 && !a && (c = null), Pd(s) && c > 0 && A.contentLength !== null && A.contentLength !== c) {
    if (e[_o])
      return _e(e, A, new tr()), !1;
    process.emitWarning(new tr());
  }
  const h = e[ie];
  try {
    A.onConnect((I) => {
      A.aborted || A.completed || (_e(e, A, I || new nc()), fA.destroy(h, new Gt("aborted")));
    });
  } catch (I) {
    _e(e, A, I);
  }
  if (A.aborted)
    return !1;
  s === "HEAD" && (h[We] = !0), (n || s === "CONNECT") && (h[We] = !0), E != null && (h[We] = E), e[$o] && h[Yd]++ >= e[$o] && (h[We] = !0), i && (h[_s] = !0);
  let u = `${s} ${r} HTTP/1.1\r
`;
  return typeof o == "string" ? u += `host: ${o}\r
` : u += e[Ud], n ? u += `connection: upgrade\r
upgrade: ${n}\r
` : e[mr] && !h[We] ? u += `connection: keep-alive\r
` : u += `connection: close\r
`, g && (u += g), Me.sendHeaders.hasSubscribers && Me.sendHeaders.publish({ request: A, headers: u, socket: h }), !t || Q === 0 ? (c === 0 ? h.write(`${u}content-length: 0\r
\r
`, "latin1") : (cA(c === null, "no body must not have content length"), h.write(`${u}\r
`, "latin1")), A.onRequestSent()) : fA.isBuffer(t) ? (cA(c === t.byteLength, "buffer body must have content length"), h.cork(), h.write(`${u}content-length: ${c}\r
\r
`, "latin1"), h.write(t), h.uncork(), A.onBodySent(t), A.onRequestSent(), a || (h[We] = !0)) : fA.isBlobLike(t) ? typeof t.stream == "function" ? Ri({ body: t.stream(), client: e, request: A, socket: h, contentLength: c, header: u, expectsPayload: a }) : qd({ body: t, client: e, request: A, socket: h, contentLength: c, header: u, expectsPayload: a }) : fA.isStream(t) ? Wd({ body: t, client: e, request: A, socket: h, contentLength: c, header: u, expectsPayload: a }) : fA.isIterable(t) ? Ri({ body: t, client: e, request: A, socket: h, contentLength: c, header: u, expectsPayload: a }) : cA(!1), !0;
}
function Hb(e, A, t) {
  const { body: s, method: r, path: o, host: n, upgrade: g, expectContinue: i, signal: E, headers: a } = t;
  let Q;
  if (typeof a == "string" ? Q = hQ[db](a.trim()) : Q = a, g)
    return _e(e, t, new Error("Upgrade not supported for H2")), !1;
  try {
    t.onConnect((B) => {
      t.aborted || t.completed || _e(e, t, B || new nc());
    });
  } catch (B) {
    _e(e, t, B);
  }
  if (t.aborted)
    return !1;
  let c;
  const h = e[wi];
  if (Q[pb] = n || e[vd], Q[yb] = r, r === "CONNECT")
    return A.ref(), c = A.request(Q, { endStream: !1, signal: E }), c.id && !c.pending ? (t.onUpgrade(null, null, c), ++h.openStreams) : c.once("ready", () => {
      t.onUpgrade(null, null, c), ++h.openStreams;
    }), c.once("close", () => {
      h.openStreams -= 1, h.openStreams === 0 && A.unref();
    }), !0;
  Q[wb] = o, Q[Db] = "https";
  const u = r === "PUT" || r === "POST" || r === "PATCH";
  s && typeof s.read == "function" && s.read(0);
  let I = fA.bodyLength(s);
  if (I == null && (I = t.contentLength), (I === 0 || !u) && (I = null), Pd(r) && I > 0 && t.contentLength != null && t.contentLength !== I) {
    if (e[_o])
      return _e(e, t, new tr()), !1;
    process.emitWarning(new tr());
  }
  I != null && (cA(s, "no body must not have content length"), Q[Rb] = `${I}`), A.ref();
  const C = r === "GET" || r === "HEAD";
  return i ? (Q[mb] = "100-continue", c = A.request(Q, { endStream: C, signal: E }), c.once("continue", f)) : (c = A.request(Q, {
    endStream: C,
    signal: E
  }), f()), ++h.openStreams, c.once("response", (B) => {
    const { [kb]: l, ...y } = B;
    t.onHeaders(Number(l), y, c.resume.bind(c), "") === !1 && c.pause();
  }), c.once("end", () => {
    t.onComplete([]);
  }), c.on("data", (B) => {
    t.onData(B) === !1 && c.pause();
  }), c.once("close", () => {
    h.openStreams -= 1, h.openStreams === 0 && A.unref();
  }), c.once("error", function(B) {
    e[at] && !e[at].destroyed && !this.closed && !this.destroyed && (h.streams -= 1, fA.destroy(c, B));
  }), c.once("frameError", (B, l) => {
    const y = new Gt(`HTTP/2: "frameError" received - type ${B}, code ${l}`);
    _e(e, t, y), e[at] && !e[at].destroyed && !this.closed && !this.destroyed && (h.streams -= 1, fA.destroy(c, y));
  }), !0;
  function f() {
    s ? fA.isBuffer(s) ? (cA(I === s.byteLength, "buffer body must have content length"), c.cork(), c.write(s), c.uncork(), c.end(), t.onBodySent(s), t.onRequestSent()) : fA.isBlobLike(s) ? typeof s.stream == "function" ? Ri({
      client: e,
      request: t,
      contentLength: I,
      h2stream: c,
      expectsPayload: u,
      body: s.stream(),
      socket: e[ie],
      header: ""
    }) : qd({
      body: s,
      client: e,
      request: t,
      contentLength: I,
      expectsPayload: u,
      h2stream: c,
      header: "",
      socket: e[ie]
    }) : fA.isStream(s) ? Wd({
      body: s,
      client: e,
      request: t,
      contentLength: I,
      expectsPayload: u,
      socket: e[ie],
      h2stream: c,
      header: ""
    }) : fA.isIterable(s) ? Ri({
      body: s,
      client: e,
      request: t,
      contentLength: I,
      expectsPayload: u,
      header: "",
      h2stream: c,
      socket: e[ie]
    }) : cA(!1) : t.onRequestSent();
  }
}
function Wd({ h2stream: e, body: A, client: t, request: s, socket: r, contentLength: o, header: n, expectsPayload: g }) {
  if (cA(o !== 0 || t[re] === 0, "stream body cannot be pipelined"), t[Ht] === "h2") {
    let I = function(C) {
      s.onBodySent(C);
    };
    const u = eb(
      A,
      e,
      (C) => {
        C ? (fA.destroy(A, C), fA.destroy(e, C)) : s.onRequestSent();
      }
    );
    u.on("data", I), u.once("end", () => {
      u.removeListener("data", I), fA.destroy(u);
    });
    return;
  }
  let i = !1;
  const E = new _d({ socket: r, request: s, contentLength: o, client: t, expectsPayload: g, header: n }), a = function(u) {
    if (!i)
      try {
        !E.write(u) && this.pause && this.pause();
      } catch (I) {
        fA.destroy(this, I);
      }
  }, Q = function() {
    i || A.resume && A.resume();
  }, c = function() {
    if (i)
      return;
    const u = new nc();
    queueMicrotask(() => h(u));
  }, h = function(u) {
    if (!i) {
      if (i = !0, cA(r.destroyed || r[or] && t[re] <= 1), r.off("drain", Q).off("error", h), A.removeListener("data", a).removeListener("end", h).removeListener("error", h).removeListener("close", c), !u)
        try {
          E.end();
        } catch (I) {
          u = I;
        }
      E.destroy(u), u && (u.code !== "UND_ERR_INFO" || u.message !== "reset") ? fA.destroy(A, u) : fA.destroy(A);
    }
  };
  A.on("data", a).on("end", h).on("error", h).on("close", c), A.resume && A.resume(), r.on("drain", Q).on("error", h);
}
async function qd({ h2stream: e, body: A, client: t, request: s, socket: r, contentLength: o, header: n, expectsPayload: g }) {
  cA(o === A.size, "blob body must have content length");
  const i = t[Ht] === "h2";
  try {
    if (o != null && o !== A.size)
      throw new tr();
    const E = Buffer.from(await A.arrayBuffer());
    i ? (e.cork(), e.write(E), e.uncork()) : (r.cork(), r.write(`${n}content-length: ${o}\r
\r
`, "latin1"), r.write(E), r.uncork()), s.onBodySent(E), s.onRequestSent(), g || (r[We] = !0), Et(t);
  } catch (E) {
    fA.destroy(i ? e : r, E);
  }
}
async function Ri({ h2stream: e, body: A, client: t, request: s, socket: r, contentLength: o, header: n, expectsPayload: g }) {
  cA(o !== 0 || t[re] === 0, "iterator body cannot be pipelined");
  let i = null;
  function E() {
    if (i) {
      const c = i;
      i = null, c();
    }
  }
  const a = () => new Promise((c, h) => {
    cA(i === null), r[Ue] ? h(r[Ue]) : i = c;
  });
  if (t[Ht] === "h2") {
    e.on("close", E).on("drain", E);
    try {
      for await (const c of A) {
        if (r[Ue])
          throw r[Ue];
        const h = e.write(c);
        s.onBodySent(c), h || await a();
      }
    } catch (c) {
      e.destroy(c);
    } finally {
      s.onRequestSent(), e.end(), e.off("close", E).off("drain", E);
    }
    return;
  }
  r.on("close", E).on("drain", E);
  const Q = new _d({ socket: r, request: s, contentLength: o, client: t, expectsPayload: g, header: n });
  try {
    for await (const c of A) {
      if (r[Ue])
        throw r[Ue];
      Q.write(c) || await a();
    }
    Q.end();
  } catch (c) {
    Q.destroy(c);
  } finally {
    r.off("close", E).off("drain", E);
  }
}
class _d {
  constructor({ socket: A, request: t, contentLength: s, client: r, expectsPayload: o, header: n }) {
    this.socket = A, this.request = t, this.contentLength = s, this.client = r, this.bytesWritten = 0, this.expectsPayload = o, this.header = n, A[or] = !0;
  }
  write(A) {
    const { socket: t, request: s, contentLength: r, client: o, bytesWritten: n, expectsPayload: g, header: i } = this;
    if (t[Ue])
      throw t[Ue];
    if (t.destroyed)
      return !1;
    const E = Buffer.byteLength(A);
    if (!E)
      return !0;
    if (r !== null && n + E > r) {
      if (o[_o])
        throw new tr();
      process.emitWarning(new tr());
    }
    t.cork(), n === 0 && (g || (t[We] = !0), r === null ? t.write(`${i}transfer-encoding: chunked\r
`, "latin1") : t.write(`${i}content-length: ${r}\r
\r
`, "latin1")), r === null && t.write(`\r
${E.toString(16)}\r
`, "latin1"), this.bytesWritten += E;
    const a = t.write(A);
    return t.uncork(), s.onBodySent(A), a || t[oe].timeout && t[oe].timeoutType === $s && t[oe].timeout.refresh && t[oe].timeout.refresh(), a;
  }
  end() {
    const { socket: A, contentLength: t, client: s, bytesWritten: r, expectsPayload: o, header: n, request: g } = this;
    if (g.onRequestSent(), A[or] = !1, A[Ue])
      throw A[Ue];
    if (!A.destroyed) {
      if (r === 0 ? o ? A.write(`${n}content-length: 0\r
\r
`, "latin1") : A.write(`${n}\r
`, "latin1") : t === null && A.write(`\r
0\r
\r
`, "latin1"), t !== null && r !== t) {
        if (s[_o])
          throw new tr();
        process.emitWarning(new tr());
      }
      A[oe].timeout && A[oe].timeoutType === $s && A[oe].timeout.refresh && A[oe].timeout.refresh(), Et(s);
    }
  }
  destroy(A) {
    const { socket: t, client: s } = this;
    t[or] = !1, A && (cA(s[re] <= 1, "pipeline should only contain this request"), fA.destroy(t, A));
  }
}
function _e(e, A, t) {
  try {
    A.onError(t), cA(A.aborted);
  } catch (s) {
    e.emit("error", s);
  }
}
var _i = Fb;
const $d = 2048, sE = $d - 1;
class gI {
  constructor() {
    this.bottom = 0, this.top = 0, this.list = new Array($d), this.next = null;
  }
  isEmpty() {
    return this.top === this.bottom;
  }
  isFull() {
    return (this.top + 1 & sE) === this.bottom;
  }
  push(A) {
    this.list[this.top] = A, this.top = this.top + 1 & sE;
  }
  shift() {
    const A = this.list[this.bottom];
    return A === void 0 ? null : (this.list[this.bottom] = void 0, this.bottom = this.bottom + 1 & sE, A);
  }
}
var Vb = class {
  constructor() {
    this.head = this.tail = new gI();
  }
  isEmpty() {
    return this.head.isEmpty();
  }
  push(A) {
    this.head.isFull() && (this.head = this.head.next = new gI()), this.head.push(A);
  }
  shift() {
    const A = this.tail, t = A.shift();
    return A.isEmpty() && A.next !== null && (this.tail = A.next), t;
  }
};
const { kFree: xb, kConnected: Ob, kPending: Pb, kQueued: Wb, kRunning: qb, kSize: _b } = Ae, $r = Symbol("pool");
let $b = class {
  constructor(A) {
    this[$r] = A;
  }
  get connected() {
    return this[$r][Ob];
  }
  get free() {
    return this[$r][xb];
  }
  get pending() {
    return this[$r][Pb];
  }
  get queued() {
    return this[$r][Wb];
  }
  get running() {
    return this[$r][qb];
  }
  get size() {
    return this[$r][_b];
  }
};
var Zb = $b;
const Xb = Pi, Kb = Vb, { kConnected: oE, kSize: aI, kRunning: EI, kPending: QI, kQueued: Do, kBusy: jb, kFree: zb, kUrl: AN, kClose: eN, kDestroy: tN, kDispatch: rN } = Ae, sN = Zb, je = Symbol("clients"), Oe = Symbol("needDrain"), Ro = Symbol("queue"), nE = Symbol("closed resolve"), iE = Symbol("onDrain"), cI = Symbol("onConnect"), CI = Symbol("onDisconnect"), BI = Symbol("onConnectionError"), wQ = Symbol("get dispatcher"), Zd = Symbol("add client"), Xd = Symbol("remove client"), II = Symbol("stats");
let oN = class extends Xb {
  constructor() {
    super(), this[Ro] = new Kb(), this[je] = [], this[Do] = 0;
    const A = this;
    this[iE] = function(s, r) {
      const o = A[Ro];
      let n = !1;
      for (; !n; ) {
        const g = o.shift();
        if (!g)
          break;
        A[Do]--, n = !this.dispatch(g.opts, g.handler);
      }
      this[Oe] = n, !this[Oe] && A[Oe] && (A[Oe] = !1, A.emit("drain", s, [A, ...r])), A[nE] && o.isEmpty() && Promise.all(A[je].map((g) => g.close())).then(A[nE]);
    }, this[cI] = (t, s) => {
      A.emit("connect", t, [A, ...s]);
    }, this[CI] = (t, s, r) => {
      A.emit("disconnect", t, [A, ...s], r);
    }, this[BI] = (t, s, r) => {
      A.emit("connectionError", t, [A, ...s], r);
    }, this[II] = new sN(this);
  }
  get [jb]() {
    return this[Oe];
  }
  get [oE]() {
    return this[je].filter((A) => A[oE]).length;
  }
  get [zb]() {
    return this[je].filter((A) => A[oE] && !A[Oe]).length;
  }
  get [QI]() {
    let A = this[Do];
    for (const { [QI]: t } of this[je])
      A += t;
    return A;
  }
  get [EI]() {
    let A = 0;
    for (const { [EI]: t } of this[je])
      A += t;
    return A;
  }
  get [aI]() {
    let A = this[Do];
    for (const { [aI]: t } of this[je])
      A += t;
    return A;
  }
  get stats() {
    return this[II];
  }
  async [eN]() {
    return this[Ro].isEmpty() ? Promise.all(this[je].map((A) => A.close())) : new Promise((A) => {
      this[nE] = A;
    });
  }
  async [tN](A) {
    for (; ; ) {
      const t = this[Ro].shift();
      if (!t)
        break;
      t.handler.onError(A);
    }
    return Promise.all(this[je].map((t) => t.destroy(A)));
  }
  [rN](A, t) {
    const s = this[wQ]();
    return s ? s.dispatch(A, t) || (s[Oe] = !0, this[Oe] = !this[wQ]()) : (this[Oe] = !0, this[Ro].push({ opts: A, handler: t }), this[Do]++), !this[Oe];
  }
  [Zd](A) {
    return A.on("drain", this[iE]).on("connect", this[cI]).on("disconnect", this[CI]).on("connectionError", this[BI]), this[je].push(A), this[Oe] && process.nextTick(() => {
      this[Oe] && this[iE](A[AN], [this, A]);
    }), this;
  }
  [Xd](A) {
    A.close(() => {
      const t = this[je].indexOf(A);
      t !== -1 && this[je].splice(t, 1);
    }), this[Oe] = this[je].some((t) => !t[Oe] && t.closed !== !0 && t.destroyed !== !0);
  }
};
var Kd = {
  PoolBase: oN,
  kClients: je,
  kNeedDrain: Oe,
  kAddClient: Zd,
  kRemoveClient: Xd,
  kGetDispatcher: wQ
};
const {
  PoolBase: nN,
  kClients: vn,
  kNeedDrain: iN,
  kAddClient: gN,
  kGetDispatcher: aN
} = Kd, EN = _i, {
  InvalidArgumentError: gE
} = _A, aE = vA, { kUrl: lI, kInterceptors: QN } = Ae, cN = Wi, EE = Symbol("options"), QE = Symbol("connections"), hI = Symbol("factory");
function CN(e, A) {
  return new EN(e, A);
}
let BN = class extends nN {
  constructor(A, {
    connections: t,
    factory: s = CN,
    connect: r,
    connectTimeout: o,
    tls: n,
    maxCachedSessions: g,
    socketPath: i,
    autoSelectFamily: E,
    autoSelectFamilyAttemptTimeout: a,
    allowH2: Q,
    ...c
  } = {}) {
    if (super(), t != null && (!Number.isFinite(t) || t < 0))
      throw new gE("invalid connections");
    if (typeof s != "function")
      throw new gE("factory must be a function.");
    if (r != null && typeof r != "function" && typeof r != "object")
      throw new gE("connect must be a function or an object");
    typeof r != "function" && (r = cN({
      ...n,
      maxCachedSessions: g,
      allowH2: Q,
      socketPath: i,
      timeout: o,
      ...aE.nodeHasAutoSelectFamily && E ? { autoSelectFamily: E, autoSelectFamilyAttemptTimeout: a } : void 0,
      ...r
    })), this[QN] = c.interceptors && c.interceptors.Pool && Array.isArray(c.interceptors.Pool) ? c.interceptors.Pool : [], this[QE] = t || null, this[lI] = aE.parseOrigin(A), this[EE] = { ...aE.deepClone(c), connect: r, allowH2: Q }, this[EE].interceptors = c.interceptors ? { ...c.interceptors } : void 0, this[hI] = s, this.on("connectionError", (h, u, I) => {
      for (const C of u) {
        const f = this[vn].indexOf(C);
        f !== -1 && this[vn].splice(f, 1);
      }
    });
  }
  [aN]() {
    let A = this[vn].find((t) => !t[iN]);
    return A || ((!this[QE] || this[vn].length < this[QE]) && (A = this[hI](this[lI], this[EE]), this[gN](A)), A);
  }
};
var on = BN;
const {
  BalancedPoolMissingUpstreamError: IN,
  InvalidArgumentError: lN
} = _A, {
  PoolBase: hN,
  kClients: Ve,
  kNeedDrain: mo,
  kAddClient: uN,
  kRemoveClient: dN,
  kGetDispatcher: fN
} = Kd, pN = on, { kUrl: cE, kInterceptors: yN } = Ae, { parseOrigin: uI } = vA, dI = Symbol("factory"), Hn = Symbol("options"), fI = Symbol("kGreatestCommonDivisor"), Zr = Symbol("kCurrentWeight"), Xr = Symbol("kIndex"), Ct = Symbol("kWeight"), Vn = Symbol("kMaxWeightPerServer"), xn = Symbol("kErrorPenalty");
function jd(e, A) {
  return A === 0 ? e : jd(A, e % A);
}
function wN(e, A) {
  return new pN(e, A);
}
let DN = class extends hN {
  constructor(A = [], { factory: t = wN, ...s } = {}) {
    if (super(), this[Hn] = s, this[Xr] = -1, this[Zr] = 0, this[Vn] = this[Hn].maxWeightPerServer || 100, this[xn] = this[Hn].errorPenalty || 15, Array.isArray(A) || (A = [A]), typeof t != "function")
      throw new lN("factory must be a function.");
    this[yN] = s.interceptors && s.interceptors.BalancedPool && Array.isArray(s.interceptors.BalancedPool) ? s.interceptors.BalancedPool : [], this[dI] = t;
    for (const r of A)
      this.addUpstream(r);
    this._updateBalancedPoolStats();
  }
  addUpstream(A) {
    const t = uI(A).origin;
    if (this[Ve].find((r) => r[cE].origin === t && r.closed !== !0 && r.destroyed !== !0))
      return this;
    const s = this[dI](t, Object.assign({}, this[Hn]));
    this[uN](s), s.on("connect", () => {
      s[Ct] = Math.min(this[Vn], s[Ct] + this[xn]);
    }), s.on("connectionError", () => {
      s[Ct] = Math.max(1, s[Ct] - this[xn]), this._updateBalancedPoolStats();
    }), s.on("disconnect", (...r) => {
      const o = r[2];
      o && o.code === "UND_ERR_SOCKET" && (s[Ct] = Math.max(1, s[Ct] - this[xn]), this._updateBalancedPoolStats());
    });
    for (const r of this[Ve])
      r[Ct] = this[Vn];
    return this._updateBalancedPoolStats(), this;
  }
  _updateBalancedPoolStats() {
    this[fI] = this[Ve].map((A) => A[Ct]).reduce(jd, 0);
  }
  removeUpstream(A) {
    const t = uI(A).origin, s = this[Ve].find((r) => r[cE].origin === t && r.closed !== !0 && r.destroyed !== !0);
    return s && this[dN](s), this;
  }
  get upstreams() {
    return this[Ve].filter((A) => A.closed !== !0 && A.destroyed !== !0).map((A) => A[cE].origin);
  }
  [fN]() {
    if (this[Ve].length === 0)
      throw new IN();
    if (!this[Ve].find((o) => !o[mo] && o.closed !== !0 && o.destroyed !== !0) || this[Ve].map((o) => o[mo]).reduce((o, n) => o && n, !0))
      return;
    let s = 0, r = this[Ve].findIndex((o) => !o[mo]);
    for (; s++ < this[Ve].length; ) {
      this[Xr] = (this[Xr] + 1) % this[Ve].length;
      const o = this[Ve][this[Xr]];
      if (o[Ct] > this[Ve][r][Ct] && !o[mo] && (r = this[Xr]), this[Xr] === 0 && (this[Zr] = this[Zr] - this[fI], this[Zr] <= 0 && (this[Zr] = this[Vn])), o[Ct] >= this[Zr] && !o[mo])
        return o;
    }
    return this[Zr] = this[Ve][r][Ct], this[Xr] = r, this[Ve][r];
  }
};
var RN = DN;
const { kConnected: zd, kSize: Af } = Ae;
class pI {
  constructor(A) {
    this.value = A;
  }
  deref() {
    return this.value[zd] === 0 && this.value[Af] === 0 ? void 0 : this.value;
  }
}
class yI {
  constructor(A) {
    this.finalizer = A;
  }
  register(A, t) {
    A.on && A.on("disconnect", () => {
      A[zd] === 0 && A[Af] === 0 && this.finalizer(t);
    });
  }
}
var ef = function() {
  return process.env.NODE_V8_COVERAGE ? {
    WeakRef: pI,
    FinalizationRegistry: yI
  } : {
    WeakRef: rA.WeakRef || pI,
    FinalizationRegistry: rA.FinalizationRegistry || yI
  };
};
const { InvalidArgumentError: On } = _A, { kClients: ar, kRunning: wI, kClose: mN, kDestroy: kN, kDispatch: FN, kInterceptors: bN } = Ae, NN = Pi, SN = on, UN = _i, LN = vA, TN = oc, { WeakRef: MN, FinalizationRegistry: GN } = ef(), DI = Symbol("onConnect"), RI = Symbol("onDisconnect"), mI = Symbol("onConnectionError"), YN = Symbol("maxRedirections"), kI = Symbol("onDrain"), FI = Symbol("factory"), bI = Symbol("finalizer"), CE = Symbol("options");
function JN(e, A) {
  return A && A.connections === 1 ? new UN(e, A) : new SN(e, A);
}
let vN = class extends NN {
  constructor({ factory: A = JN, maxRedirections: t = 0, connect: s, ...r } = {}) {
    if (super(), typeof A != "function")
      throw new On("factory must be a function.");
    if (s != null && typeof s != "function" && typeof s != "object")
      throw new On("connect must be a function or an object");
    if (!Number.isInteger(t) || t < 0)
      throw new On("maxRedirections must be a positive number");
    s && typeof s != "function" && (s = { ...s }), this[bN] = r.interceptors && r.interceptors.Agent && Array.isArray(r.interceptors.Agent) ? r.interceptors.Agent : [TN({ maxRedirections: t })], this[CE] = { ...LN.deepClone(r), connect: s }, this[CE].interceptors = r.interceptors ? { ...r.interceptors } : void 0, this[YN] = t, this[FI] = A, this[ar] = /* @__PURE__ */ new Map(), this[bI] = new GN(
      /* istanbul ignore next: gc is undeterministic */
      (n) => {
        const g = this[ar].get(n);
        g !== void 0 && g.deref() === void 0 && this[ar].delete(n);
      }
    );
    const o = this;
    this[kI] = (n, g) => {
      o.emit("drain", n, [o, ...g]);
    }, this[DI] = (n, g) => {
      o.emit("connect", n, [o, ...g]);
    }, this[RI] = (n, g, i) => {
      o.emit("disconnect", n, [o, ...g], i);
    }, this[mI] = (n, g, i) => {
      o.emit("connectionError", n, [o, ...g], i);
    };
  }
  get [wI]() {
    let A = 0;
    for (const t of this[ar].values()) {
      const s = t.deref();
      s && (A += s[wI]);
    }
    return A;
  }
  [FN](A, t) {
    let s;
    if (A.origin && (typeof A.origin == "string" || A.origin instanceof URL))
      s = String(A.origin);
    else
      throw new On("opts.origin must be a non-empty string or URL.");
    const r = this[ar].get(s);
    let o = r ? r.deref() : null;
    return o || (o = this[FI](A.origin, this[CE]).on("drain", this[kI]).on("connect", this[DI]).on("disconnect", this[RI]).on("connectionError", this[mI]), this[ar].set(s, new MN(o)), this[bI].register(o, s)), o.dispatch(A, t);
  }
  async [mN]() {
    const A = [];
    for (const t of this[ar].values()) {
      const s = t.deref();
      s && A.push(s.close());
    }
    await Promise.all(A);
  }
  async [kN](A) {
    const t = [];
    for (const s of this[ar].values()) {
      const r = s.deref();
      r && t.push(r.destroy(A));
    }
    await Promise.all(t);
  }
};
var $i = vN, eo = {}, ic = { exports: {} };
const tf = bA, { Readable: HN } = Ye, { RequestAbortedError: rf, NotSupportedError: VN, InvalidArgumentError: xN } = _A, ci = vA, { ReadableStreamFrom: ON, toUSVString: PN } = vA;
let BE;
const st = Symbol("kConsume"), Pn = Symbol("kReading"), Ir = Symbol("kBody"), NI = Symbol("abort"), sf = Symbol("kContentType"), SI = () => {
};
var WN = class extends HN {
  constructor({
    resume: A,
    abort: t,
    contentType: s = "",
    highWaterMark: r = 64 * 1024
    // Same as nodejs fs streams.
  }) {
    super({
      autoDestroy: !0,
      read: A,
      highWaterMark: r
    }), this._readableState.dataEmitted = !1, this[NI] = t, this[st] = null, this[Ir] = null, this[sf] = s, this[Pn] = !1;
  }
  destroy(A) {
    return this.destroyed ? this : (!A && !this._readableState.endEmitted && (A = new rf()), A && this[NI](), super.destroy(A));
  }
  emit(A, ...t) {
    return A === "data" ? this._readableState.dataEmitted = !0 : A === "error" && (this._readableState.errorEmitted = !0), super.emit(A, ...t);
  }
  on(A, ...t) {
    return (A === "data" || A === "readable") && (this[Pn] = !0), super.on(A, ...t);
  }
  addListener(A, ...t) {
    return this.on(A, ...t);
  }
  off(A, ...t) {
    const s = super.off(A, ...t);
    return (A === "data" || A === "readable") && (this[Pn] = this.listenerCount("data") > 0 || this.listenerCount("readable") > 0), s;
  }
  removeListener(A, ...t) {
    return this.off(A, ...t);
  }
  push(A) {
    return this[st] && A !== null && this.readableLength === 0 ? (of(this[st], A), this[Pn] ? super.push(A) : !0) : super.push(A);
  }
  // https://fetch.spec.whatwg.org/#dom-body-text
  async text() {
    return Wn(this, "text");
  }
  // https://fetch.spec.whatwg.org/#dom-body-json
  async json() {
    return Wn(this, "json");
  }
  // https://fetch.spec.whatwg.org/#dom-body-blob
  async blob() {
    return Wn(this, "blob");
  }
  // https://fetch.spec.whatwg.org/#dom-body-arraybuffer
  async arrayBuffer() {
    return Wn(this, "arrayBuffer");
  }
  // https://fetch.spec.whatwg.org/#dom-body-formdata
  async formData() {
    throw new VN();
  }
  // https://fetch.spec.whatwg.org/#dom-body-bodyused
  get bodyUsed() {
    return ci.isDisturbed(this);
  }
  // https://fetch.spec.whatwg.org/#dom-body-body
  get body() {
    return this[Ir] || (this[Ir] = ON(this), this[st] && (this[Ir].getReader(), tf(this[Ir].locked))), this[Ir];
  }
  dump(A) {
    let t = A && Number.isFinite(A.limit) ? A.limit : 262144;
    const s = A && A.signal;
    if (s)
      try {
        if (typeof s != "object" || !("aborted" in s))
          throw new xN("signal must be an AbortSignal");
        ci.throwIfAborted(s);
      } catch (r) {
        return Promise.reject(r);
      }
    return this.closed ? Promise.resolve(null) : new Promise((r, o) => {
      const n = s ? ci.addAbortListener(s, () => {
        this.destroy();
      }) : SI;
      this.on("close", function() {
        n(), s && s.aborted ? o(s.reason || Object.assign(new Error("The operation was aborted"), { name: "AbortError" })) : r(null);
      }).on("error", SI).on("data", function(g) {
        t -= g.length, t <= 0 && this.destroy();
      }).resume();
    });
  }
};
function qN(e) {
  return e[Ir] && e[Ir].locked === !0 || e[st];
}
function _N(e) {
  return ci.isDisturbed(e) || qN(e);
}
async function Wn(e, A) {
  if (_N(e))
    throw new TypeError("unusable");
  return tf(!e[st]), new Promise((t, s) => {
    e[st] = {
      type: A,
      stream: e,
      resolve: t,
      reject: s,
      length: 0,
      body: []
    }, e.on("error", function(r) {
      DQ(this[st], r);
    }).on("close", function() {
      this[st].body !== null && DQ(this[st], new rf());
    }), process.nextTick($N, e[st]);
  });
}
function $N(e) {
  if (e.body === null)
    return;
  const { _readableState: A } = e.stream;
  for (const t of A.buffer)
    of(e, t);
  for (A.endEmitted ? UI(this[st]) : e.stream.on("end", function() {
    UI(this[st]);
  }), e.stream.resume(); e.stream.read() != null; )
    ;
}
function UI(e) {
  const { type: A, body: t, resolve: s, stream: r, length: o } = e;
  try {
    if (A === "text")
      s(PN(Buffer.concat(t)));
    else if (A === "json")
      s(JSON.parse(Buffer.concat(t)));
    else if (A === "arrayBuffer") {
      const n = new Uint8Array(o);
      let g = 0;
      for (const i of t)
        n.set(i, g), g += i.byteLength;
      s(n.buffer);
    } else A === "blob" && (BE || (BE = require("buffer").Blob), s(new BE(t, { type: r[sf] })));
    DQ(e);
  } catch (n) {
    r.destroy(n);
  }
}
function of(e, A) {
  e.length += A.length, e.body.push(A);
}
function DQ(e, A) {
  e.body !== null && (A ? e.reject(A) : e.resolve(), e.type = null, e.stream = null, e.resolve = null, e.reject = null, e.length = 0, e.body = null);
}
const ZN = bA, {
  ResponseStatusCodeError: qn
} = _A, { toUSVString: LI } = vA;
async function XN({ callback: e, body: A, contentType: t, statusCode: s, statusMessage: r, headers: o }) {
  ZN(A);
  let n = [], g = 0;
  for await (const i of A)
    if (n.push(i), g += i.length, g > 128 * 1024) {
      n = null;
      break;
    }
  if (s === 204 || !t || !n) {
    process.nextTick(e, new qn(`Response status code ${s}${r ? `: ${r}` : ""}`, s, o));
    return;
  }
  try {
    if (t.startsWith("application/json")) {
      const i = JSON.parse(LI(Buffer.concat(n)));
      process.nextTick(e, new qn(`Response status code ${s}${r ? `: ${r}` : ""}`, s, o, i));
      return;
    }
    if (t.startsWith("text/")) {
      const i = LI(Buffer.concat(n));
      process.nextTick(e, new qn(`Response status code ${s}${r ? `: ${r}` : ""}`, s, o, i));
      return;
    }
  } catch {
  }
  process.nextTick(e, new qn(`Response status code ${s}${r ? `: ${r}` : ""}`, s, o));
}
var nf = { getResolveErrorBodyCallback: XN };
const { addAbortListener: KN } = vA, { RequestAbortedError: jN } = _A, Gs = Symbol("kListener"), yr = Symbol("kSignal");
function TI(e) {
  e.abort ? e.abort() : e.onError(new jN());
}
function zN(e, A) {
  if (e[yr] = null, e[Gs] = null, !!A) {
    if (A.aborted) {
      TI(e);
      return;
    }
    e[yr] = A, e[Gs] = () => {
      TI(e);
    }, KN(e[yr], e[Gs]);
  }
}
function AS(e) {
  e[yr] && ("removeEventListener" in e[yr] ? e[yr].removeEventListener("abort", e[Gs]) : e[yr].removeListener("abort", e[Gs]), e[yr] = null, e[Gs] = null);
}
var nn = {
  addSignal: zN,
  removeSignal: AS
};
const eS = WN, {
  InvalidArgumentError: Rs,
  RequestAbortedError: tS
} = _A, Nt = vA, { getResolveErrorBodyCallback: rS } = nf, { AsyncResource: sS } = Ot, { addSignal: oS, removeSignal: MI } = nn;
class gf extends sS {
  constructor(A, t) {
    if (!A || typeof A != "object")
      throw new Rs("invalid opts");
    const { signal: s, method: r, opaque: o, body: n, onInfo: g, responseHeaders: i, throwOnError: E, highWaterMark: a } = A;
    try {
      if (typeof t != "function")
        throw new Rs("invalid callback");
      if (a && (typeof a != "number" || a < 0))
        throw new Rs("invalid highWaterMark");
      if (s && typeof s.on != "function" && typeof s.addEventListener != "function")
        throw new Rs("signal must be an EventEmitter or EventTarget");
      if (r === "CONNECT")
        throw new Rs("invalid method");
      if (g && typeof g != "function")
        throw new Rs("invalid onInfo callback");
      super("UNDICI_REQUEST");
    } catch (Q) {
      throw Nt.isStream(n) && Nt.destroy(n.on("error", Nt.nop), Q), Q;
    }
    this.responseHeaders = i || null, this.opaque = o || null, this.callback = t, this.res = null, this.abort = null, this.body = n, this.trailers = {}, this.context = null, this.onInfo = g || null, this.throwOnError = E, this.highWaterMark = a, Nt.isStream(n) && n.on("error", (Q) => {
      this.onError(Q);
    }), oS(this, s);
  }
  onConnect(A, t) {
    if (!this.callback)
      throw new tS();
    this.abort = A, this.context = t;
  }
  onHeaders(A, t, s, r) {
    const { callback: o, opaque: n, abort: g, context: i, responseHeaders: E, highWaterMark: a } = this, Q = E === "raw" ? Nt.parseRawHeaders(t) : Nt.parseHeaders(t);
    if (A < 200) {
      this.onInfo && this.onInfo({ statusCode: A, headers: Q });
      return;
    }
    const h = (E === "raw" ? Nt.parseHeaders(t) : Q)["content-type"], u = new eS({ resume: s, abort: g, contentType: h, highWaterMark: a });
    this.callback = null, this.res = u, o !== null && (this.throwOnError && A >= 400 ? this.runInAsyncScope(
      rS,
      null,
      { callback: o, body: u, contentType: h, statusCode: A, statusMessage: r, headers: Q }
    ) : this.runInAsyncScope(o, null, null, {
      statusCode: A,
      headers: Q,
      trailers: this.trailers,
      opaque: n,
      body: u,
      context: i
    }));
  }
  onData(A) {
    const { res: t } = this;
    return t.push(A);
  }
  onComplete(A) {
    const { res: t } = this;
    MI(this), Nt.parseHeaders(A, this.trailers), t.push(null);
  }
  onError(A) {
    const { res: t, callback: s, body: r, opaque: o } = this;
    MI(this), s && (this.callback = null, queueMicrotask(() => {
      this.runInAsyncScope(s, null, A, { opaque: o });
    })), t && (this.res = null, queueMicrotask(() => {
      Nt.destroy(t, A);
    })), r && (this.body = null, Nt.destroy(r, A));
  }
}
function af(e, A) {
  if (A === void 0)
    return new Promise((t, s) => {
      af.call(this, e, (r, o) => r ? s(r) : t(o));
    });
  try {
    this.dispatch(e, new gf(e, A));
  } catch (t) {
    if (typeof A != "function")
      throw t;
    const s = e && e.opaque;
    queueMicrotask(() => A(t, { opaque: s }));
  }
}
ic.exports = af;
ic.exports.RequestHandler = gf;
var nS = ic.exports;
const { finished: iS, PassThrough: gS } = Ye, {
  InvalidArgumentError: ms,
  InvalidReturnValueError: aS,
  RequestAbortedError: ES
} = _A, yt = vA, { getResolveErrorBodyCallback: QS } = nf, { AsyncResource: cS } = Ot, { addSignal: CS, removeSignal: GI } = nn;
class BS extends cS {
  constructor(A, t, s) {
    if (!A || typeof A != "object")
      throw new ms("invalid opts");
    const { signal: r, method: o, opaque: n, body: g, onInfo: i, responseHeaders: E, throwOnError: a } = A;
    try {
      if (typeof s != "function")
        throw new ms("invalid callback");
      if (typeof t != "function")
        throw new ms("invalid factory");
      if (r && typeof r.on != "function" && typeof r.addEventListener != "function")
        throw new ms("signal must be an EventEmitter or EventTarget");
      if (o === "CONNECT")
        throw new ms("invalid method");
      if (i && typeof i != "function")
        throw new ms("invalid onInfo callback");
      super("UNDICI_STREAM");
    } catch (Q) {
      throw yt.isStream(g) && yt.destroy(g.on("error", yt.nop), Q), Q;
    }
    this.responseHeaders = E || null, this.opaque = n || null, this.factory = t, this.callback = s, this.res = null, this.abort = null, this.context = null, this.trailers = null, this.body = g, this.onInfo = i || null, this.throwOnError = a || !1, yt.isStream(g) && g.on("error", (Q) => {
      this.onError(Q);
    }), CS(this, r);
  }
  onConnect(A, t) {
    if (!this.callback)
      throw new ES();
    this.abort = A, this.context = t;
  }
  onHeaders(A, t, s, r) {
    const { factory: o, opaque: n, context: g, callback: i, responseHeaders: E } = this, a = E === "raw" ? yt.parseRawHeaders(t) : yt.parseHeaders(t);
    if (A < 200) {
      this.onInfo && this.onInfo({ statusCode: A, headers: a });
      return;
    }
    this.factory = null;
    let Q;
    if (this.throwOnError && A >= 400) {
      const u = (E === "raw" ? yt.parseHeaders(t) : a)["content-type"];
      Q = new gS(), this.callback = null, this.runInAsyncScope(
        QS,
        null,
        { callback: i, body: Q, contentType: u, statusCode: A, statusMessage: r, headers: a }
      );
    } else {
      if (o === null)
        return;
      if (Q = this.runInAsyncScope(o, null, {
        statusCode: A,
        headers: a,
        opaque: n,
        context: g
      }), !Q || typeof Q.write != "function" || typeof Q.end != "function" || typeof Q.on != "function")
        throw new aS("expected Writable");
      iS(Q, { readable: !1 }, (h) => {
        const { callback: u, res: I, opaque: C, trailers: f, abort: B } = this;
        this.res = null, (h || !I.readable) && yt.destroy(I, h), this.callback = null, this.runInAsyncScope(u, null, h || null, { opaque: C, trailers: f }), h && B();
      });
    }
    return Q.on("drain", s), this.res = Q, (Q.writableNeedDrain !== void 0 ? Q.writableNeedDrain : Q._writableState && Q._writableState.needDrain) !== !0;
  }
  onData(A) {
    const { res: t } = this;
    return t ? t.write(A) : !0;
  }
  onComplete(A) {
    const { res: t } = this;
    GI(this), t && (this.trailers = yt.parseHeaders(A), t.end());
  }
  onError(A) {
    const { res: t, callback: s, opaque: r, body: o } = this;
    GI(this), this.factory = null, t ? (this.res = null, yt.destroy(t, A)) : s && (this.callback = null, queueMicrotask(() => {
      this.runInAsyncScope(s, null, A, { opaque: r });
    })), o && (this.body = null, yt.destroy(o, A));
  }
}
function Ef(e, A, t) {
  if (t === void 0)
    return new Promise((s, r) => {
      Ef.call(this, e, A, (o, n) => o ? r(o) : s(n));
    });
  try {
    this.dispatch(e, new BS(e, A, t));
  } catch (s) {
    if (typeof t != "function")
      throw s;
    const r = e && e.opaque;
    queueMicrotask(() => t(s, { opaque: r }));
  }
}
var IS = Ef;
const {
  Readable: Qf,
  Duplex: lS,
  PassThrough: hS
} = Ye, {
  InvalidArgumentError: ko,
  InvalidReturnValueError: uS,
  RequestAbortedError: Ci
} = _A, Bt = vA, { AsyncResource: dS } = Ot, { addSignal: fS, removeSignal: pS } = nn, yS = bA, Ys = Symbol("resume");
class wS extends Qf {
  constructor() {
    super({ autoDestroy: !0 }), this[Ys] = null;
  }
  _read() {
    const { [Ys]: A } = this;
    A && (this[Ys] = null, A());
  }
  _destroy(A, t) {
    this._read(), t(A);
  }
}
class DS extends Qf {
  constructor(A) {
    super({ autoDestroy: !0 }), this[Ys] = A;
  }
  _read() {
    this[Ys]();
  }
  _destroy(A, t) {
    !A && !this._readableState.endEmitted && (A = new Ci()), t(A);
  }
}
class RS extends dS {
  constructor(A, t) {
    if (!A || typeof A != "object")
      throw new ko("invalid opts");
    if (typeof t != "function")
      throw new ko("invalid handler");
    const { signal: s, method: r, opaque: o, onInfo: n, responseHeaders: g } = A;
    if (s && typeof s.on != "function" && typeof s.addEventListener != "function")
      throw new ko("signal must be an EventEmitter or EventTarget");
    if (r === "CONNECT")
      throw new ko("invalid method");
    if (n && typeof n != "function")
      throw new ko("invalid onInfo callback");
    super("UNDICI_PIPELINE"), this.opaque = o || null, this.responseHeaders = g || null, this.handler = t, this.abort = null, this.context = null, this.onInfo = n || null, this.req = new wS().on("error", Bt.nop), this.ret = new lS({
      readableObjectMode: A.objectMode,
      autoDestroy: !0,
      read: () => {
        const { body: i } = this;
        i && i.resume && i.resume();
      },
      write: (i, E, a) => {
        const { req: Q } = this;
        Q.push(i, E) || Q._readableState.destroyed ? a() : Q[Ys] = a;
      },
      destroy: (i, E) => {
        const { body: a, req: Q, res: c, ret: h, abort: u } = this;
        !i && !h._readableState.endEmitted && (i = new Ci()), u && i && u(), Bt.destroy(a, i), Bt.destroy(Q, i), Bt.destroy(c, i), pS(this), E(i);
      }
    }).on("prefinish", () => {
      const { req: i } = this;
      i.push(null);
    }), this.res = null, fS(this, s);
  }
  onConnect(A, t) {
    const { ret: s, res: r } = this;
    if (yS(!r, "pipeline cannot be retried"), s.destroyed)
      throw new Ci();
    this.abort = A, this.context = t;
  }
  onHeaders(A, t, s) {
    const { opaque: r, handler: o, context: n } = this;
    if (A < 200) {
      if (this.onInfo) {
        const i = this.responseHeaders === "raw" ? Bt.parseRawHeaders(t) : Bt.parseHeaders(t);
        this.onInfo({ statusCode: A, headers: i });
      }
      return;
    }
    this.res = new DS(s);
    let g;
    try {
      this.handler = null;
      const i = this.responseHeaders === "raw" ? Bt.parseRawHeaders(t) : Bt.parseHeaders(t);
      g = this.runInAsyncScope(o, null, {
        statusCode: A,
        headers: i,
        opaque: r,
        body: this.res,
        context: n
      });
    } catch (i) {
      throw this.res.on("error", Bt.nop), i;
    }
    if (!g || typeof g.on != "function")
      throw new uS("expected Readable");
    g.on("data", (i) => {
      const { ret: E, body: a } = this;
      !E.push(i) && a.pause && a.pause();
    }).on("error", (i) => {
      const { ret: E } = this;
      Bt.destroy(E, i);
    }).on("end", () => {
      const { ret: i } = this;
      i.push(null);
    }).on("close", () => {
      const { ret: i } = this;
      i._readableState.ended || Bt.destroy(i, new Ci());
    }), this.body = g;
  }
  onData(A) {
    const { res: t } = this;
    return t.push(A);
  }
  onComplete(A) {
    const { res: t } = this;
    t.push(null);
  }
  onError(A) {
    const { ret: t } = this;
    this.handler = null, Bt.destroy(t, A);
  }
}
function mS(e, A) {
  try {
    const t = new RS(e, A);
    return this.dispatch({ ...e, body: t.req }, t), t.ret;
  } catch (t) {
    return new hS().destroy(t);
  }
}
var kS = mS;
const { InvalidArgumentError: IE, RequestAbortedError: FS, SocketError: bS } = _A, { AsyncResource: NS } = Ot, YI = vA, { addSignal: SS, removeSignal: JI } = nn, US = bA;
class LS extends NS {
  constructor(A, t) {
    if (!A || typeof A != "object")
      throw new IE("invalid opts");
    if (typeof t != "function")
      throw new IE("invalid callback");
    const { signal: s, opaque: r, responseHeaders: o } = A;
    if (s && typeof s.on != "function" && typeof s.addEventListener != "function")
      throw new IE("signal must be an EventEmitter or EventTarget");
    super("UNDICI_UPGRADE"), this.responseHeaders = o || null, this.opaque = r || null, this.callback = t, this.abort = null, this.context = null, SS(this, s);
  }
  onConnect(A, t) {
    if (!this.callback)
      throw new FS();
    this.abort = A, this.context = null;
  }
  onHeaders() {
    throw new bS("bad upgrade", null);
  }
  onUpgrade(A, t, s) {
    const { callback: r, opaque: o, context: n } = this;
    US.strictEqual(A, 101), JI(this), this.callback = null;
    const g = this.responseHeaders === "raw" ? YI.parseRawHeaders(t) : YI.parseHeaders(t);
    this.runInAsyncScope(r, null, null, {
      headers: g,
      socket: s,
      opaque: o,
      context: n
    });
  }
  onError(A) {
    const { callback: t, opaque: s } = this;
    JI(this), t && (this.callback = null, queueMicrotask(() => {
      this.runInAsyncScope(t, null, A, { opaque: s });
    }));
  }
}
function cf(e, A) {
  if (A === void 0)
    return new Promise((t, s) => {
      cf.call(this, e, (r, o) => r ? s(r) : t(o));
    });
  try {
    const t = new LS(e, A);
    this.dispatch({
      ...e,
      method: e.method || "GET",
      upgrade: e.protocol || "Websocket"
    }, t);
  } catch (t) {
    if (typeof A != "function")
      throw t;
    const s = e && e.opaque;
    queueMicrotask(() => A(t, { opaque: s }));
  }
}
var TS = cf;
const { AsyncResource: MS } = Ot, { InvalidArgumentError: lE, RequestAbortedError: GS, SocketError: YS } = _A, vI = vA, { addSignal: JS, removeSignal: HI } = nn;
class vS extends MS {
  constructor(A, t) {
    if (!A || typeof A != "object")
      throw new lE("invalid opts");
    if (typeof t != "function")
      throw new lE("invalid callback");
    const { signal: s, opaque: r, responseHeaders: o } = A;
    if (s && typeof s.on != "function" && typeof s.addEventListener != "function")
      throw new lE("signal must be an EventEmitter or EventTarget");
    super("UNDICI_CONNECT"), this.opaque = r || null, this.responseHeaders = o || null, this.callback = t, this.abort = null, JS(this, s);
  }
  onConnect(A, t) {
    if (!this.callback)
      throw new GS();
    this.abort = A, this.context = t;
  }
  onHeaders() {
    throw new YS("bad connect", null);
  }
  onUpgrade(A, t, s) {
    const { callback: r, opaque: o, context: n } = this;
    HI(this), this.callback = null;
    let g = t;
    g != null && (g = this.responseHeaders === "raw" ? vI.parseRawHeaders(t) : vI.parseHeaders(t)), this.runInAsyncScope(r, null, null, {
      statusCode: A,
      headers: g,
      socket: s,
      opaque: o,
      context: n
    });
  }
  onError(A) {
    const { callback: t, opaque: s } = this;
    HI(this), t && (this.callback = null, queueMicrotask(() => {
      this.runInAsyncScope(t, null, A, { opaque: s });
    }));
  }
}
function Cf(e, A) {
  if (A === void 0)
    return new Promise((t, s) => {
      Cf.call(this, e, (r, o) => r ? s(r) : t(o));
    });
  try {
    const t = new vS(e, A);
    this.dispatch({ ...e, method: "CONNECT" }, t);
  } catch (t) {
    if (typeof A != "function")
      throw t;
    const s = e && e.opaque;
    queueMicrotask(() => A(t, { opaque: s }));
  }
}
var HS = Cf;
eo.request = nS;
eo.stream = IS;
eo.pipeline = kS;
eo.upgrade = TS;
eo.connect = HS;
const { UndiciError: VS } = _A;
let xS = class Bf extends VS {
  constructor(A) {
    super(A), Error.captureStackTrace(this, Bf), this.name = "MockNotMatchedError", this.message = A || "The request does not match any registered mock dispatches", this.code = "UND_MOCK_ERR_MOCK_NOT_MATCHED";
  }
};
var If = {
  MockNotMatchedError: xS
}, gn = {
  kAgent: Symbol("agent"),
  kOptions: Symbol("options"),
  kFactory: Symbol("factory"),
  kDispatches: Symbol("dispatches"),
  kDispatchKey: Symbol("dispatch key"),
  kDefaultHeaders: Symbol("default headers"),
  kDefaultTrailers: Symbol("default trailers"),
  kContentLength: Symbol("content length"),
  kMockAgent: Symbol("mock agent"),
  kMockAgentSet: Symbol("mock agent set"),
  kMockAgentGet: Symbol("mock agent get"),
  kMockDispatch: Symbol("mock dispatch"),
  kClose: Symbol("close"),
  kOriginalClose: Symbol("original agent close"),
  kOrigin: Symbol("origin"),
  kIsMockActive: Symbol("is mock active"),
  kNetConnect: Symbol("net connect"),
  kGetNetConnect: Symbol("get net connect"),
  kConnected: Symbol("connected")
};
const { MockNotMatchedError: rs } = If, {
  kDispatches: _n,
  kMockAgent: OS,
  kOriginalDispatch: PS,
  kOrigin: WS,
  kGetNetConnect: qS
} = gn, { buildURL: _S, nop: $S } = vA, { STATUS_CODES: ZS } = Vt, {
  types: {
    isPromise: XS
  }
} = le;
function nr(e, A) {
  return typeof e == "string" ? e === A : e instanceof RegExp ? e.test(A) : typeof e == "function" ? e(A) === !0 : !1;
}
function lf(e) {
  return Object.fromEntries(
    Object.entries(e).map(([A, t]) => [A.toLocaleLowerCase(), t])
  );
}
function hf(e, A) {
  if (Array.isArray(e)) {
    for (let t = 0; t < e.length; t += 2)
      if (e[t].toLocaleLowerCase() === A.toLocaleLowerCase())
        return e[t + 1];
    return;
  } else return typeof e.get == "function" ? e.get(A) : lf(e)[A.toLocaleLowerCase()];
}
function uf(e) {
  const A = e.slice(), t = [];
  for (let s = 0; s < A.length; s += 2)
    t.push([A[s], A[s + 1]]);
  return Object.fromEntries(t);
}
function df(e, A) {
  if (typeof e.headers == "function")
    return Array.isArray(A) && (A = uf(A)), e.headers(A ? lf(A) : {});
  if (typeof e.headers > "u")
    return !0;
  if (typeof A != "object" || typeof e.headers != "object")
    return !1;
  for (const [t, s] of Object.entries(e.headers)) {
    const r = hf(A, t);
    if (!nr(s, r))
      return !1;
  }
  return !0;
}
function VI(e) {
  if (typeof e != "string")
    return e;
  const A = e.split("?");
  if (A.length !== 2)
    return e;
  const t = new URLSearchParams(A.pop());
  return t.sort(), [...A, t.toString()].join("?");
}
function KS(e, { path: A, method: t, body: s, headers: r }) {
  const o = nr(e.path, A), n = nr(e.method, t), g = typeof e.body < "u" ? nr(e.body, s) : !0, i = df(e, r);
  return o && n && g && i;
}
function ff(e) {
  return Buffer.isBuffer(e) ? e : typeof e == "object" ? JSON.stringify(e) : e.toString();
}
function pf(e, A) {
  const t = A.query ? _S(A.path, A.query) : A.path, s = typeof t == "string" ? VI(t) : t;
  let r = e.filter(({ consumed: o }) => !o).filter(({ path: o }) => nr(VI(o), s));
  if (r.length === 0)
    throw new rs(`Mock dispatch not matched for path '${s}'`);
  if (r = r.filter(({ method: o }) => nr(o, A.method)), r.length === 0)
    throw new rs(`Mock dispatch not matched for method '${A.method}'`);
  if (r = r.filter(({ body: o }) => typeof o < "u" ? nr(o, A.body) : !0), r.length === 0)
    throw new rs(`Mock dispatch not matched for body '${A.body}'`);
  if (r = r.filter((o) => df(o, A.headers)), r.length === 0)
    throw new rs(`Mock dispatch not matched for headers '${typeof A.headers == "object" ? JSON.stringify(A.headers) : A.headers}'`);
  return r[0];
}
function jS(e, A, t) {
  const s = { timesInvoked: 0, times: 1, persist: !1, consumed: !1 }, r = typeof t == "function" ? { callback: t } : { ...t }, o = { ...s, ...A, pending: !0, data: { error: null, ...r } };
  return e.push(o), o;
}
function RQ(e, A) {
  const t = e.findIndex((s) => s.consumed ? KS(s, A) : !1);
  t !== -1 && e.splice(t, 1);
}
function yf(e) {
  const { path: A, method: t, body: s, headers: r, query: o } = e;
  return {
    path: A,
    method: t,
    body: s,
    headers: r,
    query: o
  };
}
function mQ(e) {
  return Object.entries(e).reduce((A, [t, s]) => [
    ...A,
    Buffer.from(`${t}`),
    Array.isArray(s) ? s.map((r) => Buffer.from(`${r}`)) : Buffer.from(`${s}`)
  ], []);
}
function wf(e) {
  return ZS[e] || "unknown";
}
async function zS(e) {
  const A = [];
  for await (const t of e)
    A.push(t);
  return Buffer.concat(A).toString("utf8");
}
function Df(e, A) {
  const t = yf(e), s = pf(this[_n], t);
  s.timesInvoked++, s.data.callback && (s.data = { ...s.data, ...s.data.callback(e) });
  const { data: { statusCode: r, data: o, headers: n, trailers: g, error: i }, delay: E, persist: a } = s, { timesInvoked: Q, times: c } = s;
  if (s.consumed = !a && Q >= c, s.pending = Q < c, i !== null)
    return RQ(this[_n], t), A.onError(i), !0;
  typeof E == "number" && E > 0 ? setTimeout(() => {
    h(this[_n]);
  }, E) : h(this[_n]);
  function h(I, C = o) {
    const f = Array.isArray(e.headers) ? uf(e.headers) : e.headers, B = typeof C == "function" ? C({ ...e, headers: f }) : C;
    if (XS(B)) {
      B.then((p) => h(I, p));
      return;
    }
    const l = ff(B), y = mQ(n), d = mQ(g);
    A.abort = $S, A.onHeaders(r, y, u, wf(r)), A.onData(Buffer.from(l)), A.onComplete(d), RQ(I, t);
  }
  function u() {
  }
  return !0;
}
function AU() {
  const e = this[OS], A = this[WS], t = this[PS];
  return function(r, o) {
    if (e.isMockActive)
      try {
        Df.call(this, r, o);
      } catch (n) {
        if (n instanceof rs) {
          const g = e[qS]();
          if (g === !1)
            throw new rs(`${n.message}: subsequent request to origin ${A} was not allowed (net.connect disabled)`);
          if (Rf(g, A))
            t.call(this, r, o);
          else
            throw new rs(`${n.message}: subsequent request to origin ${A} was not allowed (net.connect is not enabled for this origin)`);
        } else
          throw n;
      }
    else
      t.call(this, r, o);
  };
}
function Rf(e, A) {
  const t = new URL(A);
  return e === !0 ? !0 : !!(Array.isArray(e) && e.some((s) => nr(s, t.host)));
}
function eU(e) {
  if (e) {
    const { agent: A, ...t } = e;
    return t;
  }
}
var Zi = {
  getResponseData: ff,
  getMockDispatch: pf,
  addMockDispatch: jS,
  deleteMockDispatch: RQ,
  buildKey: yf,
  generateKeyValues: mQ,
  matchValue: nr,
  getResponse: zS,
  getStatusText: wf,
  mockDispatch: Df,
  buildMockDispatch: AU,
  checkNetConnect: Rf,
  buildMockOptions: eU,
  getHeaderByName: hf
}, Xi = {};
const { getResponseData: tU, buildKey: rU, addMockDispatch: hE } = Zi, {
  kDispatches: $n,
  kDispatchKey: Zn,
  kDefaultHeaders: uE,
  kDefaultTrailers: dE,
  kContentLength: fE,
  kMockDispatch: Xn
} = gn, { InvalidArgumentError: Dt } = _A, { buildURL: sU } = vA;
class Bi {
  constructor(A) {
    this[Xn] = A;
  }
  /**
   * Delay a reply by a set amount in ms.
   */
  delay(A) {
    if (typeof A != "number" || !Number.isInteger(A) || A <= 0)
      throw new Dt("waitInMs must be a valid integer > 0");
    return this[Xn].delay = A, this;
  }
  /**
   * For a defined reply, never mark as consumed.
   */
  persist() {
    return this[Xn].persist = !0, this;
  }
  /**
   * Allow one to define a reply for a set amount of matching requests.
   */
  times(A) {
    if (typeof A != "number" || !Number.isInteger(A) || A <= 0)
      throw new Dt("repeatTimes must be a valid integer > 0");
    return this[Xn].times = A, this;
  }
}
let oU = class {
  constructor(A, t) {
    if (typeof A != "object")
      throw new Dt("opts must be an object");
    if (typeof A.path > "u")
      throw new Dt("opts.path must be defined");
    if (typeof A.method > "u" && (A.method = "GET"), typeof A.path == "string")
      if (A.query)
        A.path = sU(A.path, A.query);
      else {
        const s = new URL(A.path, "data://");
        A.path = s.pathname + s.search;
      }
    typeof A.method == "string" && (A.method = A.method.toUpperCase()), this[Zn] = rU(A), this[$n] = t, this[uE] = {}, this[dE] = {}, this[fE] = !1;
  }
  createMockScopeDispatchData(A, t, s = {}) {
    const r = tU(t), o = this[fE] ? { "content-length": r.length } : {}, n = { ...this[uE], ...o, ...s.headers }, g = { ...this[dE], ...s.trailers };
    return { statusCode: A, data: t, headers: n, trailers: g };
  }
  validateReplyParameters(A, t, s) {
    if (typeof A > "u")
      throw new Dt("statusCode must be defined");
    if (typeof t > "u")
      throw new Dt("data must be defined");
    if (typeof s != "object")
      throw new Dt("responseOptions must be an object");
  }
  /**
   * Mock an undici request with a defined reply.
   */
  reply(A) {
    if (typeof A == "function") {
      const g = (E) => {
        const a = A(E);
        if (typeof a != "object")
          throw new Dt("reply options callback must return an object");
        const { statusCode: Q, data: c = "", responseOptions: h = {} } = a;
        return this.validateReplyParameters(Q, c, h), {
          ...this.createMockScopeDispatchData(Q, c, h)
        };
      }, i = hE(this[$n], this[Zn], g);
      return new Bi(i);
    }
    const [t, s = "", r = {}] = [...arguments];
    this.validateReplyParameters(t, s, r);
    const o = this.createMockScopeDispatchData(t, s, r), n = hE(this[$n], this[Zn], o);
    return new Bi(n);
  }
  /**
   * Mock an undici request with a defined error.
   */
  replyWithError(A) {
    if (typeof A > "u")
      throw new Dt("error must be defined");
    const t = hE(this[$n], this[Zn], { error: A });
    return new Bi(t);
  }
  /**
   * Set default reply headers on the interceptor for subsequent replies
   */
  defaultReplyHeaders(A) {
    if (typeof A > "u")
      throw new Dt("headers must be defined");
    return this[uE] = A, this;
  }
  /**
   * Set default reply trailers on the interceptor for subsequent replies
   */
  defaultReplyTrailers(A) {
    if (typeof A > "u")
      throw new Dt("trailers must be defined");
    return this[dE] = A, this;
  }
  /**
   * Set reply content length header for replies on the interceptor
   */
  replyContentLength() {
    return this[fE] = !0, this;
  }
};
Xi.MockInterceptor = oU;
Xi.MockScope = Bi;
const { promisify: nU } = le, iU = _i, { buildMockDispatch: gU } = Zi, {
  kDispatches: xI,
  kMockAgent: OI,
  kClose: PI,
  kOriginalClose: WI,
  kOrigin: qI,
  kOriginalDispatch: aU,
  kConnected: pE
} = gn, { MockInterceptor: EU } = Xi, _I = Ae, { InvalidArgumentError: QU } = _A;
let cU = class extends iU {
  constructor(A, t) {
    if (super(A, t), !t || !t.agent || typeof t.agent.dispatch != "function")
      throw new QU("Argument opts.agent must implement Agent");
    this[OI] = t.agent, this[qI] = A, this[xI] = [], this[pE] = 1, this[aU] = this.dispatch, this[WI] = this.close.bind(this), this.dispatch = gU.call(this), this.close = this[PI];
  }
  get [_I.kConnected]() {
    return this[pE];
  }
  /**
   * Sets up the base interceptor for mocking replies from undici.
   */
  intercept(A) {
    return new EU(A, this[xI]);
  }
  async [PI]() {
    await nU(this[WI])(), this[pE] = 0, this[OI][_I.kClients].delete(this[qI]);
  }
};
var mf = cU;
const { promisify: CU } = le, BU = on, { buildMockDispatch: IU } = Zi, {
  kDispatches: $I,
  kMockAgent: ZI,
  kClose: XI,
  kOriginalClose: KI,
  kOrigin: jI,
  kOriginalDispatch: lU,
  kConnected: yE
} = gn, { MockInterceptor: hU } = Xi, zI = Ae, { InvalidArgumentError: uU } = _A;
let dU = class extends BU {
  constructor(A, t) {
    if (super(A, t), !t || !t.agent || typeof t.agent.dispatch != "function")
      throw new uU("Argument opts.agent must implement Agent");
    this[ZI] = t.agent, this[jI] = A, this[$I] = [], this[yE] = 1, this[lU] = this.dispatch, this[KI] = this.close.bind(this), this.dispatch = IU.call(this), this.close = this[XI];
  }
  get [zI.kConnected]() {
    return this[yE];
  }
  /**
   * Sets up the base interceptor for mocking replies from undici.
   */
  intercept(A) {
    return new hU(A, this[$I]);
  }
  async [XI]() {
    await CU(this[KI])(), this[yE] = 0, this[ZI][zI.kClients].delete(this[jI]);
  }
};
var kf = dU;
const fU = {
  pronoun: "it",
  is: "is",
  was: "was",
  this: "this"
}, pU = {
  pronoun: "they",
  is: "are",
  was: "were",
  this: "these"
};
var yU = class {
  constructor(A, t) {
    this.singular = A, this.plural = t;
  }
  pluralize(A) {
    const t = A === 1, s = t ? fU : pU, r = t ? this.singular : this.plural;
    return { ...s, count: A, noun: r };
  }
};
const { Transform: wU } = Ye, { Console: DU } = Zl;
var RU = class {
  constructor({ disableColors: A } = {}) {
    this.transform = new wU({
      transform(t, s, r) {
        r(null, t);
      }
    }), this.logger = new DU({
      stdout: this.transform,
      inspectOptions: {
        colors: !A && !process.env.CI
      }
    });
  }
  format(A) {
    const t = A.map(
      ({ method: s, path: r, data: { statusCode: o }, persist: n, times: g, timesInvoked: i, origin: E }) => ({
        Method: s,
        Origin: E,
        Path: r,
        "Status code": o,
        Persistent: n ? "✅" : "❌",
        Invocations: i,
        Remaining: n ? 1 / 0 : g - i
      })
    );
    return this.logger.table(t), this.transform.read().toString();
  }
};
const { kClients: Kr } = Ae, mU = $i, {
  kAgent: wE,
  kMockAgentSet: Kn,
  kMockAgentGet: Al,
  kDispatches: DE,
  kIsMockActive: jn,
  kNetConnect: jr,
  kGetNetConnect: kU,
  kOptions: zn,
  kFactory: Ai
} = gn, FU = mf, bU = kf, { matchValue: NU, buildMockOptions: SU } = Zi, { InvalidArgumentError: el, UndiciError: UU } = _A, LU = rc, TU = yU, MU = RU;
class GU {
  constructor(A) {
    this.value = A;
  }
  deref() {
    return this.value;
  }
}
let YU = class extends LU {
  constructor(A) {
    if (super(A), this[jr] = !0, this[jn] = !0, A && A.agent && typeof A.agent.dispatch != "function")
      throw new el("Argument opts.agent must implement Agent");
    const t = A && A.agent ? A.agent : new mU(A);
    this[wE] = t, this[Kr] = t[Kr], this[zn] = SU(A);
  }
  get(A) {
    let t = this[Al](A);
    return t || (t = this[Ai](A), this[Kn](A, t)), t;
  }
  dispatch(A, t) {
    return this.get(A.origin), this[wE].dispatch(A, t);
  }
  async close() {
    await this[wE].close(), this[Kr].clear();
  }
  deactivate() {
    this[jn] = !1;
  }
  activate() {
    this[jn] = !0;
  }
  enableNetConnect(A) {
    if (typeof A == "string" || typeof A == "function" || A instanceof RegExp)
      Array.isArray(this[jr]) ? this[jr].push(A) : this[jr] = [A];
    else if (typeof A > "u")
      this[jr] = !0;
    else
      throw new el("Unsupported matcher. Must be one of String|Function|RegExp.");
  }
  disableNetConnect() {
    this[jr] = !1;
  }
  // This is required to bypass issues caused by using global symbols - see:
  // https://github.com/nodejs/undici/issues/1447
  get isMockActive() {
    return this[jn];
  }
  [Kn](A, t) {
    this[Kr].set(A, new GU(t));
  }
  [Ai](A) {
    const t = Object.assign({ agent: this }, this[zn]);
    return this[zn] && this[zn].connections === 1 ? new FU(A, t) : new bU(A, t);
  }
  [Al](A) {
    const t = this[Kr].get(A);
    if (t)
      return t.deref();
    if (typeof A != "string") {
      const s = this[Ai]("http://localhost:9999");
      return this[Kn](A, s), s;
    }
    for (const [s, r] of Array.from(this[Kr])) {
      const o = r.deref();
      if (o && typeof s != "string" && NU(s, A)) {
        const n = this[Ai](A);
        return this[Kn](A, n), n[DE] = o[DE], n;
      }
    }
  }
  [kU]() {
    return this[jr];
  }
  pendingInterceptors() {
    const A = this[Kr];
    return Array.from(A.entries()).flatMap(([t, s]) => s.deref()[DE].map((r) => ({ ...r, origin: t }))).filter(({ pending: t }) => t);
  }
  assertNoPendingInterceptors({ pendingInterceptorsFormatter: A = new MU() } = {}) {
    const t = this.pendingInterceptors();
    if (t.length === 0)
      return;
    const s = new TU("interceptor", "interceptors").pluralize(t.length);
    throw new UU(`
${s.count} ${s.noun} ${s.is} pending:

${A.format(t)}
`.trim());
  }
};
var JU = YU;
const { kProxy: vU, kClose: HU, kDestroy: VU, kInterceptors: xU } = Ae, { URL: tl } = Xl, rl = $i, OU = on, PU = Pi, { InvalidArgumentError: Vo, RequestAbortedError: WU } = _A, sl = Wi, Fo = Symbol("proxy agent"), ei = Symbol("proxy client"), bo = Symbol("proxy headers"), RE = Symbol("request tls settings"), qU = Symbol("proxy tls settings"), ol = Symbol("connect endpoint function");
function _U(e) {
  return e === "https:" ? 443 : 80;
}
function $U(e) {
  if (typeof e == "string" && (e = { uri: e }), !e || !e.uri)
    throw new Vo("Proxy opts.uri is mandatory");
  return {
    uri: e.uri,
    protocol: e.protocol || "https"
  };
}
function ZU(e, A) {
  return new OU(e, A);
}
let XU = class extends PU {
  constructor(A) {
    if (super(A), this[vU] = $U(A), this[Fo] = new rl(A), this[xU] = A.interceptors && A.interceptors.ProxyAgent && Array.isArray(A.interceptors.ProxyAgent) ? A.interceptors.ProxyAgent : [], typeof A == "string" && (A = { uri: A }), !A || !A.uri)
      throw new Vo("Proxy opts.uri is mandatory");
    const { clientFactory: t = ZU } = A;
    if (typeof t != "function")
      throw new Vo("Proxy opts.clientFactory must be a function.");
    this[RE] = A.requestTls, this[qU] = A.proxyTls, this[bo] = A.headers || {};
    const s = new tl(A.uri), { origin: r, port: o, host: n, username: g, password: i } = s;
    if (A.auth && A.token)
      throw new Vo("opts.auth cannot be used in combination with opts.token");
    A.auth ? this[bo]["proxy-authorization"] = `Basic ${A.auth}` : A.token ? this[bo]["proxy-authorization"] = A.token : g && i && (this[bo]["proxy-authorization"] = `Basic ${Buffer.from(`${decodeURIComponent(g)}:${decodeURIComponent(i)}`).toString("base64")}`);
    const E = sl({ ...A.proxyTls });
    this[ol] = sl({ ...A.requestTls }), this[ei] = t(s, { connect: E }), this[Fo] = new rl({
      ...A,
      connect: async (a, Q) => {
        let c = a.host;
        a.port || (c += `:${_U(a.protocol)}`);
        try {
          const { socket: h, statusCode: u } = await this[ei].connect({
            origin: r,
            port: o,
            path: c,
            signal: a.signal,
            headers: {
              ...this[bo],
              host: n
            }
          });
          if (u !== 200 && (h.on("error", () => {
          }).destroy(), Q(new WU(`Proxy response (${u}) !== 200 when HTTP Tunneling`))), a.protocol !== "https:") {
            Q(null, h);
            return;
          }
          let I;
          this[RE] ? I = this[RE].servername : I = a.servername, this[ol]({ ...a, servername: I, httpSocket: h }, Q);
        } catch (h) {
          Q(h);
        }
      }
    });
  }
  dispatch(A, t) {
    const { host: s } = new tl(A.origin), r = KU(A.headers);
    return jU(r), this[Fo].dispatch(
      {
        ...A,
        headers: {
          ...r,
          host: s
        }
      },
      t
    );
  }
  async [HU]() {
    await this[Fo].close(), await this[ei].close();
  }
  async [VU]() {
    await this[Fo].destroy(), await this[ei].destroy();
  }
};
function KU(e) {
  if (Array.isArray(e)) {
    const A = {};
    for (let t = 0; t < e.length; t += 2)
      A[e[t]] = e[t + 1];
    return A;
  }
  return e;
}
function jU(e) {
  if (e && Object.keys(e).find((t) => t.toLowerCase() === "proxy-authorization"))
    throw new Vo("Proxy-Authorization should be sent in ProxyAgent constructor");
}
var zU = XU;
const zr = bA, { kRetryHandlerDefaultRetry: nl } = Ae, { RequestRetryError: ti } = _A, { isDisturbed: il, parseHeaders: AL, parseRangeHeader: gl } = vA;
function eL(e) {
  const A = Date.now();
  return new Date(e).getTime() - A;
}
let tL = class Ff {
  constructor(A, t) {
    const { retryOptions: s, ...r } = A, {
      // Retry scoped
      retry: o,
      maxRetries: n,
      maxTimeout: g,
      minTimeout: i,
      timeoutFactor: E,
      // Response scoped
      methods: a,
      errorCodes: Q,
      retryAfter: c,
      statusCodes: h
    } = s ?? {};
    this.dispatch = t.dispatch, this.handler = t.handler, this.opts = r, this.abort = null, this.aborted = !1, this.retryOpts = {
      retry: o ?? Ff[nl],
      retryAfter: c ?? !0,
      maxTimeout: g ?? 30 * 1e3,
      // 30s,
      timeout: i ?? 500,
      // .5s
      timeoutFactor: E ?? 2,
      maxRetries: n ?? 5,
      // What errors we should retry
      methods: a ?? ["GET", "HEAD", "OPTIONS", "PUT", "DELETE", "TRACE"],
      // Indicates which errors to retry
      statusCodes: h ?? [500, 502, 503, 504, 429],
      // List of errors to retry
      errorCodes: Q ?? [
        "ECONNRESET",
        "ECONNREFUSED",
        "ENOTFOUND",
        "ENETDOWN",
        "ENETUNREACH",
        "EHOSTDOWN",
        "EHOSTUNREACH",
        "EPIPE"
      ]
    }, this.retryCount = 0, this.start = 0, this.end = null, this.etag = null, this.resume = null, this.handler.onConnect((u) => {
      this.aborted = !0, this.abort ? this.abort(u) : this.reason = u;
    });
  }
  onRequestSent() {
    this.handler.onRequestSent && this.handler.onRequestSent();
  }
  onUpgrade(A, t, s) {
    this.handler.onUpgrade && this.handler.onUpgrade(A, t, s);
  }
  onConnect(A) {
    this.aborted ? A(this.reason) : this.abort = A;
  }
  onBodySent(A) {
    if (this.handler.onBodySent) return this.handler.onBodySent(A);
  }
  static [nl](A, { state: t, opts: s }, r) {
    const { statusCode: o, code: n, headers: g } = A, { method: i, retryOptions: E } = s, {
      maxRetries: a,
      timeout: Q,
      maxTimeout: c,
      timeoutFactor: h,
      statusCodes: u,
      errorCodes: I,
      methods: C
    } = E;
    let { counter: f, currentTimeout: B } = t;
    if (B = B != null && B > 0 ? B : Q, n && n !== "UND_ERR_REQ_RETRY" && n !== "UND_ERR_SOCKET" && !I.includes(n)) {
      r(A);
      return;
    }
    if (Array.isArray(C) && !C.includes(i)) {
      r(A);
      return;
    }
    if (o != null && Array.isArray(u) && !u.includes(o)) {
      r(A);
      return;
    }
    if (f > a) {
      r(A);
      return;
    }
    let l = g != null && g["retry-after"];
    l && (l = Number(l), l = isNaN(l) ? eL(l) : l * 1e3);
    const y = l > 0 ? Math.min(l, c) : Math.min(B * h ** f, c);
    t.currentTimeout = y, setTimeout(() => r(null), y);
  }
  onHeaders(A, t, s, r) {
    const o = AL(t);
    if (this.retryCount += 1, A >= 300)
      return this.abort(
        new ti("Request failed", A, {
          headers: o,
          count: this.retryCount
        })
      ), !1;
    if (this.resume != null) {
      if (this.resume = null, A !== 206)
        return !0;
      const g = gl(o["content-range"]);
      if (!g)
        return this.abort(
          new ti("Content-Range mismatch", A, {
            headers: o,
            count: this.retryCount
          })
        ), !1;
      if (this.etag != null && this.etag !== o.etag)
        return this.abort(
          new ti("ETag mismatch", A, {
            headers: o,
            count: this.retryCount
          })
        ), !1;
      const { start: i, size: E, end: a = E } = g;
      return zr(this.start === i, "content-range mismatch"), zr(this.end == null || this.end === a, "content-range mismatch"), this.resume = s, !0;
    }
    if (this.end == null) {
      if (A === 206) {
        const g = gl(o["content-range"]);
        if (g == null)
          return this.handler.onHeaders(
            A,
            t,
            s,
            r
          );
        const { start: i, size: E, end: a = E } = g;
        zr(
          i != null && Number.isFinite(i) && this.start !== i,
          "content-range mismatch"
        ), zr(Number.isFinite(i)), zr(
          a != null && Number.isFinite(a) && this.end !== a,
          "invalid content-length"
        ), this.start = i, this.end = a;
      }
      if (this.end == null) {
        const g = o["content-length"];
        this.end = g != null ? Number(g) : null;
      }
      return zr(Number.isFinite(this.start)), zr(
        this.end == null || Number.isFinite(this.end),
        "invalid content-length"
      ), this.resume = s, this.etag = o.etag != null ? o.etag : null, this.handler.onHeaders(
        A,
        t,
        s,
        r
      );
    }
    const n = new ti("Request failed", A, {
      headers: o,
      count: this.retryCount
    });
    return this.abort(n), !1;
  }
  onData(A) {
    return this.start += A.length, this.handler.onData(A);
  }
  onComplete(A) {
    return this.retryCount = 0, this.handler.onComplete(A);
  }
  onError(A) {
    if (this.aborted || il(this.opts.body))
      return this.handler.onError(A);
    this.retryOpts.retry(
      A,
      {
        state: { counter: this.retryCount++, currentTimeout: this.retryAfter },
        opts: { retryOptions: this.retryOpts, ...this.opts }
      },
      t.bind(this)
    );
    function t(s) {
      if (s != null || this.aborted || il(this.opts.body))
        return this.handler.onError(s);
      this.start !== 0 && (this.opts = {
        ...this.opts,
        headers: {
          ...this.opts.headers,
          range: `bytes=${this.start}-${this.end ?? ""}`
        }
      });
      try {
        this.dispatch(this.opts, this);
      } catch (r) {
        this.handler.onError(r);
      }
    }
  }
};
var rL = tL;
const bf = Symbol.for("undici.globalDispatcher.1"), { InvalidArgumentError: sL } = _A, oL = $i;
Sf() === void 0 && Nf(new oL());
function Nf(e) {
  if (!e || typeof e.dispatch != "function")
    throw new sL("Argument agent must implement Agent");
  Object.defineProperty(globalThis, bf, {
    value: e,
    writable: !0,
    enumerable: !1,
    configurable: !1
  });
}
function Sf() {
  return globalThis[bf];
}
var an = {
  setGlobalDispatcher: Nf,
  getGlobalDispatcher: Sf
}, nL = class {
  constructor(A) {
    this.handler = A;
  }
  onConnect(...A) {
    return this.handler.onConnect(...A);
  }
  onError(...A) {
    return this.handler.onError(...A);
  }
  onUpgrade(...A) {
    return this.handler.onUpgrade(...A);
  }
  onHeaders(...A) {
    return this.handler.onHeaders(...A);
  }
  onData(...A) {
    return this.handler.onData(...A);
  }
  onComplete(...A) {
    return this.handler.onComplete(...A);
  }
  onBodySent(...A) {
    return this.handler.onBodySent(...A);
  }
}, mE, al;
function to() {
  if (al) return mE;
  al = 1;
  const { kHeadersList: e, kConstruct: A } = Ae, { kGuard: t } = Nr(), { kEnumerableProperty: s } = vA, {
    makeIterator: r,
    isValidHeaderName: o,
    isValidHeaderValue: n
  } = mt(), g = le, { webidl: i } = et(), E = bA, a = Symbol("headers map"), Q = Symbol("headers map sorted");
  function c(B) {
    return B === 10 || B === 13 || B === 9 || B === 32;
  }
  function h(B) {
    let l = 0, y = B.length;
    for (; y > l && c(B.charCodeAt(y - 1)); ) --y;
    for (; y > l && c(B.charCodeAt(l)); ) ++l;
    return l === 0 && y === B.length ? B : B.substring(l, y);
  }
  function u(B, l) {
    if (Array.isArray(l))
      for (let y = 0; y < l.length; ++y) {
        const d = l[y];
        if (d.length !== 2)
          throw i.errors.exception({
            header: "Headers constructor",
            message: `expected name/value pair to be length 2, found ${d.length}.`
          });
        I(B, d[0], d[1]);
      }
    else if (typeof l == "object" && l !== null) {
      const y = Object.keys(l);
      for (let d = 0; d < y.length; ++d)
        I(B, y[d], l[y[d]]);
    } else
      throw i.errors.conversionFailed({
        prefix: "Headers constructor",
        argument: "Argument 1",
        types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]
      });
  }
  function I(B, l, y) {
    if (y = h(y), o(l)) {
      if (!n(y))
        throw i.errors.invalidArgument({
          prefix: "Headers.append",
          value: y,
          type: "header value"
        });
    } else throw i.errors.invalidArgument({
      prefix: "Headers.append",
      value: l,
      type: "header name"
    });
    if (B[t] === "immutable")
      throw new TypeError("immutable");
    return B[t], B[e].append(l, y);
  }
  class C {
    constructor(l) {
      /** @type {[string, string][]|null} */
      og(this, "cookies", null);
      l instanceof C ? (this[a] = new Map(l[a]), this[Q] = l[Q], this.cookies = l.cookies === null ? null : [...l.cookies]) : (this[a] = new Map(l), this[Q] = null);
    }
    // https://fetch.spec.whatwg.org/#header-list-contains
    contains(l) {
      return l = l.toLowerCase(), this[a].has(l);
    }
    clear() {
      this[a].clear(), this[Q] = null, this.cookies = null;
    }
    // https://fetch.spec.whatwg.org/#concept-header-list-append
    append(l, y) {
      this[Q] = null;
      const d = l.toLowerCase(), p = this[a].get(d);
      if (p) {
        const R = d === "cookie" ? "; " : ", ";
        this[a].set(d, {
          name: p.name,
          value: `${p.value}${R}${y}`
        });
      } else
        this[a].set(d, { name: l, value: y });
      d === "set-cookie" && (this.cookies ?? (this.cookies = []), this.cookies.push(y));
    }
    // https://fetch.spec.whatwg.org/#concept-header-list-set
    set(l, y) {
      this[Q] = null;
      const d = l.toLowerCase();
      d === "set-cookie" && (this.cookies = [y]), this[a].set(d, { name: l, value: y });
    }
    // https://fetch.spec.whatwg.org/#concept-header-list-delete
    delete(l) {
      this[Q] = null, l = l.toLowerCase(), l === "set-cookie" && (this.cookies = null), this[a].delete(l);
    }
    // https://fetch.spec.whatwg.org/#concept-header-list-get
    get(l) {
      const y = this[a].get(l.toLowerCase());
      return y === void 0 ? null : y.value;
    }
    *[Symbol.iterator]() {
      for (const [l, { value: y }] of this[a])
        yield [l, y];
    }
    get entries() {
      const l = {};
      if (this[a].size)
        for (const { name: y, value: d } of this[a].values())
          l[y] = d;
      return l;
    }
  }
  class f {
    constructor(l = void 0) {
      l !== A && (this[e] = new C(), this[t] = "none", l !== void 0 && (l = i.converters.HeadersInit(l), u(this, l)));
    }
    // https://fetch.spec.whatwg.org/#dom-headers-append
    append(l, y) {
      return i.brandCheck(this, f), i.argumentLengthCheck(arguments, 2, { header: "Headers.append" }), l = i.converters.ByteString(l), y = i.converters.ByteString(y), I(this, l, y);
    }
    // https://fetch.spec.whatwg.org/#dom-headers-delete
    delete(l) {
      if (i.brandCheck(this, f), i.argumentLengthCheck(arguments, 1, { header: "Headers.delete" }), l = i.converters.ByteString(l), !o(l))
        throw i.errors.invalidArgument({
          prefix: "Headers.delete",
          value: l,
          type: "header name"
        });
      if (this[t] === "immutable")
        throw new TypeError("immutable");
      this[t], this[e].contains(l) && this[e].delete(l);
    }
    // https://fetch.spec.whatwg.org/#dom-headers-get
    get(l) {
      if (i.brandCheck(this, f), i.argumentLengthCheck(arguments, 1, { header: "Headers.get" }), l = i.converters.ByteString(l), !o(l))
        throw i.errors.invalidArgument({
          prefix: "Headers.get",
          value: l,
          type: "header name"
        });
      return this[e].get(l);
    }
    // https://fetch.spec.whatwg.org/#dom-headers-has
    has(l) {
      if (i.brandCheck(this, f), i.argumentLengthCheck(arguments, 1, { header: "Headers.has" }), l = i.converters.ByteString(l), !o(l))
        throw i.errors.invalidArgument({
          prefix: "Headers.has",
          value: l,
          type: "header name"
        });
      return this[e].contains(l);
    }
    // https://fetch.spec.whatwg.org/#dom-headers-set
    set(l, y) {
      if (i.brandCheck(this, f), i.argumentLengthCheck(arguments, 2, { header: "Headers.set" }), l = i.converters.ByteString(l), y = i.converters.ByteString(y), y = h(y), o(l)) {
        if (!n(y))
          throw i.errors.invalidArgument({
            prefix: "Headers.set",
            value: y,
            type: "header value"
          });
      } else throw i.errors.invalidArgument({
        prefix: "Headers.set",
        value: l,
        type: "header name"
      });
      if (this[t] === "immutable")
        throw new TypeError("immutable");
      this[t], this[e].set(l, y);
    }
    // https://fetch.spec.whatwg.org/#dom-headers-getsetcookie
    getSetCookie() {
      i.brandCheck(this, f);
      const l = this[e].cookies;
      return l ? [...l] : [];
    }
    // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine
    get [Q]() {
      if (this[e][Q])
        return this[e][Q];
      const l = [], y = [...this[e]].sort((p, R) => p[0] < R[0] ? -1 : 1), d = this[e].cookies;
      for (let p = 0; p < y.length; ++p) {
        const [R, D] = y[p];
        if (R === "set-cookie")
          for (let b = 0; b < d.length; ++b)
            l.push([R, d[b]]);
        else
          E(D !== null), l.push([R, D]);
      }
      return this[e][Q] = l, l;
    }
    keys() {
      if (i.brandCheck(this, f), this[t] === "immutable") {
        const l = this[Q];
        return r(
          () => l,
          "Headers",
          "key"
        );
      }
      return r(
        () => [...this[Q].values()],
        "Headers",
        "key"
      );
    }
    values() {
      if (i.brandCheck(this, f), this[t] === "immutable") {
        const l = this[Q];
        return r(
          () => l,
          "Headers",
          "value"
        );
      }
      return r(
        () => [...this[Q].values()],
        "Headers",
        "value"
      );
    }
    entries() {
      if (i.brandCheck(this, f), this[t] === "immutable") {
        const l = this[Q];
        return r(
          () => l,
          "Headers",
          "key+value"
        );
      }
      return r(
        () => [...this[Q].values()],
        "Headers",
        "key+value"
      );
    }
    /**
     * @param {(value: string, key: string, self: Headers) => void} callbackFn
     * @param {unknown} thisArg
     */
    forEach(l, y = globalThis) {
      if (i.brandCheck(this, f), i.argumentLengthCheck(arguments, 1, { header: "Headers.forEach" }), typeof l != "function")
        throw new TypeError(
          "Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'."
        );
      for (const [d, p] of this)
        l.apply(y, [p, d, this]);
    }
    [Symbol.for("nodejs.util.inspect.custom")]() {
      return i.brandCheck(this, f), this[e];
    }
  }
  return f.prototype[Symbol.iterator] = f.prototype.entries, Object.defineProperties(f.prototype, {
    append: s,
    delete: s,
    get: s,
    has: s,
    set: s,
    getSetCookie: s,
    keys: s,
    values: s,
    entries: s,
    forEach: s,
    [Symbol.iterator]: { enumerable: !1 },
    [Symbol.toStringTag]: {
      value: "Headers",
      configurable: !0
    },
    [g.inspect.custom]: {
      enumerable: !1
    }
  }), i.converters.HeadersInit = function(B) {
    if (i.util.Type(B) === "Object")
      return B[Symbol.iterator] ? i.converters["sequence<sequence<ByteString>>"](B) : i.converters["record<ByteString, ByteString>"](B);
    throw i.errors.conversionFailed({
      prefix: "Headers constructor",
      argument: "Argument 1",
      types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]
    });
  }, mE = {
    fill: u,
    Headers: f,
    HeadersList: C
  }, mE;
}
var kE, El;
function gc() {
  if (El) return kE;
  El = 1;
  const { Headers: e, HeadersList: A, fill: t } = to(), { extractBody: s, cloneBody: r, mixinBody: o } = Oi(), n = vA, { kEnumerableProperty: g } = n, {
    isValidReasonPhrase: i,
    isCancelled: E,
    isAborted: a,
    isBlobLike: Q,
    serializeJavascriptValueToJSONString: c,
    isErrorLike: h,
    isomorphicEncode: u
  } = mt(), {
    redirectStatusSet: I,
    nullBodyStatus: C,
    DOMException: f
  } = Bs(), { kState: B, kHeaders: l, kGuard: y, kRealm: d } = Nr(), { webidl: p } = et(), { FormData: R } = tc(), { getGlobalOrigin: D } = sn(), { URLSerializer: b } = Wt(), { kHeadersList: M, kConstruct: F } = Ae, z = bA, { types: U } = le, _ = globalThis.ReadableStream || Ge.ReadableStream, q = new TextEncoder("utf-8");
  class X {
    // Creates network error Response.
    static error() {
      const k = { settingsObject: {} }, N = new X();
      return N[B] = P(), N[d] = k, N[l][M] = N[B].headersList, N[l][y] = "immutable", N[l][d] = k, N;
    }
    // https://fetch.spec.whatwg.org/#dom-response-json
    static json(k, N = {}) {
      p.argumentLengthCheck(arguments, 1, { header: "Response.json" }), N !== null && (N = p.converters.ResponseInit(N));
      const O = q.encode(
        c(k)
      ), Z = s(O), x = { settingsObject: {} }, H = new X();
      return H[d] = x, H[l][y] = "response", H[l][d] = x, Y(H, N, { body: Z[0], type: "application/json" }), H;
    }
    // Creates a redirect Response that redirects to url with status status.
    static redirect(k, N = 302) {
      const O = { settingsObject: {} };
      p.argumentLengthCheck(arguments, 1, { header: "Response.redirect" }), k = p.converters.USVString(k), N = p.converters["unsigned short"](N);
      let Z;
      try {
        Z = new URL(k, D());
      } catch (iA) {
        throw Object.assign(new TypeError("Failed to parse URL from " + k), {
          cause: iA
        });
      }
      if (!I.has(N))
        throw new RangeError("Invalid status code " + N);
      const x = new X();
      x[d] = O, x[l][y] = "immutable", x[l][d] = O, x[B].status = N;
      const H = u(b(Z));
      return x[B].headersList.append("location", H), x;
    }
    // https://fetch.spec.whatwg.org/#dom-response
    constructor(k = null, N = {}) {
      k !== null && (k = p.converters.BodyInit(k)), N = p.converters.ResponseInit(N), this[d] = { settingsObject: {} }, this[B] = K({}), this[l] = new e(F), this[l][y] = "response", this[l][M] = this[B].headersList, this[l][d] = this[d];
      let O = null;
      if (k != null) {
        const [Z, x] = s(k);
        O = { body: Z, type: x };
      }
      Y(this, N, O);
    }
    // Returns response’s type, e.g., "cors".
    get type() {
      return p.brandCheck(this, X), this[B].type;
    }
    // Returns response’s URL, if it has one; otherwise the empty string.
    get url() {
      p.brandCheck(this, X);
      const k = this[B].urlList, N = k[k.length - 1] ?? null;
      return N === null ? "" : b(N, !0);
    }
    // Returns whether response was obtained through a redirect.
    get redirected() {
      return p.brandCheck(this, X), this[B].urlList.length > 1;
    }
    // Returns response’s status.
    get status() {
      return p.brandCheck(this, X), this[B].status;
    }
    // Returns whether response’s status is an ok status.
    get ok() {
      return p.brandCheck(this, X), this[B].status >= 200 && this[B].status <= 299;
    }
    // Returns response’s status message.
    get statusText() {
      return p.brandCheck(this, X), this[B].statusText;
    }
    // Returns response’s headers as Headers.
    get headers() {
      return p.brandCheck(this, X), this[l];
    }
    get body() {
      return p.brandCheck(this, X), this[B].body ? this[B].body.stream : null;
    }
    get bodyUsed() {
      return p.brandCheck(this, X), !!this[B].body && n.isDisturbed(this[B].body.stream);
    }
    // Returns a clone of response.
    clone() {
      if (p.brandCheck(this, X), this.bodyUsed || this.body && this.body.locked)
        throw p.errors.exception({
          header: "Response.clone",
          message: "Body has already been consumed."
        });
      const k = nA(this[B]), N = new X();
      return N[B] = k, N[d] = this[d], N[l][M] = k.headersList, N[l][y] = this[l][y], N[l][d] = this[l][d], N;
    }
  }
  o(X), Object.defineProperties(X.prototype, {
    type: g,
    url: g,
    status: g,
    ok: g,
    redirected: g,
    statusText: g,
    headers: g,
    clone: g,
    body: g,
    bodyUsed: g,
    [Symbol.toStringTag]: {
      value: "Response",
      configurable: !0
    }
  }), Object.defineProperties(X, {
    json: g,
    redirect: g,
    error: g
  });
  function nA(w) {
    if (w.internalResponse)
      return eA(
        nA(w.internalResponse),
        w.type
      );
    const k = K({ ...w, body: null });
    return w.body != null && (k.body = r(w.body)), k;
  }
  function K(w) {
    return {
      aborted: !1,
      rangeRequested: !1,
      timingAllowPassed: !1,
      requestIncludesCredentials: !1,
      type: "default",
      status: 200,
      timingInfo: null,
      cacheState: "",
      statusText: "",
      ...w,
      headersList: w.headersList ? new A(w.headersList) : new A(),
      urlList: w.urlList ? [...w.urlList] : []
    };
  }
  function P(w) {
    const k = h(w);
    return K({
      type: "error",
      status: 0,
      error: k ? w : new Error(w && String(w)),
      aborted: w && w.name === "AbortError"
    });
  }
  function L(w, k) {
    return k = {
      internalResponse: w,
      ...k
    }, new Proxy(w, {
      get(N, O) {
        return O in k ? k[O] : N[O];
      },
      set(N, O, Z) {
        return z(!(O in k)), N[O] = Z, !0;
      }
    });
  }
  function eA(w, k) {
    if (k === "basic")
      return L(w, {
        type: "basic",
        headersList: w.headersList
      });
    if (k === "cors")
      return L(w, {
        type: "cors",
        headersList: w.headersList
      });
    if (k === "opaque")
      return L(w, {
        type: "opaque",
        urlList: Object.freeze([]),
        status: 0,
        statusText: "",
        body: null
      });
    if (k === "opaqueredirect")
      return L(w, {
        type: "opaqueredirect",
        status: 0,
        statusText: "",
        headersList: [],
        body: null
      });
    z(!1);
  }
  function v(w, k = null) {
    return z(E(w)), a(w) ? P(Object.assign(new f("The operation was aborted.", "AbortError"), { cause: k })) : P(Object.assign(new f("Request was cancelled."), { cause: k }));
  }
  function Y(w, k, N) {
    if (k.status !== null && (k.status < 200 || k.status > 599))
      throw new RangeError('init["status"] must be in the range of 200 to 599, inclusive.');
    if ("statusText" in k && k.statusText != null && !i(String(k.statusText)))
      throw new TypeError("Invalid statusText");
    if ("status" in k && k.status != null && (w[B].status = k.status), "statusText" in k && k.statusText != null && (w[B].statusText = k.statusText), "headers" in k && k.headers != null && t(w[l], k.headers), N) {
      if (C.includes(w.status))
        throw p.errors.exception({
          header: "Response constructor",
          message: "Invalid response status code " + w.status
        });
      w[B].body = N.body, N.type != null && !w[B].headersList.contains("Content-Type") && w[B].headersList.append("content-type", N.type);
    }
  }
  return p.converters.ReadableStream = p.interfaceConverter(
    _
  ), p.converters.FormData = p.interfaceConverter(
    R
  ), p.converters.URLSearchParams = p.interfaceConverter(
    URLSearchParams
  ), p.converters.XMLHttpRequestBodyInit = function(w) {
    return typeof w == "string" ? p.converters.USVString(w) : Q(w) ? p.converters.Blob(w, { strict: !1 }) : U.isArrayBuffer(w) || U.isTypedArray(w) || U.isDataView(w) ? p.converters.BufferSource(w) : n.isFormDataLike(w) ? p.converters.FormData(w, { strict: !1 }) : w instanceof URLSearchParams ? p.converters.URLSearchParams(w) : p.converters.DOMString(w);
  }, p.converters.BodyInit = function(w) {
    return w instanceof _ ? p.converters.ReadableStream(w) : w != null && w[Symbol.asyncIterator] ? w : p.converters.XMLHttpRequestBodyInit(w);
  }, p.converters.ResponseInit = p.dictionaryConverter([
    {
      key: "status",
      converter: p.converters["unsigned short"],
      defaultValue: 200
    },
    {
      key: "statusText",
      converter: p.converters.ByteString,
      defaultValue: ""
    },
    {
      key: "headers",
      converter: p.converters.HeadersInit
    }
  ]), kE = {
    makeNetworkError: P,
    makeResponse: K,
    makeAppropriateNetworkError: v,
    filterResponse: eA,
    Response: X,
    cloneResponse: nA
  }, kE;
}
var FE, Ql;
function Ki() {
  if (Ql) return FE;
  Ql = 1;
  const { extractBody: e, mixinBody: A, cloneBody: t } = Oi(), { Headers: s, fill: r, HeadersList: o } = to(), { FinalizationRegistry: n } = ef(), g = vA, {
    isValidHTTPToken: i,
    sameOrigin: E,
    normalizeMethod: a,
    makePolicyContainer: Q,
    normalizeMethodRecord: c
  } = mt(), {
    forbiddenMethodsSet: h,
    corsSafeListedMethodsSet: u,
    referrerPolicy: I,
    requestRedirect: C,
    requestMode: f,
    requestCredentials: B,
    requestCache: l,
    requestDuplex: y
  } = Bs(), { kEnumerableProperty: d } = g, { kHeaders: p, kSignal: R, kState: D, kGuard: b, kRealm: M } = Nr(), { webidl: F } = et(), { getGlobalOrigin: z } = sn(), { URLSerializer: U } = Wt(), { kHeadersList: _, kConstruct: q } = Ae, X = bA, { getMaxListeners: nA, setMaxListeners: K, getEventListeners: P, defaultMaxListeners: L } = xt;
  let eA = globalThis.TransformStream;
  const v = Symbol("abortController"), Y = new n(({ signal: O, abort: Z }) => {
    O.removeEventListener("abort", Z);
  });
  class w {
    // https://fetch.spec.whatwg.org/#dom-request
    constructor(Z, x = {}) {
      var $e, W;
      if (Z === q)
        return;
      F.argumentLengthCheck(arguments, 1, { header: "Request constructor" }), Z = F.converters.RequestInfo(Z), x = F.converters.RequestInit(x), this[M] = {
        settingsObject: {
          baseUrl: z(),
          get origin() {
            var $;
            return ($ = this.baseUrl) == null ? void 0 : $.origin;
          },
          policyContainer: Q()
        }
      };
      let H = null, iA = null;
      const IA = this[M].settingsObject.baseUrl;
      let EA = null;
      if (typeof Z == "string") {
        let $;
        try {
          $ = new URL(Z, IA);
        } catch (oA) {
          throw new TypeError("Failed to parse URL from " + Z, { cause: oA });
        }
        if ($.username || $.password)
          throw new TypeError(
            "Request cannot be constructed from a URL that includes credentials: " + Z
          );
        H = k({ urlList: [$] }), iA = "cors";
      } else
        X(Z instanceof w), H = Z[D], EA = Z[R];
      const MA = this[M].settingsObject.origin;
      let kA = "client";
      if (((W = ($e = H.window) == null ? void 0 : $e.constructor) == null ? void 0 : W.name) === "EnvironmentSettingsObject" && E(H.window, MA) && (kA = H.window), x.window != null)
        throw new TypeError(`'window' option '${kA}' must be null`);
      "window" in x && (kA = "no-window"), H = k({
        // URL request’s URL.
        // undici implementation note: this is set as the first item in request's urlList in makeRequest
        // method request’s method.
        method: H.method,
        // header list A copy of request’s header list.
        // undici implementation note: headersList is cloned in makeRequest
        headersList: H.headersList,
        // unsafe-request flag Set.
        unsafeRequest: H.unsafeRequest,
        // client This’s relevant settings object.
        client: this[M].settingsObject,
        // window window.
        window: kA,
        // priority request’s priority.
        priority: H.priority,
        // origin request’s origin. The propagation of the origin is only significant for navigation requests
        // being handled by a service worker. In this scenario a request can have an origin that is different
        // from the current client.
        origin: H.origin,
        // referrer request’s referrer.
        referrer: H.referrer,
        // referrer policy request’s referrer policy.
        referrerPolicy: H.referrerPolicy,
        // mode request’s mode.
        mode: H.mode,
        // credentials mode request’s credentials mode.
        credentials: H.credentials,
        // cache mode request’s cache mode.
        cache: H.cache,
        // redirect mode request’s redirect mode.
        redirect: H.redirect,
        // integrity metadata request’s integrity metadata.
        integrity: H.integrity,
        // keepalive request’s keepalive.
        keepalive: H.keepalive,
        // reload-navigation flag request’s reload-navigation flag.
        reloadNavigation: H.reloadNavigation,
        // history-navigation flag request’s history-navigation flag.
        historyNavigation: H.historyNavigation,
        // URL list A clone of request’s URL list.
        urlList: [...H.urlList]
      });
      const NA = Object.keys(x).length !== 0;
      if (NA && (H.mode === "navigate" && (H.mode = "same-origin"), H.reloadNavigation = !1, H.historyNavigation = !1, H.origin = "client", H.referrer = "client", H.referrerPolicy = "", H.url = H.urlList[H.urlList.length - 1], H.urlList = [H.url]), x.referrer !== void 0) {
        const $ = x.referrer;
        if ($ === "")
          H.referrer = "no-referrer";
        else {
          let oA;
          try {
            oA = new URL($, IA);
          } catch (hA) {
            throw new TypeError(`Referrer "${$}" is not a valid URL.`, { cause: hA });
          }
          oA.protocol === "about:" && oA.hostname === "client" || MA && !E(oA, this[M].settingsObject.baseUrl) ? H.referrer = "client" : H.referrer = oA;
        }
      }
      x.referrerPolicy !== void 0 && (H.referrerPolicy = x.referrerPolicy);
      let DA;
      if (x.mode !== void 0 ? DA = x.mode : DA = iA, DA === "navigate")
        throw F.errors.exception({
          header: "Request constructor",
          message: "invalid request mode navigate."
        });
      if (DA != null && (H.mode = DA), x.credentials !== void 0 && (H.credentials = x.credentials), x.cache !== void 0 && (H.cache = x.cache), H.cache === "only-if-cached" && H.mode !== "same-origin")
        throw new TypeError(
          "'only-if-cached' can be set only with 'same-origin' mode"
        );
      if (x.redirect !== void 0 && (H.redirect = x.redirect), x.integrity != null && (H.integrity = String(x.integrity)), x.keepalive !== void 0 && (H.keepalive = !!x.keepalive), x.method !== void 0) {
        let $ = x.method;
        if (!i($))
          throw new TypeError(`'${$}' is not a valid HTTP method.`);
        if (h.has($.toUpperCase()))
          throw new TypeError(`'${$}' HTTP method is unsupported.`);
        $ = c[$] ?? a($), H.method = $;
      }
      x.signal !== void 0 && (EA = x.signal), this[D] = H;
      const pA = new AbortController();
      if (this[R] = pA.signal, this[R][M] = this[M], EA != null) {
        if (!EA || typeof EA.aborted != "boolean" || typeof EA.addEventListener != "function")
          throw new TypeError(
            "Failed to construct 'Request': member signal is not of type AbortSignal."
          );
        if (EA.aborted)
          pA.abort(EA.reason);
        else {
          this[v] = pA;
          const $ = new WeakRef(pA), oA = function() {
            const hA = $.deref();
            hA !== void 0 && hA.abort(this.reason);
          };
          try {
            (typeof nA == "function" && nA(EA) === L || P(EA, "abort").length >= L) && K(100, EA);
          } catch {
          }
          g.addAbortListener(EA, oA), Y.register(pA, { signal: EA, abort: oA });
        }
      }
      if (this[p] = new s(q), this[p][_] = H.headersList, this[p][b] = "request", this[p][M] = this[M], DA === "no-cors") {
        if (!u.has(H.method))
          throw new TypeError(
            `'${H.method} is unsupported in no-cors mode.`
          );
        this[p][b] = "request-no-cors";
      }
      if (NA) {
        const $ = this[p][_], oA = x.headers !== void 0 ? x.headers : new o($);
        if ($.clear(), oA instanceof o) {
          for (const [hA, G] of oA)
            $.append(hA, G);
          $.cookies = oA.cookies;
        } else
          r(this[p], oA);
      }
      const BA = Z instanceof w ? Z[D].body : null;
      if ((x.body != null || BA != null) && (H.method === "GET" || H.method === "HEAD"))
        throw new TypeError("Request with GET/HEAD method cannot have body.");
      let yA = null;
      if (x.body != null) {
        const [$, oA] = e(
          x.body,
          H.keepalive
        );
        yA = $, oA && !this[p][_].contains("content-type") && this[p].append("content-type", oA);
      }
      const GA = yA ?? BA;
      if (GA != null && GA.source == null) {
        if (yA != null && x.duplex == null)
          throw new TypeError("RequestInit: duplex option is required when sending a body.");
        if (H.mode !== "same-origin" && H.mode !== "cors")
          throw new TypeError(
            'If request is made from ReadableStream, mode should be "same-origin" or "cors"'
          );
        H.useCORSPreflightFlag = !0;
      }
      let Ce = GA;
      if (yA == null && BA != null) {
        if (g.isDisturbed(BA.stream) || BA.stream.locked)
          throw new TypeError(
            "Cannot construct a Request with a Request object that has already been used."
          );
        eA || (eA = Ge.TransformStream);
        const $ = new eA();
        BA.stream.pipeThrough($), Ce = {
          source: BA.source,
          length: BA.length,
          stream: $.readable
        };
      }
      this[D].body = Ce;
    }
    // Returns request’s HTTP method, which is "GET" by default.
    get method() {
      return F.brandCheck(this, w), this[D].method;
    }
    // Returns the URL of request as a string.
    get url() {
      return F.brandCheck(this, w), U(this[D].url);
    }
    // Returns a Headers object consisting of the headers associated with request.
    // Note that headers added in the network layer by the user agent will not
    // be accounted for in this object, e.g., the "Host" header.
    get headers() {
      return F.brandCheck(this, w), this[p];
    }
    // Returns the kind of resource requested by request, e.g., "document"
    // or "script".
    get destination() {
      return F.brandCheck(this, w), this[D].destination;
    }
    // Returns the referrer of request. Its value can be a same-origin URL if
    // explicitly set in init, the empty string to indicate no referrer, and
    // "about:client" when defaulting to the global’s default. This is used
    // during fetching to determine the value of the `Referer` header of the
    // request being made.
    get referrer() {
      return F.brandCheck(this, w), this[D].referrer === "no-referrer" ? "" : this[D].referrer === "client" ? "about:client" : this[D].referrer.toString();
    }
    // Returns the referrer policy associated with request.
    // This is used during fetching to compute the value of the request’s
    // referrer.
    get referrerPolicy() {
      return F.brandCheck(this, w), this[D].referrerPolicy;
    }
    // Returns the mode associated with request, which is a string indicating
    // whether the request will use CORS, or will be restricted to same-origin
    // URLs.
    get mode() {
      return F.brandCheck(this, w), this[D].mode;
    }
    // Returns the credentials mode associated with request,
    // which is a string indicating whether credentials will be sent with the
    // request always, never, or only when sent to a same-origin URL.
    get credentials() {
      return this[D].credentials;
    }
    // Returns the cache mode associated with request,
    // which is a string indicating how the request will
    // interact with the browser’s cache when fetching.
    get cache() {
      return F.brandCheck(this, w), this[D].cache;
    }
    // Returns the redirect mode associated with request,
    // which is a string indicating how redirects for the
    // request will be handled during fetching. A request
    // will follow redirects by default.
    get redirect() {
      return F.brandCheck(this, w), this[D].redirect;
    }
    // Returns request’s subresource integrity metadata, which is a
    // cryptographic hash of the resource being fetched. Its value
    // consists of multiple hashes separated by whitespace. [SRI]
    get integrity() {
      return F.brandCheck(this, w), this[D].integrity;
    }
    // Returns a boolean indicating whether or not request can outlive the
    // global in which it was created.
    get keepalive() {
      return F.brandCheck(this, w), this[D].keepalive;
    }
    // Returns a boolean indicating whether or not request is for a reload
    // navigation.
    get isReloadNavigation() {
      return F.brandCheck(this, w), this[D].reloadNavigation;
    }
    // Returns a boolean indicating whether or not request is for a history
    // navigation (a.k.a. back-foward navigation).
    get isHistoryNavigation() {
      return F.brandCheck(this, w), this[D].historyNavigation;
    }
    // Returns the signal associated with request, which is an AbortSignal
    // object indicating whether or not request has been aborted, and its
    // abort event handler.
    get signal() {
      return F.brandCheck(this, w), this[R];
    }
    get body() {
      return F.brandCheck(this, w), this[D].body ? this[D].body.stream : null;
    }
    get bodyUsed() {
      return F.brandCheck(this, w), !!this[D].body && g.isDisturbed(this[D].body.stream);
    }
    get duplex() {
      return F.brandCheck(this, w), "half";
    }
    // Returns a clone of request.
    clone() {
      var iA;
      if (F.brandCheck(this, w), this.bodyUsed || (iA = this.body) != null && iA.locked)
        throw new TypeError("unusable");
      const Z = N(this[D]), x = new w(q);
      x[D] = Z, x[M] = this[M], x[p] = new s(q), x[p][_] = Z.headersList, x[p][b] = this[p][b], x[p][M] = this[p][M];
      const H = new AbortController();
      return this.signal.aborted ? H.abort(this.signal.reason) : g.addAbortListener(
        this.signal,
        () => {
          H.abort(this.signal.reason);
        }
      ), x[R] = H.signal, x;
    }
  }
  A(w);
  function k(O) {
    const Z = {
      method: "GET",
      localURLsOnly: !1,
      unsafeRequest: !1,
      body: null,
      client: null,
      reservedClient: null,
      replacesClientId: "",
      window: "client",
      keepalive: !1,
      serviceWorkers: "all",
      initiator: "",
      destination: "",
      priority: null,
      origin: "client",
      policyContainer: "client",
      referrer: "client",
      referrerPolicy: "",
      mode: "no-cors",
      useCORSPreflightFlag: !1,
      credentials: "same-origin",
      useCredentials: !1,
      cache: "default",
      redirect: "follow",
      integrity: "",
      cryptoGraphicsNonceMetadata: "",
      parserMetadata: "",
      reloadNavigation: !1,
      historyNavigation: !1,
      userActivation: !1,
      taintedOrigin: !1,
      redirectCount: 0,
      responseTainting: "basic",
      preventNoCacheCacheControlHeaderModification: !1,
      done: !1,
      timingAllowFailed: !1,
      ...O,
      headersList: O.headersList ? new o(O.headersList) : new o()
    };
    return Z.url = Z.urlList[0], Z;
  }
  function N(O) {
    const Z = k({ ...O, body: null });
    return O.body != null && (Z.body = t(O.body)), Z;
  }
  return Object.defineProperties(w.prototype, {
    method: d,
    url: d,
    headers: d,
    redirect: d,
    clone: d,
    signal: d,
    duplex: d,
    destination: d,
    body: d,
    bodyUsed: d,
    isHistoryNavigation: d,
    isReloadNavigation: d,
    keepalive: d,
    integrity: d,
    cache: d,
    credentials: d,
    attribute: d,
    referrerPolicy: d,
    referrer: d,
    mode: d,
    [Symbol.toStringTag]: {
      value: "Request",
      configurable: !0
    }
  }), F.converters.Request = F.interfaceConverter(
    w
  ), F.converters.RequestInfo = function(O) {
    return typeof O == "string" ? F.converters.USVString(O) : O instanceof w ? F.converters.Request(O) : F.converters.USVString(O);
  }, F.converters.AbortSignal = F.interfaceConverter(
    AbortSignal
  ), F.converters.RequestInit = F.dictionaryConverter([
    {
      key: "method",
      converter: F.converters.ByteString
    },
    {
      key: "headers",
      converter: F.converters.HeadersInit
    },
    {
      key: "body",
      converter: F.nullableConverter(
        F.converters.BodyInit
      )
    },
    {
      key: "referrer",
      converter: F.converters.USVString
    },
    {
      key: "referrerPolicy",
      converter: F.converters.DOMString,
      // https://w3c.github.io/webappsec-referrer-policy/#referrer-policy
      allowedValues: I
    },
    {
      key: "mode",
      converter: F.converters.DOMString,
      // https://fetch.spec.whatwg.org/#concept-request-mode
      allowedValues: f
    },
    {
      key: "credentials",
      converter: F.converters.DOMString,
      // https://fetch.spec.whatwg.org/#requestcredentials
      allowedValues: B
    },
    {
      key: "cache",
      converter: F.converters.DOMString,
      // https://fetch.spec.whatwg.org/#requestcache
      allowedValues: l
    },
    {
      key: "redirect",
      converter: F.converters.DOMString,
      // https://fetch.spec.whatwg.org/#requestredirect
      allowedValues: C
    },
    {
      key: "integrity",
      converter: F.converters.DOMString
    },
    {
      key: "keepalive",
      converter: F.converters.boolean
    },
    {
      key: "signal",
      converter: F.nullableConverter(
        (O) => F.converters.AbortSignal(
          O,
          { strict: !1 }
        )
      )
    },
    {
      key: "window",
      converter: F.converters.any
    },
    {
      key: "duplex",
      converter: F.converters.DOMString,
      allowedValues: y
    }
  ]), FE = { Request: w, makeRequest: k }, FE;
}
var bE, cl;
function ac() {
  if (cl) return bE;
  cl = 1;
  const {
    Response: e,
    makeNetworkError: A,
    makeAppropriateNetworkError: t,
    filterResponse: s,
    makeResponse: r
  } = gc(), { Headers: o } = to(), { Request: n, makeRequest: g } = Ki(), i = Kl, {
    bytesMatch: E,
    makePolicyContainer: a,
    clonePolicyContainer: Q,
    requestBadPort: c,
    TAOCheck: h,
    appendRequestOriginHeader: u,
    responseLocationURL: I,
    requestCurrentURL: C,
    setRequestReferrerPolicyOnRedirect: f,
    tryUpgradeRequestToAPotentiallyTrustworthyURL: B,
    createOpaqueTimingInfo: l,
    appendFetchMetadata: y,
    corsCheck: d,
    crossOriginResourcePolicyCheck: p,
    determineRequestsReferrer: R,
    coarsenedSharedCurrentTime: D,
    createDeferredPromise: b,
    isBlobLike: M,
    sameOrigin: F,
    isCancelled: z,
    isAborted: U,
    isErrorLike: _,
    fullyReadBody: q,
    readableStreamClose: X,
    isomorphicEncode: nA,
    urlIsLocal: K,
    urlIsHttpHttpsScheme: P,
    urlHasHttpsScheme: L
  } = mt(), { kState: eA, kHeaders: v, kGuard: Y, kRealm: w } = Nr(), k = bA, { safelyExtractBody: N } = Oi(), {
    redirectStatusSet: O,
    nullBodyStatus: Z,
    safeMethodsSet: x,
    requestBodyHeader: H,
    subresourceSet: iA,
    DOMException: IA
  } = Bs(), { kHeadersList: EA } = Ae, MA = xt, { Readable: kA, pipeline: NA } = Ye, { addAbortListener: DA, isErrored: pA, isReadable: BA, nodeMajor: yA, nodeMinor: GA } = vA, { dataURLProcessor: Ce, serializeAMimeType: $e } = Wt(), { TransformStream: W } = Ge, { getGlobalDispatcher: $ } = an, { webidl: oA } = et(), { STATUS_CODES: hA } = Vt, G = ["GET", "HEAD"];
  let AA, sA = globalThis.ReadableStream;
  class CA extends MA {
    constructor(j) {
      super(), this.dispatcher = j, this.connection = null, this.dump = !1, this.state = "ongoing", this.setMaxListeners(21);
    }
    terminate(j) {
      var T;
      this.state === "ongoing" && (this.state = "terminated", (T = this.connection) == null || T.destroy(j), this.emit("terminated", j));
    }
    // https://fetch.spec.whatwg.org/#fetch-controller-abort
    abort(j) {
      var T;
      this.state === "ongoing" && (this.state = "aborted", j || (j = new IA("The operation was aborted.", "AbortError")), this.serializedAbortReason = j, (T = this.connection) == null || T.destroy(j), this.emit("terminated", j));
    }
  }
  function RA(m, j = {}) {
    var aA;
    oA.argumentLengthCheck(arguments, 1, { header: "globalThis.fetch" });
    const T = b();
    let J;
    try {
      J = new n(m, j);
    } catch (lA) {
      return T.reject(lA), T.promise;
    }
    const tA = J[eA];
    if (J.signal.aborted)
      return ye(T, tA, null, J.signal.reason), T.promise;
    const V = tA.client.globalObject;
    ((aA = V == null ? void 0 : V.constructor) == null ? void 0 : aA.name) === "ServiceWorkerGlobalScope" && (tA.serviceWorkers = "none");
    let gA = null;
    const mA = null;
    let xA = !1, FA = null;
    return DA(
      J.signal,
      () => {
        xA = !0, k(FA != null), FA.abort(J.signal.reason), ye(T, tA, gA, J.signal.reason);
      }
    ), FA = we({
      request: tA,
      processResponseEndOfBody: (lA) => HA(lA, "fetch"),
      processResponse: (lA) => {
        if (xA)
          return Promise.resolve();
        if (lA.aborted)
          return ye(T, tA, gA, FA.serializedAbortReason), Promise.resolve();
        if (lA.type === "error")
          return T.reject(
            Object.assign(new TypeError("fetch failed"), { cause: lA.error })
          ), Promise.resolve();
        gA = new e(), gA[eA] = lA, gA[w] = mA, gA[v][EA] = lA.headersList, gA[v][Y] = "immutable", gA[v][w] = mA, T.resolve(gA);
      },
      dispatcher: j.dispatcher ?? $()
      // undici
    }), T.promise;
  }
  function HA(m, j = "other") {
    var V;
    if (m.type === "error" && m.aborted || !((V = m.urlList) != null && V.length))
      return;
    const T = m.urlList[0];
    let J = m.timingInfo, tA = m.cacheState;
    P(T) && J !== null && (m.timingAllowPassed || (J = l({
      startTime: J.startTime
    }), tA = ""), J.endTime = D(), m.timingInfo = J, $A(
      J,
      T,
      j,
      globalThis,
      tA
    ));
  }
  function $A(m, j, T, J, tA) {
    (yA > 18 || yA === 18 && GA >= 2) && performance.markResourceTiming(m, j.href, T, J, tA);
  }
  function ye(m, j, T, J) {
    var V, gA;
    if (J || (J = new IA("The operation was aborted.", "AbortError")), m.reject(J), j.body != null && BA((V = j.body) == null ? void 0 : V.stream) && j.body.stream.cancel(J).catch((mA) => {
      if (mA.code !== "ERR_INVALID_STATE")
        throw mA;
    }), T == null)
      return;
    const tA = T[eA];
    tA.body != null && BA((gA = tA.body) == null ? void 0 : gA.stream) && tA.body.stream.cancel(J).catch((mA) => {
      if (mA.code !== "ERR_INVALID_STATE")
        throw mA;
    });
  }
  function we({
    request: m,
    processRequestBodyChunkLength: j,
    processRequestEndOfBody: T,
    processResponse: J,
    processResponseEndOfBody: tA,
    processResponseConsumeBody: V,
    useParallelQueue: gA = !1,
    dispatcher: mA
    // undici
  }) {
    var lA, OA, SA, ge;
    let xA = null, FA = !1;
    m.client != null && (xA = m.client.globalObject, FA = m.client.crossOriginIsolatedCapability);
    const De = D(FA), qt = l({
      startTime: De
    }), aA = {
      controller: new CA(mA),
      request: m,
      timingInfo: qt,
      processRequestBodyChunkLength: j,
      processRequestEndOfBody: T,
      processResponse: J,
      processResponseConsumeBody: V,
      processResponseEndOfBody: tA,
      taskDestination: xA,
      crossOriginIsolatedCapability: FA
    };
    return k(!m.body || m.body.stream), m.window === "client" && (m.window = ((SA = (OA = (lA = m.client) == null ? void 0 : lA.globalObject) == null ? void 0 : OA.constructor) == null ? void 0 : SA.name) === "Window" ? m.client : "no-window"), m.origin === "client" && (m.origin = (ge = m.client) == null ? void 0 : ge.origin), m.policyContainer === "client" && (m.client != null ? m.policyContainer = Q(
      m.client.policyContainer
    ) : m.policyContainer = a()), m.headersList.contains("accept") || m.headersList.append("accept", "*/*"), m.headersList.contains("accept-language") || m.headersList.append("accept-language", "*"), m.priority, iA.has(m.destination), Sr(aA).catch((wA) => {
      aA.controller.terminate(wA);
    }), aA.controller;
  }
  async function Sr(m, j = !1) {
    const T = m.request;
    let J = null;
    if (T.localURLsOnly && !K(C(T)) && (J = A("local URLs only")), B(T), c(T) === "blocked" && (J = A("bad port")), T.referrerPolicy === "" && (T.referrerPolicy = T.policyContainer.referrerPolicy), T.referrer !== "no-referrer" && (T.referrer = R(T)), J === null && (J = await (async () => {
      const V = C(T);
      return (
        // - request’s current URL’s origin is same origin with request’s origin,
        //   and request’s response tainting is "basic"
        F(V, T.url) && T.responseTainting === "basic" || // request’s current URL’s scheme is "data"
        V.protocol === "data:" || // - request’s mode is "navigate" or "websocket"
        T.mode === "navigate" || T.mode === "websocket" ? (T.responseTainting = "basic", await Ur(m)) : T.mode === "same-origin" ? A('request mode cannot be "same-origin"') : T.mode === "no-cors" ? T.redirect !== "follow" ? A(
          'redirect mode cannot be "follow" for "no-cors" request'
        ) : (T.responseTainting = "opaque", await Ur(m)) : P(C(T)) ? (T.responseTainting = "cors", await oo(m)) : A("URL scheme must be a HTTP(S) scheme")
      );
    })()), j)
      return J;
    J.status !== 0 && !J.internalResponse && (T.responseTainting, T.responseTainting === "basic" ? J = s(J, "basic") : T.responseTainting === "cors" ? J = s(J, "cors") : T.responseTainting === "opaque" ? J = s(J, "opaque") : k(!1));
    let tA = J.status === 0 ? J : J.internalResponse;
    if (tA.urlList.length === 0 && tA.urlList.push(...T.urlList), T.timingAllowFailed || (J.timingAllowPassed = !0), J.type === "opaque" && tA.status === 206 && tA.rangeRequested && !T.headers.contains("range") && (J = tA = A()), J.status !== 0 && (T.method === "HEAD" || T.method === "CONNECT" || Z.includes(tA.status)) && (tA.body = null, m.controller.dump = !0), T.integrity) {
      const V = (mA) => Lr(m, A(mA));
      if (T.responseTainting === "opaque" || J.body == null) {
        V(J.error);
        return;
      }
      const gA = (mA) => {
        if (!E(mA, T.integrity)) {
          V("integrity mismatch");
          return;
        }
        J.body = N(mA)[0], Lr(m, J);
      };
      await q(J.body, gA, V);
    } else
      Lr(m, J);
  }
  function Ur(m) {
    if (z(m) && m.request.redirectCount === 0)
      return Promise.resolve(t(m));
    const { request: j } = m, { protocol: T } = C(j);
    switch (T) {
      case "about:":
        return Promise.resolve(A("about scheme is not supported"));
      case "blob:": {
        AA || (AA = ze.resolveObjectURL);
        const J = C(j);
        if (J.search.length !== 0)
          return Promise.resolve(A("NetworkError when attempting to fetch resource."));
        const tA = AA(J.toString());
        if (j.method !== "GET" || !M(tA))
          return Promise.resolve(A("invalid method"));
        const V = N(tA), gA = V[0], mA = nA(`${gA.length}`), xA = V[1] ?? "", FA = r({
          statusText: "OK",
          headersList: [
            ["content-length", { name: "Content-Length", value: mA }],
            ["content-type", { name: "Content-Type", value: xA }]
          ]
        });
        return FA.body = gA, Promise.resolve(FA);
      }
      case "data:": {
        const J = C(j), tA = Ce(J);
        if (tA === "failure")
          return Promise.resolve(A("failed to fetch the data URL"));
        const V = $e(tA.mimeType);
        return Promise.resolve(r({
          statusText: "OK",
          headersList: [
            ["content-type", { name: "Content-Type", value: V }]
          ],
          body: N(tA.body)[0]
        }));
      }
      case "file:":
        return Promise.resolve(A("not implemented... yet..."));
      case "http:":
      case "https:":
        return oo(m).catch((J) => A(J));
      default:
        return Promise.resolve(A("unknown scheme"));
    }
  }
  function eg(m, j) {
    m.request.done = !0, m.processResponseDone != null && queueMicrotask(() => m.processResponseDone(j));
  }
  function Lr(m, j) {
    j.type === "error" && (j.urlList = [m.request.urlList[0]], j.timingInfo = l({
      startTime: m.timingInfo.startTime
    }));
    const T = () => {
      m.request.done = !0, m.processResponseEndOfBody != null && queueMicrotask(() => m.processResponseEndOfBody(j));
    };
    if (m.processResponse != null && queueMicrotask(() => m.processResponse(j)), j.body == null)
      T();
    else {
      const J = (V, gA) => {
        gA.enqueue(V);
      }, tA = new W({
        start() {
        },
        transform: J,
        flush: T
      }, {
        size() {
          return 1;
        }
      }, {
        size() {
          return 1;
        }
      });
      j.body = { stream: j.body.stream.pipeThrough(tA) };
    }
    if (m.processResponseConsumeBody != null) {
      const J = (V) => m.processResponseConsumeBody(j, V), tA = (V) => m.processResponseConsumeBody(j, V);
      if (j.body == null)
        queueMicrotask(() => J(null));
      else
        return q(j.body, J, tA);
      return Promise.resolve();
    }
  }
  async function oo(m) {
    const j = m.request;
    let T = null, J = null;
    const tA = m.timingInfo;
    if (j.serviceWorkers, T === null) {
      if (j.redirect === "follow" && (j.serviceWorkers = "none"), J = T = await no(m), j.responseTainting === "cors" && d(j, T) === "failure")
        return A("cors failure");
      h(j, T) === "failure" && (j.timingAllowFailed = !0);
    }
    return (j.responseTainting === "opaque" || T.type === "opaque") && p(
      j.origin,
      j.client,
      j.destination,
      J
    ) === "blocked" ? A("blocked") : (O.has(J.status) && (j.redirect !== "manual" && m.controller.connection.destroy(), j.redirect === "error" ? T = A("unexpected redirect") : j.redirect === "manual" ? T = J : j.redirect === "follow" ? T = await tg(m, T) : k(!1)), T.timingInfo = tA, T);
  }
  function tg(m, j) {
    const T = m.request, J = j.internalResponse ? j.internalResponse : j;
    let tA;
    try {
      if (tA = I(
        J,
        C(T).hash
      ), tA == null)
        return j;
    } catch (gA) {
      return Promise.resolve(A(gA));
    }
    if (!P(tA))
      return Promise.resolve(A("URL scheme must be a HTTP(S) scheme"));
    if (T.redirectCount === 20)
      return Promise.resolve(A("redirect count exceeded"));
    if (T.redirectCount += 1, T.mode === "cors" && (tA.username || tA.password) && !F(T, tA))
      return Promise.resolve(A('cross origin not allowed for request mode "cors"'));
    if (T.responseTainting === "cors" && (tA.username || tA.password))
      return Promise.resolve(A(
        'URL cannot contain credentials for request mode "cors"'
      ));
    if (J.status !== 303 && T.body != null && T.body.source == null)
      return Promise.resolve(A());
    if ([301, 302].includes(J.status) && T.method === "POST" || J.status === 303 && !G.includes(T.method)) {
      T.method = "GET", T.body = null;
      for (const gA of H)
        T.headersList.delete(gA);
    }
    F(C(T), tA) || (T.headersList.delete("authorization"), T.headersList.delete("proxy-authorization", !0), T.headersList.delete("cookie"), T.headersList.delete("host")), T.body != null && (k(T.body.source != null), T.body = N(T.body.source)[0]);
    const V = m.timingInfo;
    return V.redirectEndTime = V.postRedirectStartTime = D(m.crossOriginIsolatedCapability), V.redirectStartTime === 0 && (V.redirectStartTime = V.startTime), T.urlList.push(tA), f(T, J), Sr(m, !0);
  }
  async function no(m, j = !1, T = !1) {
    const J = m.request;
    let tA = null, V = null, gA = null;
    J.window === "no-window" && J.redirect === "error" ? (tA = m, V = J) : (V = g(J), tA = { ...m }, tA.request = V);
    const mA = J.credentials === "include" || J.credentials === "same-origin" && J.responseTainting === "basic", xA = V.body ? V.body.length : null;
    let FA = null;
    if (V.body == null && ["POST", "PUT"].includes(V.method) && (FA = "0"), xA != null && (FA = nA(`${xA}`)), FA != null && V.headersList.append("content-length", FA), xA != null && V.keepalive, V.referrer instanceof URL && V.headersList.append("referer", nA(V.referrer.href)), u(V), y(V), V.headersList.contains("user-agent") || V.headersList.append("user-agent", typeof esbuildDetection > "u" ? "undici" : "node"), V.cache === "default" && (V.headersList.contains("if-modified-since") || V.headersList.contains("if-none-match") || V.headersList.contains("if-unmodified-since") || V.headersList.contains("if-match") || V.headersList.contains("if-range")) && (V.cache = "no-store"), V.cache === "no-cache" && !V.preventNoCacheCacheControlHeaderModification && !V.headersList.contains("cache-control") && V.headersList.append("cache-control", "max-age=0"), (V.cache === "no-store" || V.cache === "reload") && (V.headersList.contains("pragma") || V.headersList.append("pragma", "no-cache"), V.headersList.contains("cache-control") || V.headersList.append("cache-control", "no-cache")), V.headersList.contains("range") && V.headersList.append("accept-encoding", "identity"), V.headersList.contains("accept-encoding") || (L(C(V)) ? V.headersList.append("accept-encoding", "br, gzip, deflate") : V.headersList.append("accept-encoding", "gzip, deflate")), V.headersList.delete("host"), V.cache = "no-store", V.mode !== "no-store" && V.mode, gA == null) {
      if (V.mode === "only-if-cached")
        return A("only if cached");
      const De = await rg(
        tA,
        mA,
        T
      );
      !x.has(V.method) && De.status >= 200 && De.status <= 399, gA == null && (gA = De);
    }
    if (gA.urlList = [...V.urlList], V.headersList.contains("range") && (gA.rangeRequested = !0), gA.requestIncludesCredentials = mA, gA.status === 407)
      return J.window === "no-window" ? A() : z(m) ? t(m) : A("proxy authentication required");
    if (
      // response’s status is 421
      gA.status === 421 && // isNewConnectionFetch is false
      !T && // request’s body is null, or request’s body is non-null and request’s body’s source is non-null
      (J.body == null || J.body.source != null)
    ) {
      if (z(m))
        return t(m);
      m.controller.connection.destroy(), gA = await no(
        m,
        j,
        !0
      );
    }
    return gA;
  }
  async function rg(m, j = !1, T = !1) {
    k(!m.controller.connection || m.controller.connection.destroyed), m.controller.connection = {
      abort: null,
      destroyed: !1,
      destroy(aA) {
        var lA;
        this.destroyed || (this.destroyed = !0, (lA = this.abort) == null || lA.call(this, aA ?? new IA("The operation was aborted.", "AbortError")));
      }
    };
    const J = m.request;
    let tA = null;
    const V = m.timingInfo;
    J.cache = "no-store", J.mode;
    let gA = null;
    if (J.body == null && m.processRequestEndOfBody)
      queueMicrotask(() => m.processRequestEndOfBody());
    else if (J.body != null) {
      const aA = async function* (SA) {
        var ge;
        z(m) || (yield SA, (ge = m.processRequestBodyChunkLength) == null || ge.call(m, SA.byteLength));
      }, lA = () => {
        z(m) || m.processRequestEndOfBody && m.processRequestEndOfBody();
      }, OA = (SA) => {
        z(m) || (SA.name === "AbortError" ? m.controller.abort() : m.controller.terminate(SA));
      };
      gA = async function* () {
        try {
          for await (const SA of J.body.stream)
            yield* aA(SA);
          lA();
        } catch (SA) {
          OA(SA);
        }
      }();
    }
    try {
      const { body: aA, status: lA, statusText: OA, headersList: SA, socket: ge } = await qt({ body: gA });
      if (ge)
        tA = r({ status: lA, statusText: OA, headersList: SA, socket: ge });
      else {
        const wA = aA[Symbol.asyncIterator]();
        m.controller.next = () => wA.next(), tA = r({ status: lA, statusText: OA, headersList: SA });
      }
    } catch (aA) {
      return aA.name === "AbortError" ? (m.controller.connection.destroy(), t(m, aA)) : A(aA);
    }
    const mA = () => {
      m.controller.resume();
    }, xA = (aA) => {
      m.controller.abort(aA);
    };
    sA || (sA = Ge.ReadableStream);
    const FA = new sA(
      {
        async start(aA) {
          m.controller.controller = aA;
        },
        async pull(aA) {
          await mA();
        },
        async cancel(aA) {
          await xA(aA);
        }
      },
      {
        highWaterMark: 0,
        size() {
          return 1;
        }
      }
    );
    tA.body = { stream: FA }, m.controller.on("terminated", De), m.controller.resume = async () => {
      for (; ; ) {
        let aA, lA;
        try {
          const { done: OA, value: SA } = await m.controller.next();
          if (U(m))
            break;
          aA = OA ? void 0 : SA;
        } catch (OA) {
          m.controller.ended && !V.encodedBodySize ? aA = void 0 : (aA = OA, lA = !0);
        }
        if (aA === void 0) {
          X(m.controller.controller), eg(m, tA);
          return;
        }
        if (V.decodedBodySize += (aA == null ? void 0 : aA.byteLength) ?? 0, lA) {
          m.controller.terminate(aA);
          return;
        }
        if (m.controller.controller.enqueue(new Uint8Array(aA)), pA(FA)) {
          m.controller.terminate();
          return;
        }
        if (!m.controller.controller.desiredSize)
          return;
      }
    };
    function De(aA) {
      U(m) ? (tA.aborted = !0, BA(FA) && m.controller.controller.error(
        m.controller.serializedAbortReason
      )) : BA(FA) && m.controller.controller.error(new TypeError("terminated", {
        cause: _(aA) ? aA : void 0
      })), m.controller.connection.destroy();
    }
    return tA;
    async function qt({ body: aA }) {
      const lA = C(J), OA = m.controller.dispatcher;
      return new Promise((SA, ge) => OA.dispatch(
        {
          path: lA.pathname + lA.search,
          origin: lA.origin,
          method: J.method,
          body: m.controller.dispatcher.isMockActive ? J.body && (J.body.source || J.body.stream) : aA,
          headers: J.headersList.entries,
          maxRedirections: 0,
          upgrade: J.mode === "websocket" ? "websocket" : void 0
        },
        {
          body: null,
          abort: null,
          onConnect(wA) {
            const { connection: TA } = m.controller;
            TA.destroyed ? wA(new IA("The operation was aborted.", "AbortError")) : (m.controller.on("terminated", wA), this.abort = TA.abort = wA);
          },
          onHeaders(wA, TA, Tr, _t) {
            if (wA < 200)
              return;
            let Re = [], ht = "";
            const ut = new o();
            if (Array.isArray(TA))
              for (let ee = 0; ee < TA.length; ee += 2) {
                const me = TA[ee + 0].toString("latin1"), Je = TA[ee + 1].toString("latin1");
                me.toLowerCase() === "content-encoding" ? Re = Je.toLowerCase().split(",").map((Mr) => Mr.trim()) : me.toLowerCase() === "location" && (ht = Je), ut[EA].append(me, Je);
              }
            else {
              const ee = Object.keys(TA);
              for (const me of ee) {
                const Je = TA[me];
                me.toLowerCase() === "content-encoding" ? Re = Je.toLowerCase().split(",").map((Mr) => Mr.trim()).reverse() : me.toLowerCase() === "location" && (ht = Je), ut[EA].append(me, Je);
              }
            }
            this.body = new kA({ read: Tr });
            const tt = [], sg = J.redirect === "follow" && ht && O.has(wA);
            if (J.method !== "HEAD" && J.method !== "CONNECT" && !Z.includes(wA) && !sg)
              for (const ee of Re)
                if (ee === "x-gzip" || ee === "gzip")
                  tt.push(i.createGunzip({
                    // Be less strict when decoding compressed responses, since sometimes
                    // servers send slightly invalid responses that are still accepted
                    // by common browsers.
                    // Always using Z_SYNC_FLUSH is what cURL does.
                    flush: i.constants.Z_SYNC_FLUSH,
                    finishFlush: i.constants.Z_SYNC_FLUSH
                  }));
                else if (ee === "deflate")
                  tt.push(i.createInflate());
                else if (ee === "br")
                  tt.push(i.createBrotliDecompress());
                else {
                  tt.length = 0;
                  break;
                }
            return SA({
              status: wA,
              statusText: _t,
              headersList: ut[EA],
              body: tt.length ? NA(this.body, ...tt, () => {
              }) : this.body.on("error", () => {
              })
            }), !0;
          },
          onData(wA) {
            if (m.controller.dump)
              return;
            const TA = wA;
            return V.encodedBodySize += TA.byteLength, this.body.push(TA);
          },
          onComplete() {
            this.abort && m.controller.off("terminated", this.abort), m.controller.ended = !0, this.body.push(null);
          },
          onError(wA) {
            var TA;
            this.abort && m.controller.off("terminated", this.abort), (TA = this.body) == null || TA.destroy(wA), m.controller.terminate(wA), ge(wA);
          },
          onUpgrade(wA, TA, Tr) {
            if (wA !== 101)
              return;
            const _t = new o();
            for (let Re = 0; Re < TA.length; Re += 2) {
              const ht = TA[Re + 0].toString("latin1"), ut = TA[Re + 1].toString("latin1");
              _t[EA].append(ht, ut);
            }
            return SA({
              status: wA,
              statusText: hA[wA],
              headersList: _t[EA],
              socket: Tr
            }), !0;
          }
        }
      ));
    }
  }
  return bE = {
    fetch: RA,
    Fetch: CA,
    fetching: we,
    finalizeAndReportTiming: HA
  }, bE;
}
var NE, Cl;
function Uf() {
  return Cl || (Cl = 1, NE = {
    kState: Symbol("FileReader state"),
    kResult: Symbol("FileReader result"),
    kError: Symbol("FileReader error"),
    kLastProgressEventFired: Symbol("FileReader last progress event fired timestamp"),
    kEvents: Symbol("FileReader events"),
    kAborted: Symbol("FileReader aborted")
  }), NE;
}
var SE, Bl;
function iL() {
  if (Bl) return SE;
  Bl = 1;
  const { webidl: e } = et(), A = Symbol("ProgressEvent state");
  class t extends Event {
    constructor(r, o = {}) {
      r = e.converters.DOMString(r), o = e.converters.ProgressEventInit(o ?? {}), super(r, o), this[A] = {
        lengthComputable: o.lengthComputable,
        loaded: o.loaded,
        total: o.total
      };
    }
    get lengthComputable() {
      return e.brandCheck(this, t), this[A].lengthComputable;
    }
    get loaded() {
      return e.brandCheck(this, t), this[A].loaded;
    }
    get total() {
      return e.brandCheck(this, t), this[A].total;
    }
  }
  return e.converters.ProgressEventInit = e.dictionaryConverter([
    {
      key: "lengthComputable",
      converter: e.converters.boolean,
      defaultValue: !1
    },
    {
      key: "loaded",
      converter: e.converters["unsigned long long"],
      defaultValue: 0
    },
    {
      key: "total",
      converter: e.converters["unsigned long long"],
      defaultValue: 0
    },
    {
      key: "bubbles",
      converter: e.converters.boolean,
      defaultValue: !1
    },
    {
      key: "cancelable",
      converter: e.converters.boolean,
      defaultValue: !1
    },
    {
      key: "composed",
      converter: e.converters.boolean,
      defaultValue: !1
    }
  ]), SE = {
    ProgressEvent: t
  }, SE;
}
var UE, Il;
function gL() {
  if (Il) return UE;
  Il = 1;
  function e(A) {
    if (!A)
      return "failure";
    switch (A.trim().toLowerCase()) {
      case "unicode-1-1-utf-8":
      case "unicode11utf8":
      case "unicode20utf8":
      case "utf-8":
      case "utf8":
      case "x-unicode20utf8":
        return "UTF-8";
      case "866":
      case "cp866":
      case "csibm866":
      case "ibm866":
        return "IBM866";
      case "csisolatin2":
      case "iso-8859-2":
      case "iso-ir-101":
      case "iso8859-2":
      case "iso88592":
      case "iso_8859-2":
      case "iso_8859-2:1987":
      case "l2":
      case "latin2":
        return "ISO-8859-2";
      case "csisolatin3":
      case "iso-8859-3":
      case "iso-ir-109":
      case "iso8859-3":
      case "iso88593":
      case "iso_8859-3":
      case "iso_8859-3:1988":
      case "l3":
      case "latin3":
        return "ISO-8859-3";
      case "csisolatin4":
      case "iso-8859-4":
      case "iso-ir-110":
      case "iso8859-4":
      case "iso88594":
      case "iso_8859-4":
      case "iso_8859-4:1988":
      case "l4":
      case "latin4":
        return "ISO-8859-4";
      case "csisolatincyrillic":
      case "cyrillic":
      case "iso-8859-5":
      case "iso-ir-144":
      case "iso8859-5":
      case "iso88595":
      case "iso_8859-5":
      case "iso_8859-5:1988":
        return "ISO-8859-5";
      case "arabic":
      case "asmo-708":
      case "csiso88596e":
      case "csiso88596i":
      case "csisolatinarabic":
      case "ecma-114":
      case "iso-8859-6":
      case "iso-8859-6-e":
      case "iso-8859-6-i":
      case "iso-ir-127":
      case "iso8859-6":
      case "iso88596":
      case "iso_8859-6":
      case "iso_8859-6:1987":
        return "ISO-8859-6";
      case "csisolatingreek":
      case "ecma-118":
      case "elot_928":
      case "greek":
      case "greek8":
      case "iso-8859-7":
      case "iso-ir-126":
      case "iso8859-7":
      case "iso88597":
      case "iso_8859-7":
      case "iso_8859-7:1987":
      case "sun_eu_greek":
        return "ISO-8859-7";
      case "csiso88598e":
      case "csisolatinhebrew":
      case "hebrew":
      case "iso-8859-8":
      case "iso-8859-8-e":
      case "iso-ir-138":
      case "iso8859-8":
      case "iso88598":
      case "iso_8859-8":
      case "iso_8859-8:1988":
      case "visual":
        return "ISO-8859-8";
      case "csiso88598i":
      case "iso-8859-8-i":
      case "logical":
        return "ISO-8859-8-I";
      case "csisolatin6":
      case "iso-8859-10":
      case "iso-ir-157":
      case "iso8859-10":
      case "iso885910":
      case "l6":
      case "latin6":
        return "ISO-8859-10";
      case "iso-8859-13":
      case "iso8859-13":
      case "iso885913":
        return "ISO-8859-13";
      case "iso-8859-14":
      case "iso8859-14":
      case "iso885914":
        return "ISO-8859-14";
      case "csisolatin9":
      case "iso-8859-15":
      case "iso8859-15":
      case "iso885915":
      case "iso_8859-15":
      case "l9":
        return "ISO-8859-15";
      case "iso-8859-16":
        return "ISO-8859-16";
      case "cskoi8r":
      case "koi":
      case "koi8":
      case "koi8-r":
      case "koi8_r":
        return "KOI8-R";
      case "koi8-ru":
      case "koi8-u":
        return "KOI8-U";
      case "csmacintosh":
      case "mac":
      case "macintosh":
      case "x-mac-roman":
        return "macintosh";
      case "iso-8859-11":
      case "iso8859-11":
      case "iso885911":
      case "tis-620":
      case "windows-874":
        return "windows-874";
      case "cp1250":
      case "windows-1250":
      case "x-cp1250":
        return "windows-1250";
      case "cp1251":
      case "windows-1251":
      case "x-cp1251":
        return "windows-1251";
      case "ansi_x3.4-1968":
      case "ascii":
      case "cp1252":
      case "cp819":
      case "csisolatin1":
      case "ibm819":
      case "iso-8859-1":
      case "iso-ir-100":
      case "iso8859-1":
      case "iso88591":
      case "iso_8859-1":
      case "iso_8859-1:1987":
      case "l1":
      case "latin1":
      case "us-ascii":
      case "windows-1252":
      case "x-cp1252":
        return "windows-1252";
      case "cp1253":
      case "windows-1253":
      case "x-cp1253":
        return "windows-1253";
      case "cp1254":
      case "csisolatin5":
      case "iso-8859-9":
      case "iso-ir-148":
      case "iso8859-9":
      case "iso88599":
      case "iso_8859-9":
      case "iso_8859-9:1989":
      case "l5":
      case "latin5":
      case "windows-1254":
      case "x-cp1254":
        return "windows-1254";
      case "cp1255":
      case "windows-1255":
      case "x-cp1255":
        return "windows-1255";
      case "cp1256":
      case "windows-1256":
      case "x-cp1256":
        return "windows-1256";
      case "cp1257":
      case "windows-1257":
      case "x-cp1257":
        return "windows-1257";
      case "cp1258":
      case "windows-1258":
      case "x-cp1258":
        return "windows-1258";
      case "x-mac-cyrillic":
      case "x-mac-ukrainian":
        return "x-mac-cyrillic";
      case "chinese":
      case "csgb2312":
      case "csiso58gb231280":
      case "gb2312":
      case "gb_2312":
      case "gb_2312-80":
      case "gbk":
      case "iso-ir-58":
      case "x-gbk":
        return "GBK";
      case "gb18030":
        return "gb18030";
      case "big5":
      case "big5-hkscs":
      case "cn-big5":
      case "csbig5":
      case "x-x-big5":
        return "Big5";
      case "cseucpkdfmtjapanese":
      case "euc-jp":
      case "x-euc-jp":
        return "EUC-JP";
      case "csiso2022jp":
      case "iso-2022-jp":
        return "ISO-2022-JP";
      case "csshiftjis":
      case "ms932":
      case "ms_kanji":
      case "shift-jis":
      case "shift_jis":
      case "sjis":
      case "windows-31j":
      case "x-sjis":
        return "Shift_JIS";
      case "cseuckr":
      case "csksc56011987":
      case "euc-kr":
      case "iso-ir-149":
      case "korean":
      case "ks_c_5601-1987":
      case "ks_c_5601-1989":
      case "ksc5601":
      case "ksc_5601":
      case "windows-949":
        return "EUC-KR";
      case "csiso2022kr":
      case "hz-gb-2312":
      case "iso-2022-cn":
      case "iso-2022-cn-ext":
      case "iso-2022-kr":
      case "replacement":
        return "replacement";
      case "unicodefffe":
      case "utf-16be":
        return "UTF-16BE";
      case "csunicode":
      case "iso-10646-ucs-2":
      case "ucs-2":
      case "unicode":
      case "unicodefeff":
      case "utf-16":
      case "utf-16le":
        return "UTF-16LE";
      case "x-user-defined":
        return "x-user-defined";
      default:
        return "failure";
    }
  }
  return UE = {
    getEncoding: e
  }, UE;
}
var LE, ll;
function aL() {
  if (ll) return LE;
  ll = 1;
  const {
    kState: e,
    kError: A,
    kResult: t,
    kAborted: s,
    kLastProgressEventFired: r
  } = Uf(), { ProgressEvent: o } = iL(), { getEncoding: n } = gL(), { DOMException: g } = Bs(), { serializeAMimeType: i, parseMIMEType: E } = Wt(), { types: a } = le, { StringDecoder: Q } = UQ, { btoa: c } = ze, h = {
    enumerable: !0,
    writable: !1,
    configurable: !1
  };
  function u(y, d, p, R) {
    if (y[e] === "loading")
      throw new g("Invalid state", "InvalidStateError");
    y[e] = "loading", y[t] = null, y[A] = null;
    const b = d.stream().getReader(), M = [];
    let F = b.read(), z = !0;
    (async () => {
      for (; !y[s]; )
        try {
          const { done: U, value: _ } = await F;
          if (z && !y[s] && queueMicrotask(() => {
            I("loadstart", y);
          }), z = !1, !U && a.isUint8Array(_))
            M.push(_), (y[r] === void 0 || Date.now() - y[r] >= 50) && !y[s] && (y[r] = Date.now(), queueMicrotask(() => {
              I("progress", y);
            })), F = b.read();
          else if (U) {
            queueMicrotask(() => {
              y[e] = "done";
              try {
                const q = C(M, p, d.type, R);
                if (y[s])
                  return;
                y[t] = q, I("load", y);
              } catch (q) {
                y[A] = q, I("error", y);
              }
              y[e] !== "loading" && I("loadend", y);
            });
            break;
          }
        } catch (U) {
          if (y[s])
            return;
          queueMicrotask(() => {
            y[e] = "done", y[A] = U, I("error", y), y[e] !== "loading" && I("loadend", y);
          });
          break;
        }
    })();
  }
  function I(y, d) {
    const p = new o(y, {
      bubbles: !1,
      cancelable: !1
    });
    d.dispatchEvent(p);
  }
  function C(y, d, p, R) {
    switch (d) {
      case "DataURL": {
        let D = "data:";
        const b = E(p || "application/octet-stream");
        b !== "failure" && (D += i(b)), D += ";base64,";
        const M = new Q("latin1");
        for (const F of y)
          D += c(M.write(F));
        return D += c(M.end()), D;
      }
      case "Text": {
        let D = "failure";
        if (R && (D = n(R)), D === "failure" && p) {
          const b = E(p);
          b !== "failure" && (D = n(b.parameters.get("charset")));
        }
        return D === "failure" && (D = "UTF-8"), f(y, D);
      }
      case "ArrayBuffer":
        return l(y).buffer;
      case "BinaryString": {
        let D = "";
        const b = new Q("latin1");
        for (const M of y)
          D += b.write(M);
        return D += b.end(), D;
      }
    }
  }
  function f(y, d) {
    const p = l(y), R = B(p);
    let D = 0;
    R !== null && (d = R, D = R === "UTF-8" ? 3 : 2);
    const b = p.slice(D);
    return new TextDecoder(d).decode(b);
  }
  function B(y) {
    const [d, p, R] = y;
    return d === 239 && p === 187 && R === 191 ? "UTF-8" : d === 254 && p === 255 ? "UTF-16BE" : d === 255 && p === 254 ? "UTF-16LE" : null;
  }
  function l(y) {
    const d = y.reduce((R, D) => R + D.byteLength, 0);
    let p = 0;
    return y.reduce((R, D) => (R.set(D, p), p += D.byteLength, R), new Uint8Array(d));
  }
  return LE = {
    staticPropertyDescriptors: h,
    readOperation: u,
    fireAProgressEvent: I
  }, LE;
}
var TE, hl;
function EL() {
  if (hl) return TE;
  hl = 1;
  const {
    staticPropertyDescriptors: e,
    readOperation: A,
    fireAProgressEvent: t
  } = aL(), {
    kState: s,
    kError: r,
    kResult: o,
    kEvents: n,
    kAborted: g
  } = Uf(), { webidl: i } = et(), { kEnumerableProperty: E } = vA;
  class a extends EventTarget {
    constructor() {
      super(), this[s] = "empty", this[o] = null, this[r] = null, this[n] = {
        loadend: null,
        error: null,
        abort: null,
        load: null,
        progress: null,
        loadstart: null
      };
    }
    /**
     * @see https://w3c.github.io/FileAPI/#dfn-readAsArrayBuffer
     * @param {import('buffer').Blob} blob
     */
    readAsArrayBuffer(c) {
      i.brandCheck(this, a), i.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsArrayBuffer" }), c = i.converters.Blob(c, { strict: !1 }), A(this, c, "ArrayBuffer");
    }
    /**
     * @see https://w3c.github.io/FileAPI/#readAsBinaryString
     * @param {import('buffer').Blob} blob
     */
    readAsBinaryString(c) {
      i.brandCheck(this, a), i.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsBinaryString" }), c = i.converters.Blob(c, { strict: !1 }), A(this, c, "BinaryString");
    }
    /**
     * @see https://w3c.github.io/FileAPI/#readAsDataText
     * @param {import('buffer').Blob} blob
     * @param {string?} encoding
     */
    readAsText(c, h = void 0) {
      i.brandCheck(this, a), i.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsText" }), c = i.converters.Blob(c, { strict: !1 }), h !== void 0 && (h = i.converters.DOMString(h)), A(this, c, "Text", h);
    }
    /**
     * @see https://w3c.github.io/FileAPI/#dfn-readAsDataURL
     * @param {import('buffer').Blob} blob
     */
    readAsDataURL(c) {
      i.brandCheck(this, a), i.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsDataURL" }), c = i.converters.Blob(c, { strict: !1 }), A(this, c, "DataURL");
    }
    /**
     * @see https://w3c.github.io/FileAPI/#dfn-abort
     */
    abort() {
      if (this[s] === "empty" || this[s] === "done") {
        this[o] = null;
        return;
      }
      this[s] === "loading" && (this[s] = "done", this[o] = null), this[g] = !0, t("abort", this), this[s] !== "loading" && t("loadend", this);
    }
    /**
     * @see https://w3c.github.io/FileAPI/#dom-filereader-readystate
     */
    get readyState() {
      switch (i.brandCheck(this, a), this[s]) {
        case "empty":
          return this.EMPTY;
        case "loading":
          return this.LOADING;
        case "done":
          return this.DONE;
      }
    }
    /**
     * @see https://w3c.github.io/FileAPI/#dom-filereader-result
     */
    get result() {
      return i.brandCheck(this, a), this[o];
    }
    /**
     * @see https://w3c.github.io/FileAPI/#dom-filereader-error
     */
    get error() {
      return i.brandCheck(this, a), this[r];
    }
    get onloadend() {
      return i.brandCheck(this, a), this[n].loadend;
    }
    set onloadend(c) {
      i.brandCheck(this, a), this[n].loadend && this.removeEventListener("loadend", this[n].loadend), typeof c == "function" ? (this[n].loadend = c, this.addEventListener("loadend", c)) : this[n].loadend = null;
    }
    get onerror() {
      return i.brandCheck(this, a), this[n].error;
    }
    set onerror(c) {
      i.brandCheck(this, a), this[n].error && this.removeEventListener("error", this[n].error), typeof c == "function" ? (this[n].error = c, this.addEventListener("error", c)) : this[n].error = null;
    }
    get onloadstart() {
      return i.brandCheck(this, a), this[n].loadstart;
    }
    set onloadstart(c) {
      i.brandCheck(this, a), this[n].loadstart && this.removeEventListener("loadstart", this[n].loadstart), typeof c == "function" ? (this[n].loadstart = c, this.addEventListener("loadstart", c)) : this[n].loadstart = null;
    }
    get onprogress() {
      return i.brandCheck(this, a), this[n].progress;
    }
    set onprogress(c) {
      i.brandCheck(this, a), this[n].progress && this.removeEventListener("progress", this[n].progress), typeof c == "function" ? (this[n].progress = c, this.addEventListener("progress", c)) : this[n].progress = null;
    }
    get onload() {
      return i.brandCheck(this, a), this[n].load;
    }
    set onload(c) {
      i.brandCheck(this, a), this[n].load && this.removeEventListener("load", this[n].load), typeof c == "function" ? (this[n].load = c, this.addEventListener("load", c)) : this[n].load = null;
    }
    get onabort() {
      return i.brandCheck(this, a), this[n].abort;
    }
    set onabort(c) {
      i.brandCheck(this, a), this[n].abort && this.removeEventListener("abort", this[n].abort), typeof c == "function" ? (this[n].abort = c, this.addEventListener("abort", c)) : this[n].abort = null;
    }
  }
  return a.EMPTY = a.prototype.EMPTY = 0, a.LOADING = a.prototype.LOADING = 1, a.DONE = a.prototype.DONE = 2, Object.defineProperties(a.prototype, {
    EMPTY: e,
    LOADING: e,
    DONE: e,
    readAsArrayBuffer: E,
    readAsBinaryString: E,
    readAsText: E,
    readAsDataURL: E,
    abort: E,
    readyState: E,
    result: E,
    error: E,
    onloadstart: E,
    onprogress: E,
    onload: E,
    onabort: E,
    onerror: E,
    onloadend: E,
    [Symbol.toStringTag]: {
      value: "FileReader",
      writable: !1,
      enumerable: !1,
      configurable: !0
    }
  }), Object.defineProperties(a, {
    EMPTY: e,
    LOADING: e,
    DONE: e
  }), TE = {
    FileReader: a
  }, TE;
}
var ME, ul;
function Ec() {
  return ul || (ul = 1, ME = {
    kConstruct: Ae.kConstruct
  }), ME;
}
var GE, dl;
function QL() {
  if (dl) return GE;
  dl = 1;
  const e = bA, { URLSerializer: A } = Wt(), { isValidHeaderName: t } = mt();
  function s(o, n, g = !1) {
    const i = A(o, g), E = A(n, g);
    return i === E;
  }
  function r(o) {
    e(o !== null);
    const n = [];
    for (let g of o.split(",")) {
      if (g = g.trim(), g.length) {
        if (!t(g))
          continue;
      } else continue;
      n.push(g);
    }
    return n;
  }
  return GE = {
    urlEquals: s,
    fieldValues: r
  }, GE;
}
var YE, fl;
function cL() {
  var p, R, Ii, bs, Lf;
  if (fl) return YE;
  fl = 1;
  const { kConstruct: e } = Ec(), { urlEquals: A, fieldValues: t } = QL(), { kEnumerableProperty: s, isDisturbed: r } = vA, { kHeadersList: o } = Ae, { webidl: n } = et(), { Response: g, cloneResponse: i } = gc(), { Request: E } = Ki(), { kState: a, kHeaders: Q, kGuard: c, kRealm: h } = Nr(), { fetching: u } = ac(), { urlIsHttpHttpsScheme: I, createDeferredPromise: C, readAllBytes: f } = mt(), B = bA, { getGlobalDispatcher: l } = an, F = class F {
    constructor() {
      YA(this, R);
      /**
       * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-request-response-list
       * @type {requestResponseList}
       */
      YA(this, p);
      arguments[0] !== e && n.illegalConstructor(), uA(this, p, arguments[1]);
    }
    async match(U, _ = {}) {
      n.brandCheck(this, F), n.argumentLengthCheck(arguments, 1, { header: "Cache.match" }), U = n.converters.RequestInfo(U), _ = n.converters.CacheQueryOptions(_);
      const q = await this.matchAll(U, _);
      if (q.length !== 0)
        return q[0];
    }
    async matchAll(U = void 0, _ = {}) {
      var K;
      n.brandCheck(this, F), U !== void 0 && (U = n.converters.RequestInfo(U)), _ = n.converters.CacheQueryOptions(_);
      let q = null;
      if (U !== void 0)
        if (U instanceof E) {
          if (q = U[a], q.method !== "GET" && !_.ignoreMethod)
            return [];
        } else typeof U == "string" && (q = new E(U)[a]);
      const X = [];
      if (U === void 0)
        for (const P of S(this, p))
          X.push(P[1]);
      else {
        const P = ae(this, R, bs).call(this, q, _);
        for (const L of P)
          X.push(L[1]);
      }
      const nA = [];
      for (const P of X) {
        const L = new g(((K = P.body) == null ? void 0 : K.source) ?? null), eA = L[a].body;
        L[a] = P, L[a].body = eA, L[Q][o] = P.headersList, L[Q][c] = "immutable", nA.push(L);
      }
      return Object.freeze(nA);
    }
    async add(U) {
      n.brandCheck(this, F), n.argumentLengthCheck(arguments, 1, { header: "Cache.add" }), U = n.converters.RequestInfo(U);
      const _ = [U];
      return await this.addAll(_);
    }
    async addAll(U) {
      n.brandCheck(this, F), n.argumentLengthCheck(arguments, 1, { header: "Cache.addAll" }), U = n.converters["sequence<RequestInfo>"](U);
      const _ = [], q = [];
      for (const Y of U) {
        if (typeof Y == "string")
          continue;
        const w = Y[a];
        if (!I(w.url) || w.method !== "GET")
          throw n.errors.exception({
            header: "Cache.addAll",
            message: "Expected http/s scheme when method is not GET."
          });
      }
      const X = [];
      for (const Y of U) {
        const w = new E(Y)[a];
        if (!I(w.url))
          throw n.errors.exception({
            header: "Cache.addAll",
            message: "Expected http/s scheme."
          });
        w.initiator = "fetch", w.destination = "subresource", q.push(w);
        const k = C();
        X.push(u({
          request: w,
          dispatcher: l(),
          processResponse(N) {
            if (N.type === "error" || N.status === 206 || N.status < 200 || N.status > 299)
              k.reject(n.errors.exception({
                header: "Cache.addAll",
                message: "Received an invalid status code or the request failed."
              }));
            else if (N.headersList.contains("vary")) {
              const O = t(N.headersList.get("vary"));
              for (const Z of O)
                if (Z === "*") {
                  k.reject(n.errors.exception({
                    header: "Cache.addAll",
                    message: "invalid vary field value"
                  }));
                  for (const x of X)
                    x.abort();
                  return;
                }
            }
          },
          processResponseEndOfBody(N) {
            if (N.aborted) {
              k.reject(new DOMException("aborted", "AbortError"));
              return;
            }
            k.resolve(N);
          }
        })), _.push(k.promise);
      }
      const K = await Promise.all(_), P = [];
      let L = 0;
      for (const Y of K) {
        const w = {
          type: "put",
          // 7.3.2
          request: q[L],
          // 7.3.3
          response: Y
          // 7.3.4
        };
        P.push(w), L++;
      }
      const eA = C();
      let v = null;
      try {
        ae(this, R, Ii).call(this, P);
      } catch (Y) {
        v = Y;
      }
      return queueMicrotask(() => {
        v === null ? eA.resolve(void 0) : eA.reject(v);
      }), eA.promise;
    }
    async put(U, _) {
      n.brandCheck(this, F), n.argumentLengthCheck(arguments, 2, { header: "Cache.put" }), U = n.converters.RequestInfo(U), _ = n.converters.Response(_);
      let q = null;
      if (U instanceof E ? q = U[a] : q = new E(U)[a], !I(q.url) || q.method !== "GET")
        throw n.errors.exception({
          header: "Cache.put",
          message: "Expected an http/s scheme when method is not GET"
        });
      const X = _[a];
      if (X.status === 206)
        throw n.errors.exception({
          header: "Cache.put",
          message: "Got 206 status"
        });
      if (X.headersList.contains("vary")) {
        const w = t(X.headersList.get("vary"));
        for (const k of w)
          if (k === "*")
            throw n.errors.exception({
              header: "Cache.put",
              message: "Got * vary field value"
            });
      }
      if (X.body && (r(X.body.stream) || X.body.stream.locked))
        throw n.errors.exception({
          header: "Cache.put",
          message: "Response body is locked or disturbed"
        });
      const nA = i(X), K = C();
      if (X.body != null) {
        const k = X.body.stream.getReader();
        f(k).then(K.resolve, K.reject);
      } else
        K.resolve(void 0);
      const P = [], L = {
        type: "put",
        // 14.
        request: q,
        // 15.
        response: nA
        // 16.
      };
      P.push(L);
      const eA = await K.promise;
      nA.body != null && (nA.body.source = eA);
      const v = C();
      let Y = null;
      try {
        ae(this, R, Ii).call(this, P);
      } catch (w) {
        Y = w;
      }
      return queueMicrotask(() => {
        Y === null ? v.resolve() : v.reject(Y);
      }), v.promise;
    }
    async delete(U, _ = {}) {
      n.brandCheck(this, F), n.argumentLengthCheck(arguments, 1, { header: "Cache.delete" }), U = n.converters.RequestInfo(U), _ = n.converters.CacheQueryOptions(_);
      let q = null;
      if (U instanceof E) {
        if (q = U[a], q.method !== "GET" && !_.ignoreMethod)
          return !1;
      } else
        B(typeof U == "string"), q = new E(U)[a];
      const X = [], nA = {
        type: "delete",
        request: q,
        options: _
      };
      X.push(nA);
      const K = C();
      let P = null, L;
      try {
        L = ae(this, R, Ii).call(this, X);
      } catch (eA) {
        P = eA;
      }
      return queueMicrotask(() => {
        P === null ? K.resolve(!!(L != null && L.length)) : K.reject(P);
      }), K.promise;
    }
    /**
     * @see https://w3c.github.io/ServiceWorker/#dom-cache-keys
     * @param {any} request
     * @param {import('../../types/cache').CacheQueryOptions} options
     * @returns {readonly Request[]}
     */
    async keys(U = void 0, _ = {}) {
      n.brandCheck(this, F), U !== void 0 && (U = n.converters.RequestInfo(U)), _ = n.converters.CacheQueryOptions(_);
      let q = null;
      if (U !== void 0)
        if (U instanceof E) {
          if (q = U[a], q.method !== "GET" && !_.ignoreMethod)
            return [];
        } else typeof U == "string" && (q = new E(U)[a]);
      const X = C(), nA = [];
      if (U === void 0)
        for (const K of S(this, p))
          nA.push(K[0]);
      else {
        const K = ae(this, R, bs).call(this, q, _);
        for (const P of K)
          nA.push(P[0]);
      }
      return queueMicrotask(() => {
        const K = [];
        for (const P of nA) {
          const L = new E("https://a");
          L[a] = P, L[Q][o] = P.headersList, L[Q][c] = "immutable", L[h] = P.client, K.push(L);
        }
        X.resolve(Object.freeze(K));
      }), X.promise;
    }
  };
  p = new WeakMap(), R = new WeakSet(), /**
   * @see https://w3c.github.io/ServiceWorker/#batch-cache-operations-algorithm
   * @param {CacheBatchOperation[]} operations
   * @returns {requestResponseList}
   */
  Ii = function(U) {
    const _ = S(this, p), q = [..._], X = [], nA = [];
    try {
      for (const K of U) {
        if (K.type !== "delete" && K.type !== "put")
          throw n.errors.exception({
            header: "Cache.#batchCacheOperations",
            message: 'operation type does not match "delete" or "put"'
          });
        if (K.type === "delete" && K.response != null)
          throw n.errors.exception({
            header: "Cache.#batchCacheOperations",
            message: "delete operation should not have an associated response"
          });
        if (ae(this, R, bs).call(this, K.request, K.options, X).length)
          throw new DOMException("???", "InvalidStateError");
        let P;
        if (K.type === "delete") {
          if (P = ae(this, R, bs).call(this, K.request, K.options), P.length === 0)
            return [];
          for (const L of P) {
            const eA = _.indexOf(L);
            B(eA !== -1), _.splice(eA, 1);
          }
        } else if (K.type === "put") {
          if (K.response == null)
            throw n.errors.exception({
              header: "Cache.#batchCacheOperations",
              message: "put operation should have an associated response"
            });
          const L = K.request;
          if (!I(L.url))
            throw n.errors.exception({
              header: "Cache.#batchCacheOperations",
              message: "expected http or https scheme"
            });
          if (L.method !== "GET")
            throw n.errors.exception({
              header: "Cache.#batchCacheOperations",
              message: "not get method"
            });
          if (K.options != null)
            throw n.errors.exception({
              header: "Cache.#batchCacheOperations",
              message: "options must not be defined"
            });
          P = ae(this, R, bs).call(this, K.request);
          for (const eA of P) {
            const v = _.indexOf(eA);
            B(v !== -1), _.splice(v, 1);
          }
          _.push([K.request, K.response]), X.push([K.request, K.response]);
        }
        nA.push([K.request, K.response]);
      }
      return nA;
    } catch (K) {
      throw S(this, p).length = 0, uA(this, p, q), K;
    }
  }, /**
   * @see https://w3c.github.io/ServiceWorker/#query-cache
   * @param {any} requestQuery
   * @param {import('../../types/cache').CacheQueryOptions} options
   * @param {requestResponseList} targetStorage
   * @returns {requestResponseList}
   */
  bs = function(U, _, q) {
    const X = [], nA = q ?? S(this, p);
    for (const K of nA) {
      const [P, L] = K;
      ae(this, R, Lf).call(this, U, P, L, _) && X.push(K);
    }
    return X;
  }, /**
   * @see https://w3c.github.io/ServiceWorker/#request-matches-cached-item-algorithm
   * @param {any} requestQuery
   * @param {any} request
   * @param {any | null} response
   * @param {import('../../types/cache').CacheQueryOptions | undefined} options
   * @returns {boolean}
   */
  Lf = function(U, _, q = null, X) {
    const nA = new URL(U.url), K = new URL(_.url);
    if (X != null && X.ignoreSearch && (K.search = "", nA.search = ""), !A(nA, K, !0))
      return !1;
    if (q == null || X != null && X.ignoreVary || !q.headersList.contains("vary"))
      return !0;
    const P = t(q.headersList.get("vary"));
    for (const L of P) {
      if (L === "*")
        return !1;
      const eA = _.headersList.get(L), v = U.headersList.get(L);
      if (eA !== v)
        return !1;
    }
    return !0;
  };
  let y = F;
  Object.defineProperties(y.prototype, {
    [Symbol.toStringTag]: {
      value: "Cache",
      configurable: !0
    },
    match: s,
    matchAll: s,
    add: s,
    addAll: s,
    put: s,
    delete: s,
    keys: s
  });
  const d = [
    {
      key: "ignoreSearch",
      converter: n.converters.boolean,
      defaultValue: !1
    },
    {
      key: "ignoreMethod",
      converter: n.converters.boolean,
      defaultValue: !1
    },
    {
      key: "ignoreVary",
      converter: n.converters.boolean,
      defaultValue: !1
    }
  ];
  return n.converters.CacheQueryOptions = n.dictionaryConverter(d), n.converters.MultiCacheQueryOptions = n.dictionaryConverter([
    ...d,
    {
      key: "cacheName",
      converter: n.converters.DOMString
    }
  ]), n.converters.Response = n.interfaceConverter(g), n.converters["sequence<RequestInfo>"] = n.sequenceConverter(
    n.converters.RequestInfo
  ), YE = {
    Cache: y
  }, YE;
}
var JE, pl;
function CL() {
  var o;
  if (pl) return JE;
  pl = 1;
  const { kConstruct: e } = Ec(), { Cache: A } = cL(), { webidl: t } = et(), { kEnumerableProperty: s } = vA, n = class n {
    constructor() {
      /**
       * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-name-to-cache-map
       * @type {Map<string, import('./cache').requestResponseList}
       */
      YA(this, o, /* @__PURE__ */ new Map());
      arguments[0] !== e && t.illegalConstructor();
    }
    async match(i, E = {}) {
      if (t.brandCheck(this, n), t.argumentLengthCheck(arguments, 1, { header: "CacheStorage.match" }), i = t.converters.RequestInfo(i), E = t.converters.MultiCacheQueryOptions(E), E.cacheName != null) {
        if (S(this, o).has(E.cacheName)) {
          const a = S(this, o).get(E.cacheName);
          return await new A(e, a).match(i, E);
        }
      } else
        for (const a of S(this, o).values()) {
          const c = await new A(e, a).match(i, E);
          if (c !== void 0)
            return c;
        }
    }
    /**
     * @see https://w3c.github.io/ServiceWorker/#cache-storage-has
     * @param {string} cacheName
     * @returns {Promise<boolean>}
     */
    async has(i) {
      return t.brandCheck(this, n), t.argumentLengthCheck(arguments, 1, { header: "CacheStorage.has" }), i = t.converters.DOMString(i), S(this, o).has(i);
    }
    /**
     * @see https://w3c.github.io/ServiceWorker/#dom-cachestorage-open
     * @param {string} cacheName
     * @returns {Promise<Cache>}
     */
    async open(i) {
      if (t.brandCheck(this, n), t.argumentLengthCheck(arguments, 1, { header: "CacheStorage.open" }), i = t.converters.DOMString(i), S(this, o).has(i)) {
        const a = S(this, o).get(i);
        return new A(e, a);
      }
      const E = [];
      return S(this, o).set(i, E), new A(e, E);
    }
    /**
     * @see https://w3c.github.io/ServiceWorker/#cache-storage-delete
     * @param {string} cacheName
     * @returns {Promise<boolean>}
     */
    async delete(i) {
      return t.brandCheck(this, n), t.argumentLengthCheck(arguments, 1, { header: "CacheStorage.delete" }), i = t.converters.DOMString(i), S(this, o).delete(i);
    }
    /**
     * @see https://w3c.github.io/ServiceWorker/#cache-storage-keys
     * @returns {string[]}
     */
    async keys() {
      return t.brandCheck(this, n), [...S(this, o).keys()];
    }
  };
  o = new WeakMap();
  let r = n;
  return Object.defineProperties(r.prototype, {
    [Symbol.toStringTag]: {
      value: "CacheStorage",
      configurable: !0
    },
    match: s,
    has: s,
    open: s,
    delete: s,
    keys: s
  }), JE = {
    CacheStorage: r
  }, JE;
}
var vE, yl;
function BL() {
  return yl || (yl = 1, vE = {
    maxAttributeValueSize: 1024,
    maxNameValuePairSize: 4096
  }), vE;
}
var HE, wl;
function Tf() {
  if (wl) return HE;
  wl = 1;
  function e(i) {
    if (i.length === 0)
      return !1;
    for (const E of i) {
      const a = E.charCodeAt(0);
      if (a >= 0 || a <= 8 || a >= 10 || a <= 31 || a === 127)
        return !1;
    }
  }
  function A(i) {
    for (const E of i) {
      const a = E.charCodeAt(0);
      if (a <= 32 || a > 127 || E === "(" || E === ")" || E === ">" || E === "<" || E === "@" || E === "," || E === ";" || E === ":" || E === "\\" || E === '"' || E === "/" || E === "[" || E === "]" || E === "?" || E === "=" || E === "{" || E === "}")
        throw new Error("Invalid cookie name");
    }
  }
  function t(i) {
    for (const E of i) {
      const a = E.charCodeAt(0);
      if (a < 33 || // exclude CTLs (0-31)
      a === 34 || a === 44 || a === 59 || a === 92 || a > 126)
        throw new Error("Invalid header value");
    }
  }
  function s(i) {
    for (const E of i)
      if (E.charCodeAt(0) < 33 || E === ";")
        throw new Error("Invalid cookie path");
  }
  function r(i) {
    if (i.startsWith("-") || i.endsWith(".") || i.endsWith("-"))
      throw new Error("Invalid cookie domain");
  }
  function o(i) {
    typeof i == "number" && (i = new Date(i));
    const E = [
      "Sun",
      "Mon",
      "Tue",
      "Wed",
      "Thu",
      "Fri",
      "Sat"
    ], a = [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sep",
      "Oct",
      "Nov",
      "Dec"
    ], Q = E[i.getUTCDay()], c = i.getUTCDate().toString().padStart(2, "0"), h = a[i.getUTCMonth()], u = i.getUTCFullYear(), I = i.getUTCHours().toString().padStart(2, "0"), C = i.getUTCMinutes().toString().padStart(2, "0"), f = i.getUTCSeconds().toString().padStart(2, "0");
    return `${Q}, ${c} ${h} ${u} ${I}:${C}:${f} GMT`;
  }
  function n(i) {
    if (i < 0)
      throw new Error("Invalid cookie max-age");
  }
  function g(i) {
    if (i.name.length === 0)
      return null;
    A(i.name), t(i.value);
    const E = [`${i.name}=${i.value}`];
    i.name.startsWith("__Secure-") && (i.secure = !0), i.name.startsWith("__Host-") && (i.secure = !0, i.domain = null, i.path = "/"), i.secure && E.push("Secure"), i.httpOnly && E.push("HttpOnly"), typeof i.maxAge == "number" && (n(i.maxAge), E.push(`Max-Age=${i.maxAge}`)), i.domain && (r(i.domain), E.push(`Domain=${i.domain}`)), i.path && (s(i.path), E.push(`Path=${i.path}`)), i.expires && i.expires.toString() !== "Invalid Date" && E.push(`Expires=${o(i.expires)}`), i.sameSite && E.push(`SameSite=${i.sameSite}`);
    for (const a of i.unparsed) {
      if (!a.includes("="))
        throw new Error("Invalid unparsed");
      const [Q, ...c] = a.split("=");
      E.push(`${Q.trim()}=${c.join("=")}`);
    }
    return E.join("; ");
  }
  return HE = {
    isCTLExcludingHtab: e,
    validateCookieName: A,
    validateCookiePath: s,
    validateCookieValue: t,
    toIMFDate: o,
    stringify: g
  }, HE;
}
var VE, Dl;
function IL() {
  if (Dl) return VE;
  Dl = 1;
  const { maxNameValuePairSize: e, maxAttributeValueSize: A } = BL(), { isCTLExcludingHtab: t } = Tf(), { collectASequenceOfCodePointsFast: s } = Wt(), r = bA;
  function o(g) {
    if (t(g))
      return null;
    let i = "", E = "", a = "", Q = "";
    if (g.includes(";")) {
      const c = { position: 0 };
      i = s(";", g, c), E = g.slice(c.position);
    } else
      i = g;
    if (!i.includes("="))
      Q = i;
    else {
      const c = { position: 0 };
      a = s(
        "=",
        i,
        c
      ), Q = i.slice(c.position + 1);
    }
    return a = a.trim(), Q = Q.trim(), a.length + Q.length > e ? null : {
      name: a,
      value: Q,
      ...n(E)
    };
  }
  function n(g, i = {}) {
    if (g.length === 0)
      return i;
    r(g[0] === ";"), g = g.slice(1);
    let E = "";
    g.includes(";") ? (E = s(
      ";",
      g,
      { position: 0 }
    ), g = g.slice(E.length)) : (E = g, g = "");
    let a = "", Q = "";
    if (E.includes("=")) {
      const h = { position: 0 };
      a = s(
        "=",
        E,
        h
      ), Q = E.slice(h.position + 1);
    } else
      a = E;
    if (a = a.trim(), Q = Q.trim(), Q.length > A)
      return n(g, i);
    const c = a.toLowerCase();
    if (c === "expires") {
      const h = new Date(Q);
      i.expires = h;
    } else if (c === "max-age") {
      const h = Q.charCodeAt(0);
      if ((h < 48 || h > 57) && Q[0] !== "-" || !/^\d+$/.test(Q))
        return n(g, i);
      const u = Number(Q);
      i.maxAge = u;
    } else if (c === "domain") {
      let h = Q;
      h[0] === "." && (h = h.slice(1)), h = h.toLowerCase(), i.domain = h;
    } else if (c === "path") {
      let h = "";
      Q.length === 0 || Q[0] !== "/" ? h = "/" : h = Q, i.path = h;
    } else if (c === "secure")
      i.secure = !0;
    else if (c === "httponly")
      i.httpOnly = !0;
    else if (c === "samesite") {
      let h = "Default";
      const u = Q.toLowerCase();
      u.includes("none") && (h = "None"), u.includes("strict") && (h = "Strict"), u.includes("lax") && (h = "Lax"), i.sameSite = h;
    } else
      i.unparsed ?? (i.unparsed = []), i.unparsed.push(`${a}=${Q}`);
    return n(g, i);
  }
  return VE = {
    parseSetCookie: o,
    parseUnparsedAttributes: n
  }, VE;
}
var xE, Rl;
function lL() {
  if (Rl) return xE;
  Rl = 1;
  const { parseSetCookie: e } = IL(), { stringify: A } = Tf(), { webidl: t } = et(), { Headers: s } = to();
  function r(i) {
    t.argumentLengthCheck(arguments, 1, { header: "getCookies" }), t.brandCheck(i, s, { strict: !1 });
    const E = i.get("cookie"), a = {};
    if (!E)
      return a;
    for (const Q of E.split(";")) {
      const [c, ...h] = Q.split("=");
      a[c.trim()] = h.join("=");
    }
    return a;
  }
  function o(i, E, a) {
    t.argumentLengthCheck(arguments, 2, { header: "deleteCookie" }), t.brandCheck(i, s, { strict: !1 }), E = t.converters.DOMString(E), a = t.converters.DeleteCookieAttributes(a), g(i, {
      name: E,
      value: "",
      expires: /* @__PURE__ */ new Date(0),
      ...a
    });
  }
  function n(i) {
    t.argumentLengthCheck(arguments, 1, { header: "getSetCookies" }), t.brandCheck(i, s, { strict: !1 });
    const E = i.getSetCookie();
    return E ? E.map((a) => e(a)) : [];
  }
  function g(i, E) {
    t.argumentLengthCheck(arguments, 2, { header: "setCookie" }), t.brandCheck(i, s, { strict: !1 }), E = t.converters.Cookie(E), A(E) && i.append("Set-Cookie", A(E));
  }
  return t.converters.DeleteCookieAttributes = t.dictionaryConverter([
    {
      converter: t.nullableConverter(t.converters.DOMString),
      key: "path",
      defaultValue: null
    },
    {
      converter: t.nullableConverter(t.converters.DOMString),
      key: "domain",
      defaultValue: null
    }
  ]), t.converters.Cookie = t.dictionaryConverter([
    {
      converter: t.converters.DOMString,
      key: "name"
    },
    {
      converter: t.converters.DOMString,
      key: "value"
    },
    {
      converter: t.nullableConverter((i) => typeof i == "number" ? t.converters["unsigned long long"](i) : new Date(i)),
      key: "expires",
      defaultValue: null
    },
    {
      converter: t.nullableConverter(t.converters["long long"]),
      key: "maxAge",
      defaultValue: null
    },
    {
      converter: t.nullableConverter(t.converters.DOMString),
      key: "domain",
      defaultValue: null
    },
    {
      converter: t.nullableConverter(t.converters.DOMString),
      key: "path",
      defaultValue: null
    },
    {
      converter: t.nullableConverter(t.converters.boolean),
      key: "secure",
      defaultValue: null
    },
    {
      converter: t.nullableConverter(t.converters.boolean),
      key: "httpOnly",
      defaultValue: null
    },
    {
      converter: t.converters.USVString,
      key: "sameSite",
      allowedValues: ["Strict", "Lax", "None"]
    },
    {
      converter: t.sequenceConverter(t.converters.DOMString),
      key: "unparsed",
      defaultValue: []
    }
  ]), xE = {
    getCookies: r,
    deleteCookie: o,
    getSetCookies: n,
    setCookie: g
  }, xE;
}
var OE, ml;
function En() {
  if (ml) return OE;
  ml = 1;
  const e = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11", A = {
    enumerable: !0,
    writable: !1,
    configurable: !1
  }, t = {
    CONNECTING: 0,
    OPEN: 1,
    CLOSING: 2,
    CLOSED: 3
  }, s = {
    CONTINUATION: 0,
    TEXT: 1,
    BINARY: 2,
    CLOSE: 8,
    PING: 9,
    PONG: 10
  }, r = 2 ** 16 - 1, o = {
    INFO: 0,
    PAYLOADLENGTH_16: 2,
    PAYLOADLENGTH_64: 3,
    READ_DATA: 4
  }, n = Buffer.allocUnsafe(0);
  return OE = {
    uid: e,
    staticPropertyDescriptors: A,
    states: t,
    opcodes: s,
    maxUnsigned16Bit: r,
    parserStates: o,
    emptyBuffer: n
  }, OE;
}
var PE, kl;
function ji() {
  return kl || (kl = 1, PE = {
    kWebSocketURL: Symbol("url"),
    kReadyState: Symbol("ready state"),
    kController: Symbol("controller"),
    kResponse: Symbol("response"),
    kBinaryType: Symbol("binary type"),
    kSentClose: Symbol("sent close"),
    kReceivedClose: Symbol("received close"),
    kByteParser: Symbol("byte parser")
  }), PE;
}
var WE, Fl;
function Mf() {
  var g, E, Q;
  if (Fl) return WE;
  Fl = 1;
  const { webidl: e } = et(), { kEnumerableProperty: A } = vA, { MessagePort: t } = Fi, i = class i extends Event {
    constructor(I, C = {}) {
      e.argumentLengthCheck(arguments, 1, { header: "MessageEvent constructor" }), I = e.converters.DOMString(I), C = e.converters.MessageEventInit(C);
      super(I, C);
      YA(this, g);
      uA(this, g, C);
    }
    get data() {
      return e.brandCheck(this, i), S(this, g).data;
    }
    get origin() {
      return e.brandCheck(this, i), S(this, g).origin;
    }
    get lastEventId() {
      return e.brandCheck(this, i), S(this, g).lastEventId;
    }
    get source() {
      return e.brandCheck(this, i), S(this, g).source;
    }
    get ports() {
      return e.brandCheck(this, i), Object.isFrozen(S(this, g).ports) || Object.freeze(S(this, g).ports), S(this, g).ports;
    }
    initMessageEvent(I, C = !1, f = !1, B = null, l = "", y = "", d = null, p = []) {
      return e.brandCheck(this, i), e.argumentLengthCheck(arguments, 1, { header: "MessageEvent.initMessageEvent" }), new i(I, {
        bubbles: C,
        cancelable: f,
        data: B,
        origin: l,
        lastEventId: y,
        source: d,
        ports: p
      });
    }
  };
  g = new WeakMap();
  let s = i;
  const a = class a extends Event {
    constructor(I, C = {}) {
      e.argumentLengthCheck(arguments, 1, { header: "CloseEvent constructor" }), I = e.converters.DOMString(I), C = e.converters.CloseEventInit(C);
      super(I, C);
      YA(this, E);
      uA(this, E, C);
    }
    get wasClean() {
      return e.brandCheck(this, a), S(this, E).wasClean;
    }
    get code() {
      return e.brandCheck(this, a), S(this, E).code;
    }
    get reason() {
      return e.brandCheck(this, a), S(this, E).reason;
    }
  };
  E = new WeakMap();
  let r = a;
  const c = class c extends Event {
    constructor(I, C) {
      e.argumentLengthCheck(arguments, 1, { header: "ErrorEvent constructor" });
      super(I, C);
      YA(this, Q);
      I = e.converters.DOMString(I), C = e.converters.ErrorEventInit(C ?? {}), uA(this, Q, C);
    }
    get message() {
      return e.brandCheck(this, c), S(this, Q).message;
    }
    get filename() {
      return e.brandCheck(this, c), S(this, Q).filename;
    }
    get lineno() {
      return e.brandCheck(this, c), S(this, Q).lineno;
    }
    get colno() {
      return e.brandCheck(this, c), S(this, Q).colno;
    }
    get error() {
      return e.brandCheck(this, c), S(this, Q).error;
    }
  };
  Q = new WeakMap();
  let o = c;
  Object.defineProperties(s.prototype, {
    [Symbol.toStringTag]: {
      value: "MessageEvent",
      configurable: !0
    },
    data: A,
    origin: A,
    lastEventId: A,
    source: A,
    ports: A,
    initMessageEvent: A
  }), Object.defineProperties(r.prototype, {
    [Symbol.toStringTag]: {
      value: "CloseEvent",
      configurable: !0
    },
    reason: A,
    code: A,
    wasClean: A
  }), Object.defineProperties(o.prototype, {
    [Symbol.toStringTag]: {
      value: "ErrorEvent",
      configurable: !0
    },
    message: A,
    filename: A,
    lineno: A,
    colno: A,
    error: A
  }), e.converters.MessagePort = e.interfaceConverter(t), e.converters["sequence<MessagePort>"] = e.sequenceConverter(
    e.converters.MessagePort
  );
  const n = [
    {
      key: "bubbles",
      converter: e.converters.boolean,
      defaultValue: !1
    },
    {
      key: "cancelable",
      converter: e.converters.boolean,
      defaultValue: !1
    },
    {
      key: "composed",
      converter: e.converters.boolean,
      defaultValue: !1
    }
  ];
  return e.converters.MessageEventInit = e.dictionaryConverter([
    ...n,
    {
      key: "data",
      converter: e.converters.any,
      defaultValue: null
    },
    {
      key: "origin",
      converter: e.converters.USVString,
      defaultValue: ""
    },
    {
      key: "lastEventId",
      converter: e.converters.DOMString,
      defaultValue: ""
    },
    {
      key: "source",
      // Node doesn't implement WindowProxy or ServiceWorker, so the only
      // valid value for source is a MessagePort.
      converter: e.nullableConverter(e.converters.MessagePort),
      defaultValue: null
    },
    {
      key: "ports",
      converter: e.converters["sequence<MessagePort>"],
      get defaultValue() {
        return [];
      }
    }
  ]), e.converters.CloseEventInit = e.dictionaryConverter([
    ...n,
    {
      key: "wasClean",
      converter: e.converters.boolean,
      defaultValue: !1
    },
    {
      key: "code",
      converter: e.converters["unsigned short"],
      defaultValue: 0
    },
    {
      key: "reason",
      converter: e.converters.USVString,
      defaultValue: ""
    }
  ]), e.converters.ErrorEventInit = e.dictionaryConverter([
    ...n,
    {
      key: "message",
      converter: e.converters.DOMString,
      defaultValue: ""
    },
    {
      key: "filename",
      converter: e.converters.USVString,
      defaultValue: ""
    },
    {
      key: "lineno",
      converter: e.converters["unsigned long"],
      defaultValue: 0
    },
    {
      key: "colno",
      converter: e.converters["unsigned long"],
      defaultValue: 0
    },
    {
      key: "error",
      converter: e.converters.any
    }
  ]), WE = {
    MessageEvent: s,
    CloseEvent: r,
    ErrorEvent: o
  }, WE;
}
var qE, bl;
function Qc() {
  if (bl) return qE;
  bl = 1;
  const { kReadyState: e, kController: A, kResponse: t, kBinaryType: s, kWebSocketURL: r } = ji(), { states: o, opcodes: n } = En(), { MessageEvent: g, ErrorEvent: i } = Mf();
  function E(f) {
    return f[e] === o.OPEN;
  }
  function a(f) {
    return f[e] === o.CLOSING;
  }
  function Q(f) {
    return f[e] === o.CLOSED;
  }
  function c(f, B, l = Event, y) {
    const d = new l(f, y);
    B.dispatchEvent(d);
  }
  function h(f, B, l) {
    if (f[e] !== o.OPEN)
      return;
    let y;
    if (B === n.TEXT)
      try {
        y = new TextDecoder("utf-8", { fatal: !0 }).decode(l);
      } catch {
        C(f, "Received invalid UTF-8 in text frame.");
        return;
      }
    else B === n.BINARY && (f[s] === "blob" ? y = new Blob([l]) : y = new Uint8Array(l).buffer);
    c("message", f, g, {
      origin: f[r].origin,
      data: y
    });
  }
  function u(f) {
    if (f.length === 0)
      return !1;
    for (const B of f) {
      const l = B.charCodeAt(0);
      if (l < 33 || l > 126 || B === "(" || B === ")" || B === "<" || B === ">" || B === "@" || B === "," || B === ";" || B === ":" || B === "\\" || B === '"' || B === "/" || B === "[" || B === "]" || B === "?" || B === "=" || B === "{" || B === "}" || l === 32 || // SP
      l === 9)
        return !1;
    }
    return !0;
  }
  function I(f) {
    return f >= 1e3 && f < 1015 ? f !== 1004 && // reserved
    f !== 1005 && // "MUST NOT be set as a status code"
    f !== 1006 : f >= 3e3 && f <= 4999;
  }
  function C(f, B) {
    const { [A]: l, [t]: y } = f;
    l.abort(), y != null && y.socket && !y.socket.destroyed && y.socket.destroy(), B && c("error", f, i, {
      error: new Error(B)
    });
  }
  return qE = {
    isEstablished: E,
    isClosing: a,
    isClosed: Q,
    fireEvent: c,
    isValidSubprotocol: u,
    isValidStatusCode: I,
    failWebsocketConnection: C,
    websocketMessageReceived: h
  }, qE;
}
var _E, Nl;
function hL() {
  if (Nl) return _E;
  Nl = 1;
  const e = Ni, { uid: A, states: t } = En(), {
    kReadyState: s,
    kSentClose: r,
    kByteParser: o,
    kReceivedClose: n
  } = ji(), { fireEvent: g, failWebsocketConnection: i } = Qc(), { CloseEvent: E } = Mf(), { makeRequest: a } = Ki(), { fetching: Q } = ac(), { Headers: c } = to(), { getGlobalDispatcher: h } = an, { kHeadersList: u } = Ae, I = {};
  I.open = e.channel("undici:websocket:open"), I.close = e.channel("undici:websocket:close"), I.socketError = e.channel("undici:websocket:socket_error");
  let C;
  try {
    C = require("crypto");
  } catch {
  }
  function f(d, p, R, D, b) {
    const M = d;
    M.protocol = d.protocol === "ws:" ? "http:" : "https:";
    const F = a({
      urlList: [M],
      serviceWorkers: "none",
      referrer: "no-referrer",
      mode: "websocket",
      credentials: "include",
      cache: "no-store",
      redirect: "error"
    });
    if (b.headers) {
      const q = new c(b.headers)[u];
      F.headersList = q;
    }
    const z = C.randomBytes(16).toString("base64");
    F.headersList.append("sec-websocket-key", z), F.headersList.append("sec-websocket-version", "13");
    for (const q of p)
      F.headersList.append("sec-websocket-protocol", q);
    const U = "";
    return Q({
      request: F,
      useParallelQueue: !0,
      dispatcher: b.dispatcher ?? h(),
      processResponse(q) {
        var L, eA;
        if (q.type === "error" || q.status !== 101) {
          i(R, "Received network error or non-101 status code.");
          return;
        }
        if (p.length !== 0 && !q.headersList.get("Sec-WebSocket-Protocol")) {
          i(R, "Server did not respond with sent protocols.");
          return;
        }
        if (((L = q.headersList.get("Upgrade")) == null ? void 0 : L.toLowerCase()) !== "websocket") {
          i(R, 'Server did not set Upgrade header to "websocket".');
          return;
        }
        if (((eA = q.headersList.get("Connection")) == null ? void 0 : eA.toLowerCase()) !== "upgrade") {
          i(R, 'Server did not set Connection header to "upgrade".');
          return;
        }
        const X = q.headersList.get("Sec-WebSocket-Accept"), nA = C.createHash("sha1").update(z + A).digest("base64");
        if (X !== nA) {
          i(R, "Incorrect hash received in Sec-WebSocket-Accept header.");
          return;
        }
        const K = q.headersList.get("Sec-WebSocket-Extensions");
        if (K !== null && K !== U) {
          i(R, "Received different permessage-deflate than the one set.");
          return;
        }
        const P = q.headersList.get("Sec-WebSocket-Protocol");
        if (P !== null && P !== F.headersList.get("Sec-WebSocket-Protocol")) {
          i(R, "Protocol was not set in the opening handshake.");
          return;
        }
        q.socket.on("data", B), q.socket.on("close", l), q.socket.on("error", y), I.open.hasSubscribers && I.open.publish({
          address: q.socket.address(),
          protocol: P,
          extensions: K
        }), D(q);
      }
    });
  }
  function B(d) {
    this.ws[o].write(d) || this.pause();
  }
  function l() {
    const { ws: d } = this, p = d[r] && d[n];
    let R = 1005, D = "";
    const b = d[o].closingInfo;
    b ? (R = b.code ?? 1005, D = b.reason) : d[r] || (R = 1006), d[s] = t.CLOSED, g("close", d, E, {
      wasClean: p,
      code: R,
      reason: D
    }), I.close.hasSubscribers && I.close.publish({
      websocket: d,
      code: R,
      reason: D
    });
  }
  function y(d) {
    const { ws: p } = this;
    p[s] = t.CLOSING, I.socketError.hasSubscribers && I.socketError.publish(d), this.destroy();
  }
  return _E = {
    establishWebSocketConnection: f
  }, _E;
}
var $E, Sl;
function Gf() {
  if (Sl) return $E;
  Sl = 1;
  const { maxUnsigned16Bit: e } = En();
  let A;
  try {
    A = require("crypto");
  } catch {
  }
  class t {
    /**
     * @param {Buffer|undefined} data
     */
    constructor(r) {
      this.frameData = r, this.maskKey = A.randomBytes(4);
    }
    createFrame(r) {
      var E;
      const o = ((E = this.frameData) == null ? void 0 : E.byteLength) ?? 0;
      let n = o, g = 6;
      o > e ? (g += 8, n = 127) : o > 125 && (g += 2, n = 126);
      const i = Buffer.allocUnsafe(o + g);
      i[0] = i[1] = 0, i[0] |= 128, i[0] = (i[0] & 240) + r;
      /*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> */
      i[g - 4] = this.maskKey[0], i[g - 3] = this.maskKey[1], i[g - 2] = this.maskKey[2], i[g - 1] = this.maskKey[3], i[1] = n, n === 126 ? i.writeUInt16BE(o, 2) : n === 127 && (i[2] = i[3] = 0, i.writeUIntBE(o, 4, 6)), i[1] |= 128;
      for (let a = 0; a < o; a++)
        i[g + a] = this.frameData[a] ^ this.maskKey[a % 4];
      return i;
    }
  }
  return $E = {
    WebsocketFrameSend: t
  }, $E;
}
var ZE, Ul;
function uL() {
  var C, f, B, l, y;
  if (Ul) return ZE;
  Ul = 1;
  const { Writable: e } = Ye, A = Ni, { parserStates: t, opcodes: s, states: r, emptyBuffer: o } = En(), { kReadyState: n, kSentClose: g, kResponse: i, kReceivedClose: E } = ji(), { isValidStatusCode: a, failWebsocketConnection: Q, websocketMessageReceived: c } = Qc(), { WebsocketFrameSend: h } = Gf(), u = {};
  u.ping = A.channel("undici:websocket:ping"), u.pong = A.channel("undici:websocket:pong");
  class I extends e {
    constructor(R) {
      super();
      YA(this, C, []);
      YA(this, f, 0);
      YA(this, B, t.INFO);
      YA(this, l, {});
      YA(this, y, []);
      this.ws = R;
    }
    /**
     * @param {Buffer} chunk
     * @param {() => void} callback
     */
    _write(R, D, b) {
      S(this, C).push(R), uA(this, f, S(this, f) + R.length), this.run(b);
    }
    /**
     * Runs whenever a new chunk is received.
     * Callback is called whenever there are no more chunks buffering,
     * or not enough bytes are buffered to parse.
     */
    run(R) {
      var D;
      for (; ; ) {
        if (S(this, B) === t.INFO) {
          if (S(this, f) < 2)
            return R();
          const b = this.consume(2);
          if (S(this, l).fin = (b[0] & 128) !== 0, S(this, l).opcode = b[0] & 15, (D = S(this, l)).originalOpcode ?? (D.originalOpcode = S(this, l).opcode), S(this, l).fragmented = !S(this, l).fin && S(this, l).opcode !== s.CONTINUATION, S(this, l).fragmented && S(this, l).opcode !== s.BINARY && S(this, l).opcode !== s.TEXT) {
            Q(this.ws, "Invalid frame type was fragmented.");
            return;
          }
          const M = b[1] & 127;
          if (M <= 125 ? (S(this, l).payloadLength = M, uA(this, B, t.READ_DATA)) : M === 126 ? uA(this, B, t.PAYLOADLENGTH_16) : M === 127 && uA(this, B, t.PAYLOADLENGTH_64), S(this, l).fragmented && M > 125) {
            Q(this.ws, "Fragmented frame exceeded 125 bytes.");
            return;
          } else if ((S(this, l).opcode === s.PING || S(this, l).opcode === s.PONG || S(this, l).opcode === s.CLOSE) && M > 125) {
            Q(this.ws, "Payload length for control frame exceeded 125 bytes.");
            return;
          } else if (S(this, l).opcode === s.CLOSE) {
            if (M === 1) {
              Q(this.ws, "Received close frame with a 1-byte body.");
              return;
            }
            const F = this.consume(M);
            if (S(this, l).closeInfo = this.parseCloseBody(!1, F), !this.ws[g]) {
              const z = Buffer.allocUnsafe(2);
              z.writeUInt16BE(S(this, l).closeInfo.code, 0);
              const U = new h(z);
              this.ws[i].socket.write(
                U.createFrame(s.CLOSE),
                (_) => {
                  _ || (this.ws[g] = !0);
                }
              );
            }
            this.ws[n] = r.CLOSING, this.ws[E] = !0, this.end();
            return;
          } else if (S(this, l).opcode === s.PING) {
            const F = this.consume(M);
            if (!this.ws[E]) {
              const z = new h(F);
              this.ws[i].socket.write(z.createFrame(s.PONG)), u.ping.hasSubscribers && u.ping.publish({
                payload: F
              });
            }
            if (uA(this, B, t.INFO), S(this, f) > 0)
              continue;
            R();
            return;
          } else if (S(this, l).opcode === s.PONG) {
            const F = this.consume(M);
            if (u.pong.hasSubscribers && u.pong.publish({
              payload: F
            }), S(this, f) > 0)
              continue;
            R();
            return;
          }
        } else if (S(this, B) === t.PAYLOADLENGTH_16) {
          if (S(this, f) < 2)
            return R();
          const b = this.consume(2);
          S(this, l).payloadLength = b.readUInt16BE(0), uA(this, B, t.READ_DATA);
        } else if (S(this, B) === t.PAYLOADLENGTH_64) {
          if (S(this, f) < 8)
            return R();
          const b = this.consume(8), M = b.readUInt32BE(0);
          if (M > 2 ** 31 - 1) {
            Q(this.ws, "Received payload length > 2^31 bytes.");
            return;
          }
          const F = b.readUInt32BE(4);
          S(this, l).payloadLength = (M << 8) + F, uA(this, B, t.READ_DATA);
        } else if (S(this, B) === t.READ_DATA) {
          if (S(this, f) < S(this, l).payloadLength)
            return R();
          if (S(this, f) >= S(this, l).payloadLength) {
            const b = this.consume(S(this, l).payloadLength);
            if (S(this, y).push(b), !S(this, l).fragmented || S(this, l).fin && S(this, l).opcode === s.CONTINUATION) {
              const M = Buffer.concat(S(this, y));
              c(this.ws, S(this, l).originalOpcode, M), uA(this, l, {}), S(this, y).length = 0;
            }
            uA(this, B, t.INFO);
          }
        }
        if (!(S(this, f) > 0)) {
          R();
          break;
        }
      }
    }
    /**
     * Take n bytes from the buffered Buffers
     * @param {number} n
     * @returns {Buffer|null}
     */
    consume(R) {
      if (R > S(this, f))
        return null;
      if (R === 0)
        return o;
      if (S(this, C)[0].length === R)
        return uA(this, f, S(this, f) - S(this, C)[0].length), S(this, C).shift();
      const D = Buffer.allocUnsafe(R);
      let b = 0;
      for (; b !== R; ) {
        const M = S(this, C)[0], { length: F } = M;
        if (F + b === R) {
          D.set(S(this, C).shift(), b);
          break;
        } else if (F + b > R) {
          D.set(M.subarray(0, R - b), b), S(this, C)[0] = M.subarray(R - b);
          break;
        } else
          D.set(S(this, C).shift(), b), b += M.length;
      }
      return uA(this, f, S(this, f) - R), D;
    }
    parseCloseBody(R, D) {
      let b;
      if (D.length >= 2 && (b = D.readUInt16BE(0)), R)
        return a(b) ? { code: b } : null;
      let M = D.subarray(2);
      if (M[0] === 239 && M[1] === 187 && M[2] === 191 && (M = M.subarray(3)), b !== void 0 && !a(b))
        return null;
      try {
        M = new TextDecoder("utf-8", { fatal: !0 }).decode(M);
      } catch {
        return null;
      }
      return { code: b, reason: M };
    }
    get closingInfo() {
      return S(this, l).closeInfo;
    }
  }
  return C = new WeakMap(), f = new WeakMap(), B = new WeakMap(), l = new WeakMap(), y = new WeakMap(), ZE = {
    ByteParser: I
  }, ZE;
}
var XE, Ll;
function dL() {
  var U, _, q, X, nA, Yf;
  if (Ll) return XE;
  Ll = 1;
  const { webidl: e } = et(), { DOMException: A } = Bs(), { URLSerializer: t } = Wt(), { getGlobalOrigin: s } = sn(), { staticPropertyDescriptors: r, states: o, opcodes: n, emptyBuffer: g } = En(), {
    kWebSocketURL: i,
    kReadyState: E,
    kController: a,
    kBinaryType: Q,
    kResponse: c,
    kSentClose: h,
    kByteParser: u
  } = ji(), { isEstablished: I, isClosing: C, isValidSubprotocol: f, failWebsocketConnection: B, fireEvent: l } = Qc(), { establishWebSocketConnection: y } = hL(), { WebsocketFrameSend: d } = Gf(), { ByteParser: p } = uL(), { kEnumerableProperty: R, isBlobLike: D } = vA, { getGlobalDispatcher: b } = an, { types: M } = le;
  let F = !1;
  const P = class P extends EventTarget {
    /**
     * @param {string} url
     * @param {string|string[]} protocols
     */
    constructor(v, Y = []) {
      super();
      YA(this, nA);
      YA(this, U, {
        open: null,
        error: null,
        close: null,
        message: null
      });
      YA(this, _, 0);
      YA(this, q, "");
      YA(this, X, "");
      e.argumentLengthCheck(arguments, 1, { header: "WebSocket constructor" }), F || (F = !0, process.emitWarning("WebSockets are experimental, expect them to change at any time.", {
        code: "UNDICI-WS"
      }));
      const w = e.converters["DOMString or sequence<DOMString> or WebSocketInit"](Y);
      v = e.converters.USVString(v), Y = w.protocols;
      const k = s();
      let N;
      try {
        N = new URL(v, k);
      } catch (O) {
        throw new A(O, "SyntaxError");
      }
      if (N.protocol === "http:" ? N.protocol = "ws:" : N.protocol === "https:" && (N.protocol = "wss:"), N.protocol !== "ws:" && N.protocol !== "wss:")
        throw new A(
          `Expected a ws: or wss: protocol, got ${N.protocol}`,
          "SyntaxError"
        );
      if (N.hash || N.href.endsWith("#"))
        throw new A("Got fragment", "SyntaxError");
      if (typeof Y == "string" && (Y = [Y]), Y.length !== new Set(Y.map((O) => O.toLowerCase())).size)
        throw new A("Invalid Sec-WebSocket-Protocol value", "SyntaxError");
      if (Y.length > 0 && !Y.every((O) => f(O)))
        throw new A("Invalid Sec-WebSocket-Protocol value", "SyntaxError");
      this[i] = new URL(N.href), this[a] = y(
        N,
        Y,
        this,
        (O) => ae(this, nA, Yf).call(this, O),
        w
      ), this[E] = P.CONNECTING, this[Q] = "blob";
    }
    /**
     * @see https://websockets.spec.whatwg.org/#dom-websocket-close
     * @param {number|undefined} code
     * @param {string|undefined} reason
     */
    close(v = void 0, Y = void 0) {
      if (e.brandCheck(this, P), v !== void 0 && (v = e.converters["unsigned short"](v, { clamp: !0 })), Y !== void 0 && (Y = e.converters.USVString(Y)), v !== void 0 && v !== 1e3 && (v < 3e3 || v > 4999))
        throw new A("invalid code", "InvalidAccessError");
      let w = 0;
      if (Y !== void 0 && (w = Buffer.byteLength(Y), w > 123))
        throw new A(
          `Reason must be less than 123 bytes; received ${w}`,
          "SyntaxError"
        );
      if (!(this[E] === P.CLOSING || this[E] === P.CLOSED)) if (!I(this))
        B(this, "Connection was closed before it was established."), this[E] = P.CLOSING;
      else if (C(this))
        this[E] = P.CLOSING;
      else {
        const k = new d();
        v !== void 0 && Y === void 0 ? (k.frameData = Buffer.allocUnsafe(2), k.frameData.writeUInt16BE(v, 0)) : v !== void 0 && Y !== void 0 ? (k.frameData = Buffer.allocUnsafe(2 + w), k.frameData.writeUInt16BE(v, 0), k.frameData.write(Y, 2, "utf-8")) : k.frameData = g, this[c].socket.write(k.createFrame(n.CLOSE), (O) => {
          O || (this[h] = !0);
        }), this[E] = o.CLOSING;
      }
    }
    /**
     * @see https://websockets.spec.whatwg.org/#dom-websocket-send
     * @param {NodeJS.TypedArray|ArrayBuffer|Blob|string} data
     */
    send(v) {
      if (e.brandCheck(this, P), e.argumentLengthCheck(arguments, 1, { header: "WebSocket.send" }), v = e.converters.WebSocketSendData(v), this[E] === P.CONNECTING)
        throw new A("Sent before connected.", "InvalidStateError");
      if (!I(this) || C(this))
        return;
      const Y = this[c].socket;
      if (typeof v == "string") {
        const w = Buffer.from(v), N = new d(w).createFrame(n.TEXT);
        uA(this, _, S(this, _) + w.byteLength), Y.write(N, () => {
          uA(this, _, S(this, _) - w.byteLength);
        });
      } else if (M.isArrayBuffer(v)) {
        const w = Buffer.from(v), N = new d(w).createFrame(n.BINARY);
        uA(this, _, S(this, _) + w.byteLength), Y.write(N, () => {
          uA(this, _, S(this, _) - w.byteLength);
        });
      } else if (ArrayBuffer.isView(v)) {
        const w = Buffer.from(v, v.byteOffset, v.byteLength), N = new d(w).createFrame(n.BINARY);
        uA(this, _, S(this, _) + w.byteLength), Y.write(N, () => {
          uA(this, _, S(this, _) - w.byteLength);
        });
      } else if (D(v)) {
        const w = new d();
        v.arrayBuffer().then((k) => {
          const N = Buffer.from(k);
          w.frameData = N;
          const O = w.createFrame(n.BINARY);
          uA(this, _, S(this, _) + N.byteLength), Y.write(O, () => {
            uA(this, _, S(this, _) - N.byteLength);
          });
        });
      }
    }
    get readyState() {
      return e.brandCheck(this, P), this[E];
    }
    get bufferedAmount() {
      return e.brandCheck(this, P), S(this, _);
    }
    get url() {
      return e.brandCheck(this, P), t(this[i]);
    }
    get extensions() {
      return e.brandCheck(this, P), S(this, X);
    }
    get protocol() {
      return e.brandCheck(this, P), S(this, q);
    }
    get onopen() {
      return e.brandCheck(this, P), S(this, U).open;
    }
    set onopen(v) {
      e.brandCheck(this, P), S(this, U).open && this.removeEventListener("open", S(this, U).open), typeof v == "function" ? (S(this, U).open = v, this.addEventListener("open", v)) : S(this, U).open = null;
    }
    get onerror() {
      return e.brandCheck(this, P), S(this, U).error;
    }
    set onerror(v) {
      e.brandCheck(this, P), S(this, U).error && this.removeEventListener("error", S(this, U).error), typeof v == "function" ? (S(this, U).error = v, this.addEventListener("error", v)) : S(this, U).error = null;
    }
    get onclose() {
      return e.brandCheck(this, P), S(this, U).close;
    }
    set onclose(v) {
      e.brandCheck(this, P), S(this, U).close && this.removeEventListener("close", S(this, U).close), typeof v == "function" ? (S(this, U).close = v, this.addEventListener("close", v)) : S(this, U).close = null;
    }
    get onmessage() {
      return e.brandCheck(this, P), S(this, U).message;
    }
    set onmessage(v) {
      e.brandCheck(this, P), S(this, U).message && this.removeEventListener("message", S(this, U).message), typeof v == "function" ? (S(this, U).message = v, this.addEventListener("message", v)) : S(this, U).message = null;
    }
    get binaryType() {
      return e.brandCheck(this, P), this[Q];
    }
    set binaryType(v) {
      e.brandCheck(this, P), v !== "blob" && v !== "arraybuffer" ? this[Q] = "blob" : this[Q] = v;
    }
  };
  U = new WeakMap(), _ = new WeakMap(), q = new WeakMap(), X = new WeakMap(), nA = new WeakSet(), /**
   * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol
   */
  Yf = function(v) {
    this[c] = v;
    const Y = new p(this);
    Y.on("drain", function() {
      this.ws[c].socket.resume();
    }), v.socket.ws = this, this[u] = Y, this[E] = o.OPEN;
    const w = v.headersList.get("sec-websocket-extensions");
    w !== null && uA(this, X, w);
    const k = v.headersList.get("sec-websocket-protocol");
    k !== null && uA(this, q, k), l("open", this);
  };
  let z = P;
  return z.CONNECTING = z.prototype.CONNECTING = o.CONNECTING, z.OPEN = z.prototype.OPEN = o.OPEN, z.CLOSING = z.prototype.CLOSING = o.CLOSING, z.CLOSED = z.prototype.CLOSED = o.CLOSED, Object.defineProperties(z.prototype, {
    CONNECTING: r,
    OPEN: r,
    CLOSING: r,
    CLOSED: r,
    url: R,
    readyState: R,
    bufferedAmount: R,
    onopen: R,
    onerror: R,
    onclose: R,
    close: R,
    onmessage: R,
    binaryType: R,
    send: R,
    extensions: R,
    protocol: R,
    [Symbol.toStringTag]: {
      value: "WebSocket",
      writable: !1,
      enumerable: !1,
      configurable: !0
    }
  }), Object.defineProperties(z, {
    CONNECTING: r,
    OPEN: r,
    CLOSING: r,
    CLOSED: r
  }), e.converters["sequence<DOMString>"] = e.sequenceConverter(
    e.converters.DOMString
  ), e.converters["DOMString or sequence<DOMString>"] = function(L) {
    return e.util.Type(L) === "Object" && Symbol.iterator in L ? e.converters["sequence<DOMString>"](L) : e.converters.DOMString(L);
  }, e.converters.WebSocketInit = e.dictionaryConverter([
    {
      key: "protocols",
      converter: e.converters["DOMString or sequence<DOMString>"],
      get defaultValue() {
        return [];
      }
    },
    {
      key: "dispatcher",
      converter: (L) => L,
      get defaultValue() {
        return b();
      }
    },
    {
      key: "headers",
      converter: e.nullableConverter(e.converters.HeadersInit)
    }
  ]), e.converters["DOMString or sequence<DOMString> or WebSocketInit"] = function(L) {
    return e.util.Type(L) === "Object" && !(Symbol.iterator in L) ? e.converters.WebSocketInit(L) : { protocols: e.converters["DOMString or sequence<DOMString>"](L) };
  }, e.converters.WebSocketSendData = function(L) {
    if (e.util.Type(L) === "Object") {
      if (D(L))
        return e.converters.Blob(L, { strict: !1 });
      if (ArrayBuffer.isView(L) || M.isAnyArrayBuffer(L))
        return e.converters.BufferSource(L);
    }
    return e.converters.USVString(L);
  }, XE = {
    WebSocket: z
  }, XE;
}
const fL = _i, Jf = rc, vf = _A, pL = on, yL = RN, wL = $i, is = vA, { InvalidArgumentError: ri } = vf, ro = eo, DL = Wi, RL = mf, mL = JU, kL = kf, FL = If, bL = zU, NL = rL, { getGlobalDispatcher: Hf, setGlobalDispatcher: SL } = an, UL = nL, LL = Nd, TL = oc;
let kQ;
try {
  require("crypto"), kQ = !0;
} catch {
  kQ = !1;
}
Object.assign(Jf.prototype, ro);
LA.Dispatcher = Jf;
LA.Client = fL;
LA.Pool = pL;
LA.BalancedPool = yL;
LA.Agent = wL;
LA.ProxyAgent = bL;
LA.RetryHandler = NL;
LA.DecoratorHandler = UL;
LA.RedirectHandler = LL;
LA.createRedirectInterceptor = TL;
LA.buildConnector = DL;
LA.errors = vf;
function Qn(e) {
  return (A, t, s) => {
    if (typeof t == "function" && (s = t, t = null), !A || typeof A != "string" && typeof A != "object" && !(A instanceof URL))
      throw new ri("invalid url");
    if (t != null && typeof t != "object")
      throw new ri("invalid opts");
    if (t && t.path != null) {
      if (typeof t.path != "string")
        throw new ri("invalid opts.path");
      let n = t.path;
      t.path.startsWith("/") || (n = `/${n}`), A = new URL(is.parseOrigin(A).origin + n);
    } else
      t || (t = typeof A == "object" ? A : {}), A = is.parseURL(A);
    const { agent: r, dispatcher: o = Hf() } = t;
    if (r)
      throw new ri("unsupported opts.agent. Did you mean opts.client?");
    return e.call(o, {
      ...t,
      origin: A.origin,
      path: A.search ? `${A.pathname}${A.search}` : A.pathname,
      method: t.method || (t.body ? "PUT" : "GET")
    }, s);
  };
}
LA.setGlobalDispatcher = SL;
LA.getGlobalDispatcher = Hf;
if (is.nodeMajor > 16 || is.nodeMajor === 16 && is.nodeMinor >= 8) {
  let e = null;
  LA.fetch = async function(n) {
    e || (e = ac().fetch);
    try {
      return await e(...arguments);
    } catch (g) {
      throw typeof g == "object" && Error.captureStackTrace(g, this), g;
    }
  }, LA.Headers = to().Headers, LA.Response = gc().Response, LA.Request = Ki().Request, LA.FormData = tc().FormData, LA.File = ec().File, LA.FileReader = EL().FileReader;
  const { setGlobalOrigin: A, getGlobalOrigin: t } = sn();
  LA.setGlobalOrigin = A, LA.getGlobalOrigin = t;
  const { CacheStorage: s } = CL(), { kConstruct: r } = Ec();
  LA.caches = new s(r);
}
if (is.nodeMajor >= 16) {
  const { deleteCookie: e, getCookies: A, getSetCookies: t, setCookie: s } = lL();
  LA.deleteCookie = e, LA.getCookies = A, LA.getSetCookies = t, LA.setCookie = s;
  const { parseMIMEType: r, serializeAMimeType: o } = Wt();
  LA.parseMIMEType = r, LA.serializeAMimeType = o;
}
if (is.nodeMajor >= 18 && kQ) {
  const { WebSocket: e } = dL();
  LA.WebSocket = e;
}
LA.request = Qn(ro.request);
LA.stream = Qn(ro.stream);
LA.pipeline = Qn(ro.pipeline);
LA.connect = Qn(ro.connect);
LA.upgrade = Qn(ro.upgrade);
LA.MockClient = RL;
LA.MockPool = kL;
LA.MockAgent = mL;
LA.mockErrors = FL;
var ML = rA && rA.__createBinding || (Object.create ? function(e, A, t, s) {
  s === void 0 && (s = t);
  var r = Object.getOwnPropertyDescriptor(A, t);
  (!r || ("get" in r ? !A.__esModule : r.writable || r.configurable)) && (r = { enumerable: !0, get: function() {
    return A[t];
  } }), Object.defineProperty(e, s, r);
} : function(e, A, t, s) {
  s === void 0 && (s = t), e[s] = A[t];
}), GL = rA && rA.__setModuleDefault || (Object.create ? function(e, A) {
  Object.defineProperty(e, "default", { enumerable: !0, value: A });
} : function(e, A) {
  e.default = A;
}), YL = rA && rA.__importStar || function(e) {
  if (e && e.__esModule) return e;
  var A = {};
  if (e != null) for (var t in e) t !== "default" && Object.prototype.hasOwnProperty.call(e, t) && ML(A, e, t);
  return GL(A, e), A;
}, JL = rA && rA.__awaiter || function(e, A, t, s) {
  function r(o) {
    return o instanceof t ? o : new t(function(n) {
      n(o);
    });
  }
  return new (t || (t = Promise))(function(o, n) {
    function g(a) {
      try {
        E(s.next(a));
      } catch (Q) {
        n(Q);
      }
    }
    function i(a) {
      try {
        E(s.throw(a));
      } catch (Q) {
        n(Q);
      }
    }
    function E(a) {
      a.done ? o(a.value) : r(a.value).then(g, i);
    }
    E((s = s.apply(e, A || [])).next());
  });
};
Object.defineProperty(lt, "__esModule", { value: !0 });
lt.getApiBaseUrl = lt.getProxyFetch = lt.getProxyAgentDispatcher = lt.getProxyAgent = lt.getAuthString = void 0;
const Vf = YL(de), vL = LA;
function HL(e, A) {
  if (!e && !A.auth)
    throw new Error("Parameter token or opts.auth is required");
  if (e && A.auth)
    throw new Error("Parameters token and opts.auth may not both be specified");
  return typeof A.auth == "string" ? A.auth : `token ${e}`;
}
lt.getAuthString = HL;
function VL(e) {
  return new Vf.HttpClient().getAgent(e);
}
lt.getProxyAgent = VL;
function xf(e) {
  return new Vf.HttpClient().getAgentDispatcher(e);
}
lt.getProxyAgentDispatcher = xf;
function xL(e) {
  const A = xf(e);
  return (s, r) => JL(this, void 0, void 0, function* () {
    return (0, vL.fetch)(s, Object.assign(Object.assign({}, r), { dispatcher: A }));
  });
}
lt.getProxyFetch = xL;
function OL() {
  return process.env.GITHUB_API_URL || "https://api.github.com";
}
lt.getApiBaseUrl = OL;
function zi() {
  return typeof navigator == "object" && "userAgent" in navigator ? navigator.userAgent : typeof process == "object" && process.version !== void 0 ? `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})` : "<environment undetectable>";
}
var Ag = { exports: {} }, PL = Of;
function Of(e, A, t, s) {
  if (typeof t != "function")
    throw new Error("method for before hook must be a function");
  return s || (s = {}), Array.isArray(A) ? A.reverse().reduce(function(r, o) {
    return Of.bind(null, e, o, r, s);
  }, t)() : Promise.resolve().then(function() {
    return e.registry[A] ? e.registry[A].reduce(function(r, o) {
      return o.hook.bind(null, r, s);
    }, t)() : t(s);
  });
}
var WL = qL;
function qL(e, A, t, s) {
  var r = s;
  e.registry[t] || (e.registry[t] = []), A === "before" && (s = function(o, n) {
    return Promise.resolve().then(r.bind(null, n)).then(o.bind(null, n));
  }), A === "after" && (s = function(o, n) {
    var g;
    return Promise.resolve().then(o.bind(null, n)).then(function(i) {
      return g = i, r(g, n);
    }).then(function() {
      return g;
    });
  }), A === "error" && (s = function(o, n) {
    return Promise.resolve().then(o.bind(null, n)).catch(function(g) {
      return r(g, n);
    });
  }), e.registry[t].push({
    hook: s,
    orig: r
  });
}
var _L = $L;
function $L(e, A, t) {
  if (e.registry[A]) {
    var s = e.registry[A].map(function(r) {
      return r.orig;
    }).indexOf(t);
    s !== -1 && e.registry[A].splice(s, 1);
  }
}
var Pf = PL, ZL = WL, XL = _L, Tl = Function.bind, Ml = Tl.bind(Tl);
function Wf(e, A, t) {
  var s = Ml(XL, null).apply(
    null,
    t ? [A, t] : [A]
  );
  e.api = { remove: s }, e.remove = s, ["before", "error", "after", "wrap"].forEach(function(r) {
    var o = t ? [A, r, t] : [A, r];
    e[r] = e.api[r] = Ml(ZL, null).apply(null, o);
  });
}
function KL() {
  var e = "h", A = {
    registry: {}
  }, t = Pf.bind(null, A, e);
  return Wf(t, A, e), t;
}
function qf() {
  var e = {
    registry: {}
  }, A = Pf.bind(null, e);
  return Wf(A, e), A;
}
var Gl = !1;
function so() {
  return Gl || (console.warn(
    '[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'
  ), Gl = !0), qf();
}
so.Singular = KL.bind();
so.Collection = qf.bind();
Ag.exports = so;
Ag.exports.Hook = so;
Ag.exports.Singular = so.Singular;
var jL = Ag.exports.Collection = so.Collection, zL = "9.0.6", AT = `octokit-endpoint.js/${zL} ${zi()}`, eT = {
  method: "GET",
  baseUrl: "https://api.github.com",
  headers: {
    accept: "application/vnd.github.v3+json",
    "user-agent": AT
  },
  mediaType: {
    format: ""
  }
};
function tT(e) {
  return e ? Object.keys(e).reduce((A, t) => (A[t.toLowerCase()] = e[t], A), {}) : {};
}
function rT(e) {
  if (typeof e != "object" || e === null || Object.prototype.toString.call(e) !== "[object Object]")
    return !1;
  const A = Object.getPrototypeOf(e);
  if (A === null)
    return !0;
  const t = Object.prototype.hasOwnProperty.call(A, "constructor") && A.constructor;
  return typeof t == "function" && t instanceof t && Function.prototype.call(t) === Function.prototype.call(e);
}
function _f(e, A) {
  const t = Object.assign({}, e);
  return Object.keys(A).forEach((s) => {
    rT(A[s]) ? s in e ? t[s] = _f(e[s], A[s]) : Object.assign(t, { [s]: A[s] }) : Object.assign(t, { [s]: A[s] });
  }), t;
}
function Yl(e) {
  for (const A in e)
    e[A] === void 0 && delete e[A];
  return e;
}
function FQ(e, A, t) {
  var r;
  if (typeof A == "string") {
    let [o, n] = A.split(" ");
    t = Object.assign(n ? { method: o, url: n } : { url: o }, t);
  } else
    t = Object.assign({}, A);
  t.headers = tT(t.headers), Yl(t), Yl(t.headers);
  const s = _f(e || {}, t);
  return t.url === "/graphql" && (e && ((r = e.mediaType.previews) != null && r.length) && (s.mediaType.previews = e.mediaType.previews.filter(
    (o) => !s.mediaType.previews.includes(o)
  ).concat(s.mediaType.previews)), s.mediaType.previews = (s.mediaType.previews || []).map((o) => o.replace(/-preview/, ""))), s;
}
function sT(e, A) {
  const t = /\?/.test(e) ? "&" : "?", s = Object.keys(A);
  return s.length === 0 ? e : e + t + s.map((r) => r === "q" ? "q=" + A.q.split("+").map(encodeURIComponent).join("+") : `${r}=${encodeURIComponent(A[r])}`).join("&");
}
var oT = /\{[^{}}]+\}/g;
function nT(e) {
  return e.replace(new RegExp("(?:^\\W+)|(?:(?<!\\W)\\W+$)", "g"), "").split(/,/);
}
function iT(e) {
  const A = e.match(oT);
  return A ? A.map(nT).reduce((t, s) => t.concat(s), []) : [];
}
function Jl(e, A) {
  const t = { __proto__: null };
  for (const s of Object.keys(e))
    A.indexOf(s) === -1 && (t[s] = e[s]);
  return t;
}
function $f(e) {
  return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(A) {
    return /%[0-9A-Fa-f]/.test(A) || (A = encodeURI(A).replace(/%5B/g, "[").replace(/%5D/g, "]")), A;
  }).join("");
}
function Ls(e) {
  return encodeURIComponent(e).replace(/[!'()*]/g, function(A) {
    return "%" + A.charCodeAt(0).toString(16).toUpperCase();
  });
}
function No(e, A, t) {
  return A = e === "+" || e === "#" ? $f(A) : Ls(A), t ? Ls(t) + "=" + A : A;
}
function ks(e) {
  return e != null;
}
function KE(e) {
  return e === ";" || e === "&" || e === "?";
}
function gT(e, A, t, s) {
  var r = e[t], o = [];
  if (ks(r) && r !== "")
    if (typeof r == "string" || typeof r == "number" || typeof r == "boolean")
      r = r.toString(), s && s !== "*" && (r = r.substring(0, parseInt(s, 10))), o.push(
        No(A, r, KE(A) ? t : "")
      );
    else if (s === "*")
      Array.isArray(r) ? r.filter(ks).forEach(function(n) {
        o.push(
          No(A, n, KE(A) ? t : "")
        );
      }) : Object.keys(r).forEach(function(n) {
        ks(r[n]) && o.push(No(A, r[n], n));
      });
    else {
      const n = [];
      Array.isArray(r) ? r.filter(ks).forEach(function(g) {
        n.push(No(A, g));
      }) : Object.keys(r).forEach(function(g) {
        ks(r[g]) && (n.push(Ls(g)), n.push(No(A, r[g].toString())));
      }), KE(A) ? o.push(Ls(t) + "=" + n.join(",")) : n.length !== 0 && o.push(n.join(","));
    }
  else
    A === ";" ? ks(r) && o.push(Ls(t)) : r === "" && (A === "&" || A === "?") ? o.push(Ls(t) + "=") : r === "" && o.push("");
  return o;
}
function aT(e) {
  return {
    expand: ET.bind(null, e)
  };
}
function ET(e, A) {
  var t = ["+", "#", ".", "/", ";", "?", "&"];
  return e = e.replace(
    /\{([^\{\}]+)\}|([^\{\}]+)/g,
    function(s, r, o) {
      if (r) {
        let g = "";
        const i = [];
        if (t.indexOf(r.charAt(0)) !== -1 && (g = r.charAt(0), r = r.substr(1)), r.split(/,/g).forEach(function(E) {
          var a = /([^:\*]*)(?::(\d+)|(\*))?/.exec(E);
          i.push(gT(A, g, a[1], a[2] || a[3]));
        }), g && g !== "+") {
          var n = ",";
          return g === "?" ? n = "&" : g !== "#" && (n = g), (i.length !== 0 ? g : "") + i.join(n);
        } else
          return i.join(",");
      } else
        return $f(o);
    }
  ), e === "/" ? e : e.replace(/\/$/, "");
}
function Zf(e) {
  var a;
  let A = e.method.toUpperCase(), t = (e.url || "/").replace(/:([a-z]\w+)/g, "{$1}"), s = Object.assign({}, e.headers), r, o = Jl(e, [
    "method",
    "baseUrl",
    "url",
    "headers",
    "request",
    "mediaType"
  ]);
  const n = iT(t);
  t = aT(t).expand(o), /^http/.test(t) || (t = e.baseUrl + t);
  const g = Object.keys(e).filter((Q) => n.includes(Q)).concat("baseUrl"), i = Jl(o, g);
  if (!/application\/octet-stream/i.test(s.accept) && (e.mediaType.format && (s.accept = s.accept.split(/,/).map(
    (Q) => Q.replace(
      /application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,
      `application/vnd$1$2.${e.mediaType.format}`
    )
  ).join(",")), t.endsWith("/graphql") && (a = e.mediaType.previews) != null && a.length)) {
    const Q = s.accept.match(new RegExp("(?<![\\w-])[\\w-]+(?=-preview)", "g")) || [];
    s.accept = Q.concat(e.mediaType.previews).map((c) => {
      const h = e.mediaType.format ? `.${e.mediaType.format}` : "+json";
      return `application/vnd.github.${c}-preview${h}`;
    }).join(",");
  }
  return ["GET", "HEAD"].includes(A) ? t = sT(t, i) : "data" in i ? r = i.data : Object.keys(i).length && (r = i), !s["content-type"] && typeof r < "u" && (s["content-type"] = "application/json; charset=utf-8"), ["PATCH", "PUT"].includes(A) && typeof r > "u" && (r = ""), Object.assign(
    { method: A, url: t, headers: s },
    typeof r < "u" ? { body: r } : null,
    e.request ? { request: e.request } : null
  );
}
function QT(e, A, t) {
  return Zf(FQ(e, A, t));
}
function Xf(e, A) {
  const t = FQ(e, A), s = QT.bind(null, t);
  return Object.assign(s, {
    DEFAULTS: t,
    defaults: Xf.bind(null, t),
    merge: FQ.bind(null, t),
    parse: Zf
  });
}
var cT = Xf(null, eT);
class vl extends Error {
  constructor(A) {
    super(A), Error.captureStackTrace && Error.captureStackTrace(this, this.constructor), this.name = "Deprecation";
  }
}
var cc = { exports: {} }, CT = Kf;
function Kf(e, A) {
  if (e && A) return Kf(e)(A);
  if (typeof e != "function")
    throw new TypeError("need wrapper function");
  return Object.keys(e).forEach(function(s) {
    t[s] = e[s];
  }), t;
  function t() {
    for (var s = new Array(arguments.length), r = 0; r < s.length; r++)
      s[r] = arguments[r];
    var o = e.apply(this, s), n = s[s.length - 1];
    return typeof o == "function" && o !== n && Object.keys(n).forEach(function(g) {
      o[g] = n[g];
    }), o;
  }
}
var jf = CT;
cc.exports = jf(li);
cc.exports.strict = jf(zf);
li.proto = li(function() {
  Object.defineProperty(Function.prototype, "once", {
    value: function() {
      return li(this);
    },
    configurable: !0
  }), Object.defineProperty(Function.prototype, "onceStrict", {
    value: function() {
      return zf(this);
    },
    configurable: !0
  });
});
function li(e) {
  var A = function() {
    return A.called ? A.value : (A.called = !0, A.value = e.apply(this, arguments));
  };
  return A.called = !1, A;
}
function zf(e) {
  var A = function() {
    if (A.called)
      throw new Error(A.onceError);
    return A.called = !0, A.value = e.apply(this, arguments);
  }, t = e.name || "Function wrapped with `once`";
  return A.onceError = t + " shouldn't be called more than once", A.called = !1, A;
}
var BT = cc.exports;
const Ap = /* @__PURE__ */ hp(BT);
var IT = Ap((e) => console.warn(e)), lT = Ap((e) => console.warn(e)), So = class extends Error {
  constructor(e, A, t) {
    super(e), Error.captureStackTrace && Error.captureStackTrace(this, this.constructor), this.name = "HttpError", this.status = A;
    let s;
    "headers" in t && typeof t.headers < "u" && (s = t.headers), "response" in t && (this.response = t.response, s = t.response.headers);
    const r = Object.assign({}, t.request);
    t.request.headers.authorization && (r.headers = Object.assign({}, t.request.headers, {
      authorization: t.request.headers.authorization.replace(
        new RegExp("(?<! ) .*$"),
        " [REDACTED]"
      )
    })), r.url = r.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]"), this.request = r, Object.defineProperty(this, "code", {
      get() {
        return IT(
          new vl(
            "[@octokit/request-error] `error.code` is deprecated, use `error.status`."
          )
        ), A;
      }
    }), Object.defineProperty(this, "headers", {
      get() {
        return lT(
          new vl(
            "[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."
          )
        ), s || {};
      }
    });
  }
}, hT = "8.4.1";
function uT(e) {
  if (typeof e != "object" || e === null || Object.prototype.toString.call(e) !== "[object Object]")
    return !1;
  const A = Object.getPrototypeOf(e);
  if (A === null)
    return !0;
  const t = Object.prototype.hasOwnProperty.call(A, "constructor") && A.constructor;
  return typeof t == "function" && t instanceof t && Function.prototype.call(t) === Function.prototype.call(e);
}
function dT(e) {
  return e.arrayBuffer();
}
function Hl(e) {
  var g, i, E, a;
  const A = e.request && e.request.log ? e.request.log : console, t = ((g = e.request) == null ? void 0 : g.parseSuccessResponseBody) !== !1;
  (uT(e.body) || Array.isArray(e.body)) && (e.body = JSON.stringify(e.body));
  let s = {}, r, o, { fetch: n } = globalThis;
  if ((i = e.request) != null && i.fetch && (n = e.request.fetch), !n)
    throw new Error(
      "fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing"
    );
  return n(e.url, {
    method: e.method,
    body: e.body,
    redirect: (E = e.request) == null ? void 0 : E.redirect,
    headers: e.headers,
    signal: (a = e.request) == null ? void 0 : a.signal,
    // duplex must be set if request.body is ReadableStream or Async Iterables.
    // See https://fetch.spec.whatwg.org/#dom-requestinit-duplex.
    ...e.body && { duplex: "half" }
  }).then(async (Q) => {
    o = Q.url, r = Q.status;
    for (const c of Q.headers)
      s[c[0]] = c[1];
    if ("deprecation" in s) {
      const c = s.link && s.link.match(/<([^<>]+)>; rel="deprecation"/), h = c && c.pop();
      A.warn(
        `[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${s.sunset}${h ? `. See ${h}` : ""}`
      );
    }
    if (!(r === 204 || r === 205)) {
      if (e.method === "HEAD") {
        if (r < 400)
          return;
        throw new So(Q.statusText, r, {
          response: {
            url: o,
            status: r,
            headers: s,
            data: void 0
          },
          request: e
        });
      }
      if (r === 304)
        throw new So("Not modified", r, {
          response: {
            url: o,
            status: r,
            headers: s,
            data: await jE(Q)
          },
          request: e
        });
      if (r >= 400) {
        const c = await jE(Q);
        throw new So(fT(c), r, {
          response: {
            url: o,
            status: r,
            headers: s,
            data: c
          },
          request: e
        });
      }
      return t ? await jE(Q) : Q.body;
    }
  }).then((Q) => ({
    status: r,
    url: o,
    headers: s,
    data: Q
  })).catch((Q) => {
    if (Q instanceof So)
      throw Q;
    if (Q.name === "AbortError")
      throw Q;
    let c = Q.message;
    throw Q.name === "TypeError" && "cause" in Q && (Q.cause instanceof Error ? c = Q.cause.message : typeof Q.cause == "string" && (c = Q.cause)), new So(c, 500, {
      request: e
    });
  });
}
async function jE(e) {
  const A = e.headers.get("content-type");
  return /application\/json/.test(A) ? e.json().catch(() => e.text()).catch(() => "") : !A || /^text\/|charset=utf-8$/.test(A) ? e.text() : dT(e);
}
function fT(e) {
  if (typeof e == "string")
    return e;
  let A;
  return "documentation_url" in e ? A = ` - ${e.documentation_url}` : A = "", "message" in e ? Array.isArray(e.errors) ? `${e.message}: ${e.errors.map(JSON.stringify).join(", ")}${A}` : `${e.message}${A}` : `Unknown error: ${JSON.stringify(e)}`;
}
function bQ(e, A) {
  const t = e.defaults(A);
  return Object.assign(function(r, o) {
    const n = t.merge(r, o);
    if (!n.request || !n.request.hook)
      return Hl(t.parse(n));
    const g = (i, E) => Hl(
      t.parse(t.merge(i, E))
    );
    return Object.assign(g, {
      endpoint: t,
      defaults: bQ.bind(null, t)
    }), n.request.hook(g, n);
  }, {
    endpoint: t,
    defaults: bQ.bind(null, t)
  });
}
var NQ = bQ(cT, {
  headers: {
    "user-agent": `octokit-request.js/${hT} ${zi()}`
  }
}), pT = "7.0.2";
function yT(e) {
  return `Request failed due to following response errors:
` + e.errors.map((A) => ` - ${A.message}`).join(`
`);
}
var wT = class extends Error {
  constructor(e, A, t) {
    super(yT(t)), this.request = e, this.headers = A, this.response = t, this.name = "GraphqlResponseError", this.errors = t.errors, this.data = t.data, Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);
  }
}, DT = [
  "method",
  "baseUrl",
  "url",
  "headers",
  "request",
  "query",
  "mediaType"
], RT = ["query", "method", "url"], Vl = /\/api\/v3\/?$/;
function mT(e, A, t) {
  if (t) {
    if (typeof A == "string" && "query" in t)
      return Promise.reject(
        new Error('[@octokit/graphql] "query" cannot be used as variable name')
      );
    for (const n in t)
      if (RT.includes(n))
        return Promise.reject(
          new Error(
            `[@octokit/graphql] "${n}" cannot be used as variable name`
          )
        );
  }
  const s = typeof A == "string" ? Object.assign({ query: A }, t) : A, r = Object.keys(
    s
  ).reduce((n, g) => DT.includes(g) ? (n[g] = s[g], n) : (n.variables || (n.variables = {}), n.variables[g] = s[g], n), {}), o = s.baseUrl || e.endpoint.DEFAULTS.baseUrl;
  return Vl.test(o) && (r.url = o.replace(Vl, "/api/graphql")), e(r).then((n) => {
    if (n.data.errors) {
      const g = {};
      for (const i of Object.keys(n.headers))
        g[i] = n.headers[i];
      throw new wT(
        r,
        g,
        n.data
      );
    }
    return n.data.data;
  });
}
function Cc(e, A) {
  const t = e.defaults(A);
  return Object.assign((r, o) => mT(t, r, o), {
    defaults: Cc.bind(null, t),
    endpoint: t.endpoint
  });
}
Cc(NQ, {
  headers: {
    "user-agent": `octokit-graphql.js/${pT} ${zi()}`
  },
  method: "POST",
  url: "/graphql"
});
function kT(e) {
  return Cc(e, {
    method: "POST",
    url: "/graphql"
  });
}
var FT = /^v1\./, bT = /^ghs_/, NT = /^ghu_/;
async function ST(e) {
  const A = e.split(/\./).length === 3, t = FT.test(e) || bT.test(e), s = NT.test(e);
  return {
    type: "token",
    token: e,
    tokenType: A ? "app" : t ? "installation" : s ? "user-to-server" : "oauth"
  };
}
function UT(e) {
  return e.split(/\./).length === 3 ? `bearer ${e}` : `token ${e}`;
}
async function LT(e, A, t, s) {
  const r = A.endpoint.merge(
    t,
    s
  );
  return r.headers.authorization = UT(e), A(r);
}
var TT = function(A) {
  if (!A)
    throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");
  if (typeof A != "string")
    throw new Error(
      "[@octokit/auth-token] Token passed to createTokenAuth is not a string"
    );
  return A = A.replace(/^(token|bearer) +/i, ""), Object.assign(ST.bind(null, A), {
    hook: LT.bind(null, A)
  });
}, ep = "5.1.0", xl = () => {
}, MT = console.warn.bind(console), GT = console.error.bind(console), Ol = `octokit-core.js/${ep} ${zi()}`, as, YT = (as = class {
  static defaults(A) {
    return class extends this {
      constructor(...s) {
        const r = s[0] || {};
        if (typeof A == "function") {
          super(A(r));
          return;
        }
        super(
          Object.assign(
            {},
            A,
            r,
            r.userAgent && A.userAgent ? {
              userAgent: `${r.userAgent} ${A.userAgent}`
            } : null
          )
        );
      }
    };
  }
  /**
   * Attach a plugin (or many) to your Octokit instance.
   *
   * @example
   * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)
   */
  static plugin(...A) {
    var r;
    const t = this.plugins;
    return r = class extends this {
    }, r.plugins = t.concat(
      A.filter((n) => !t.includes(n))
    ), r;
  }
  constructor(A = {}) {
    const t = new jL(), s = {
      baseUrl: NQ.endpoint.DEFAULTS.baseUrl,
      headers: {},
      request: Object.assign({}, A.request, {
        // @ts-ignore internal usage only, no need to type
        hook: t.bind(null, "request")
      }),
      mediaType: {
        previews: [],
        format: ""
      }
    };
    if (s.headers["user-agent"] = A.userAgent ? `${A.userAgent} ${Ol}` : Ol, A.baseUrl && (s.baseUrl = A.baseUrl), A.previews && (s.mediaType.previews = A.previews), A.timeZone && (s.headers["time-zone"] = A.timeZone), this.request = NQ.defaults(s), this.graphql = kT(this.request).defaults(s), this.log = Object.assign(
      {
        debug: xl,
        info: xl,
        warn: MT,
        error: GT
      },
      A.log
    ), this.hook = t, A.authStrategy) {
      const { authStrategy: o, ...n } = A, g = o(
        Object.assign(
          {
            request: this.request,
            log: this.log,
            // we pass the current octokit instance as well as its constructor options
            // to allow for authentication strategies that return a new octokit instance
            // that shares the same internal state as the current one. The original
            // requirement for this was the "event-octokit" authentication strategy
            // of https://github.com/probot/octokit-auth-probot.
            octokit: this,
            octokitOptions: n
          },
          A.auth
        )
      );
      t.wrap("request", g.hook), this.auth = g;
    } else if (!A.auth)
      this.auth = async () => ({
        type: "unauthenticated"
      });
    else {
      const o = TT(A.auth);
      t.wrap("request", o.hook), this.auth = o;
    }
    const r = this.constructor;
    for (let o = 0; o < r.plugins.length; ++o)
      Object.assign(this, r.plugins[o](this, A));
  }
}, as.VERSION = ep, as.plugins = [], as);
const JT = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Octokit: YT
}, Symbol.toStringTag, { value: "Module" })), vT = /* @__PURE__ */ LQ(JT);
var tp = "10.4.1", HT = {
  actions: {
    addCustomLabelsToSelfHostedRunnerForOrg: [
      "POST /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    addCustomLabelsToSelfHostedRunnerForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"
    ],
    addSelectedRepoToOrgVariable: [
      "PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"
    ],
    approveWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"
    ],
    cancelWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"
    ],
    createEnvironmentVariable: [
      "POST /repositories/{repository_id}/environments/{environment_name}/variables"
    ],
    createOrUpdateEnvironmentSecret: [
      "PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"
    ],
    createOrUpdateOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}"],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"
    ],
    createOrgVariable: ["POST /orgs/{org}/actions/variables"],
    createRegistrationTokenForOrg: [
      "POST /orgs/{org}/actions/runners/registration-token"
    ],
    createRegistrationTokenForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/registration-token"
    ],
    createRemoveTokenForOrg: ["POST /orgs/{org}/actions/runners/remove-token"],
    createRemoveTokenForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/remove-token"
    ],
    createRepoVariable: ["POST /repos/{owner}/{repo}/actions/variables"],
    createWorkflowDispatch: [
      "POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"
    ],
    deleteActionsCacheById: [
      "DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"
    ],
    deleteActionsCacheByKey: [
      "DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"
    ],
    deleteArtifact: [
      "DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"
    ],
    deleteEnvironmentSecret: [
      "DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"
    ],
    deleteEnvironmentVariable: [
      "DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}"],
    deleteOrgVariable: ["DELETE /orgs/{org}/actions/variables/{name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"
    ],
    deleteRepoVariable: [
      "DELETE /repos/{owner}/{repo}/actions/variables/{name}"
    ],
    deleteSelfHostedRunnerFromOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}"
    ],
    deleteSelfHostedRunnerFromRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"
    ],
    deleteWorkflowRun: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],
    deleteWorkflowRunLogs: [
      "DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"
    ],
    disableSelectedRepositoryGithubActionsOrganization: [
      "DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"
    ],
    disableWorkflow: [
      "PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"
    ],
    downloadArtifact: [
      "GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"
    ],
    downloadJobLogsForWorkflowRun: [
      "GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"
    ],
    downloadWorkflowRunAttemptLogs: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"
    ],
    downloadWorkflowRunLogs: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"
    ],
    enableSelectedRepositoryGithubActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"
    ],
    enableWorkflow: [
      "PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"
    ],
    forceCancelWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"
    ],
    generateRunnerJitconfigForOrg: [
      "POST /orgs/{org}/actions/runners/generate-jitconfig"
    ],
    generateRunnerJitconfigForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"
    ],
    getActionsCacheList: ["GET /repos/{owner}/{repo}/actions/caches"],
    getActionsCacheUsage: ["GET /repos/{owner}/{repo}/actions/cache/usage"],
    getActionsCacheUsageByRepoForOrg: [
      "GET /orgs/{org}/actions/cache/usage-by-repository"
    ],
    getActionsCacheUsageForOrg: ["GET /orgs/{org}/actions/cache/usage"],
    getAllowedActionsOrganization: [
      "GET /orgs/{org}/actions/permissions/selected-actions"
    ],
    getAllowedActionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/selected-actions"
    ],
    getArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
    getCustomOidcSubClaimForRepo: [
      "GET /repos/{owner}/{repo}/actions/oidc/customization/sub"
    ],
    getEnvironmentPublicKey: [
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"
    ],
    getEnvironmentSecret: [
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"
    ],
    getEnvironmentVariable: [
      "GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}"
    ],
    getGithubActionsDefaultWorkflowPermissionsOrganization: [
      "GET /orgs/{org}/actions/permissions/workflow"
    ],
    getGithubActionsDefaultWorkflowPermissionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/workflow"
    ],
    getGithubActionsPermissionsOrganization: [
      "GET /orgs/{org}/actions/permissions"
    ],
    getGithubActionsPermissionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions"
    ],
    getJobForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],
    getOrgPublicKey: ["GET /orgs/{org}/actions/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}"],
    getOrgVariable: ["GET /orgs/{org}/actions/variables/{name}"],
    getPendingDeploymentsForRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"
    ],
    getRepoPermissions: [
      "GET /repos/{owner}/{repo}/actions/permissions",
      {},
      { renamed: ["actions", "getGithubActionsPermissionsRepository"] }
    ],
    getRepoPublicKey: ["GET /repos/{owner}/{repo}/actions/secrets/public-key"],
    getRepoSecret: ["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
    getRepoVariable: ["GET /repos/{owner}/{repo}/actions/variables/{name}"],
    getReviewsForRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"
    ],
    getSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}"],
    getSelfHostedRunnerForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/{runner_id}"
    ],
    getWorkflow: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],
    getWorkflowAccessToRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/access"
    ],
    getWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],
    getWorkflowRunAttempt: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"
    ],
    getWorkflowRunUsage: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"
    ],
    getWorkflowUsage: [
      "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"
    ],
    listArtifactsForRepo: ["GET /repos/{owner}/{repo}/actions/artifacts"],
    listEnvironmentSecrets: [
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets"
    ],
    listEnvironmentVariables: [
      "GET /repositories/{repository_id}/environments/{environment_name}/variables"
    ],
    listJobsForWorkflowRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"
    ],
    listJobsForWorkflowRunAttempt: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"
    ],
    listLabelsForSelfHostedRunnerForOrg: [
      "GET /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    listLabelsForSelfHostedRunnerForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    listOrgSecrets: ["GET /orgs/{org}/actions/secrets"],
    listOrgVariables: ["GET /orgs/{org}/actions/variables"],
    listRepoOrganizationSecrets: [
      "GET /repos/{owner}/{repo}/actions/organization-secrets"
    ],
    listRepoOrganizationVariables: [
      "GET /repos/{owner}/{repo}/actions/organization-variables"
    ],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/actions/secrets"],
    listRepoVariables: ["GET /repos/{owner}/{repo}/actions/variables"],
    listRepoWorkflows: ["GET /repos/{owner}/{repo}/actions/workflows"],
    listRunnerApplicationsForOrg: ["GET /orgs/{org}/actions/runners/downloads"],
    listRunnerApplicationsForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/downloads"
    ],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/actions/secrets/{secret_name}/repositories"
    ],
    listSelectedReposForOrgVariable: [
      "GET /orgs/{org}/actions/variables/{name}/repositories"
    ],
    listSelectedRepositoriesEnabledGithubActionsOrganization: [
      "GET /orgs/{org}/actions/permissions/repositories"
    ],
    listSelfHostedRunnersForOrg: ["GET /orgs/{org}/actions/runners"],
    listSelfHostedRunnersForRepo: ["GET /repos/{owner}/{repo}/actions/runners"],
    listWorkflowRunArtifacts: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"
    ],
    listWorkflowRuns: [
      "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"
    ],
    listWorkflowRunsForRepo: ["GET /repos/{owner}/{repo}/actions/runs"],
    reRunJobForWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"
    ],
    reRunWorkflow: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],
    reRunWorkflowFailedJobs: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"
    ],
    removeAllCustomLabelsFromSelfHostedRunnerForOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    removeAllCustomLabelsFromSelfHostedRunnerForRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    removeCustomLabelFromSelfHostedRunnerForOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"
    ],
    removeCustomLabelFromSelfHostedRunnerForRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"
    ],
    removeSelectedRepoFromOrgVariable: [
      "DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"
    ],
    reviewCustomGatesForRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"
    ],
    reviewPendingDeploymentsForRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"
    ],
    setAllowedActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/selected-actions"
    ],
    setAllowedActionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"
    ],
    setCustomLabelsForSelfHostedRunnerForOrg: [
      "PUT /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    setCustomLabelsForSelfHostedRunnerForRepo: [
      "PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    setCustomOidcSubClaimForRepo: [
      "PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"
    ],
    setGithubActionsDefaultWorkflowPermissionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/workflow"
    ],
    setGithubActionsDefaultWorkflowPermissionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/workflow"
    ],
    setGithubActionsPermissionsOrganization: [
      "PUT /orgs/{org}/actions/permissions"
    ],
    setGithubActionsPermissionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"
    ],
    setSelectedReposForOrgVariable: [
      "PUT /orgs/{org}/actions/variables/{name}/repositories"
    ],
    setSelectedRepositoriesEnabledGithubActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/repositories"
    ],
    setWorkflowAccessToRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/access"
    ],
    updateEnvironmentVariable: [
      "PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}"
    ],
    updateOrgVariable: ["PATCH /orgs/{org}/actions/variables/{name}"],
    updateRepoVariable: [
      "PATCH /repos/{owner}/{repo}/actions/variables/{name}"
    ]
  },
  activity: {
    checkRepoIsStarredByAuthenticatedUser: ["GET /user/starred/{owner}/{repo}"],
    deleteRepoSubscription: ["DELETE /repos/{owner}/{repo}/subscription"],
    deleteThreadSubscription: [
      "DELETE /notifications/threads/{thread_id}/subscription"
    ],
    getFeeds: ["GET /feeds"],
    getRepoSubscription: ["GET /repos/{owner}/{repo}/subscription"],
    getThread: ["GET /notifications/threads/{thread_id}"],
    getThreadSubscriptionForAuthenticatedUser: [
      "GET /notifications/threads/{thread_id}/subscription"
    ],
    listEventsForAuthenticatedUser: ["GET /users/{username}/events"],
    listNotificationsForAuthenticatedUser: ["GET /notifications"],
    listOrgEventsForAuthenticatedUser: [
      "GET /users/{username}/events/orgs/{org}"
    ],
    listPublicEvents: ["GET /events"],
    listPublicEventsForRepoNetwork: ["GET /networks/{owner}/{repo}/events"],
    listPublicEventsForUser: ["GET /users/{username}/events/public"],
    listPublicOrgEvents: ["GET /orgs/{org}/events"],
    listReceivedEventsForUser: ["GET /users/{username}/received_events"],
    listReceivedPublicEventsForUser: [
      "GET /users/{username}/received_events/public"
    ],
    listRepoEvents: ["GET /repos/{owner}/{repo}/events"],
    listRepoNotificationsForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/notifications"
    ],
    listReposStarredByAuthenticatedUser: ["GET /user/starred"],
    listReposStarredByUser: ["GET /users/{username}/starred"],
    listReposWatchedByUser: ["GET /users/{username}/subscriptions"],
    listStargazersForRepo: ["GET /repos/{owner}/{repo}/stargazers"],
    listWatchedReposForAuthenticatedUser: ["GET /user/subscriptions"],
    listWatchersForRepo: ["GET /repos/{owner}/{repo}/subscribers"],
    markNotificationsAsRead: ["PUT /notifications"],
    markRepoNotificationsAsRead: ["PUT /repos/{owner}/{repo}/notifications"],
    markThreadAsDone: ["DELETE /notifications/threads/{thread_id}"],
    markThreadAsRead: ["PATCH /notifications/threads/{thread_id}"],
    setRepoSubscription: ["PUT /repos/{owner}/{repo}/subscription"],
    setThreadSubscription: [
      "PUT /notifications/threads/{thread_id}/subscription"
    ],
    starRepoForAuthenticatedUser: ["PUT /user/starred/{owner}/{repo}"],
    unstarRepoForAuthenticatedUser: ["DELETE /user/starred/{owner}/{repo}"]
  },
  apps: {
    addRepoToInstallation: [
      "PUT /user/installations/{installation_id}/repositories/{repository_id}",
      {},
      { renamed: ["apps", "addRepoToInstallationForAuthenticatedUser"] }
    ],
    addRepoToInstallationForAuthenticatedUser: [
      "PUT /user/installations/{installation_id}/repositories/{repository_id}"
    ],
    checkToken: ["POST /applications/{client_id}/token"],
    createFromManifest: ["POST /app-manifests/{code}/conversions"],
    createInstallationAccessToken: [
      "POST /app/installations/{installation_id}/access_tokens"
    ],
    deleteAuthorization: ["DELETE /applications/{client_id}/grant"],
    deleteInstallation: ["DELETE /app/installations/{installation_id}"],
    deleteToken: ["DELETE /applications/{client_id}/token"],
    getAuthenticated: ["GET /app"],
    getBySlug: ["GET /apps/{app_slug}"],
    getInstallation: ["GET /app/installations/{installation_id}"],
    getOrgInstallation: ["GET /orgs/{org}/installation"],
    getRepoInstallation: ["GET /repos/{owner}/{repo}/installation"],
    getSubscriptionPlanForAccount: [
      "GET /marketplace_listing/accounts/{account_id}"
    ],
    getSubscriptionPlanForAccountStubbed: [
      "GET /marketplace_listing/stubbed/accounts/{account_id}"
    ],
    getUserInstallation: ["GET /users/{username}/installation"],
    getWebhookConfigForApp: ["GET /app/hook/config"],
    getWebhookDelivery: ["GET /app/hook/deliveries/{delivery_id}"],
    listAccountsForPlan: ["GET /marketplace_listing/plans/{plan_id}/accounts"],
    listAccountsForPlanStubbed: [
      "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"
    ],
    listInstallationReposForAuthenticatedUser: [
      "GET /user/installations/{installation_id}/repositories"
    ],
    listInstallationRequestsForAuthenticatedApp: [
      "GET /app/installation-requests"
    ],
    listInstallations: ["GET /app/installations"],
    listInstallationsForAuthenticatedUser: ["GET /user/installations"],
    listPlans: ["GET /marketplace_listing/plans"],
    listPlansStubbed: ["GET /marketplace_listing/stubbed/plans"],
    listReposAccessibleToInstallation: ["GET /installation/repositories"],
    listSubscriptionsForAuthenticatedUser: ["GET /user/marketplace_purchases"],
    listSubscriptionsForAuthenticatedUserStubbed: [
      "GET /user/marketplace_purchases/stubbed"
    ],
    listWebhookDeliveries: ["GET /app/hook/deliveries"],
    redeliverWebhookDelivery: [
      "POST /app/hook/deliveries/{delivery_id}/attempts"
    ],
    removeRepoFromInstallation: [
      "DELETE /user/installations/{installation_id}/repositories/{repository_id}",
      {},
      { renamed: ["apps", "removeRepoFromInstallationForAuthenticatedUser"] }
    ],
    removeRepoFromInstallationForAuthenticatedUser: [
      "DELETE /user/installations/{installation_id}/repositories/{repository_id}"
    ],
    resetToken: ["PATCH /applications/{client_id}/token"],
    revokeInstallationAccessToken: ["DELETE /installation/token"],
    scopeToken: ["POST /applications/{client_id}/token/scoped"],
    suspendInstallation: ["PUT /app/installations/{installation_id}/suspended"],
    unsuspendInstallation: [
      "DELETE /app/installations/{installation_id}/suspended"
    ],
    updateWebhookConfigForApp: ["PATCH /app/hook/config"]
  },
  billing: {
    getGithubActionsBillingOrg: ["GET /orgs/{org}/settings/billing/actions"],
    getGithubActionsBillingUser: [
      "GET /users/{username}/settings/billing/actions"
    ],
    getGithubPackagesBillingOrg: ["GET /orgs/{org}/settings/billing/packages"],
    getGithubPackagesBillingUser: [
      "GET /users/{username}/settings/billing/packages"
    ],
    getSharedStorageBillingOrg: [
      "GET /orgs/{org}/settings/billing/shared-storage"
    ],
    getSharedStorageBillingUser: [
      "GET /users/{username}/settings/billing/shared-storage"
    ]
  },
  checks: {
    create: ["POST /repos/{owner}/{repo}/check-runs"],
    createSuite: ["POST /repos/{owner}/{repo}/check-suites"],
    get: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],
    getSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],
    listAnnotations: [
      "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"
    ],
    listForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],
    listForSuite: [
      "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"
    ],
    listSuitesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],
    rerequestRun: [
      "POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"
    ],
    rerequestSuite: [
      "POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"
    ],
    setSuitesPreferences: [
      "PATCH /repos/{owner}/{repo}/check-suites/preferences"
    ],
    update: ["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]
  },
  codeScanning: {
    deleteAnalysis: [
      "DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"
    ],
    getAlert: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",
      {},
      { renamedParameters: { alert_id: "alert_number" } }
    ],
    getAnalysis: [
      "GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"
    ],
    getCodeqlDatabase: [
      "GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"
    ],
    getDefaultSetup: ["GET /repos/{owner}/{repo}/code-scanning/default-setup"],
    getSarif: ["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],
    listAlertInstances: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/code-scanning/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/code-scanning/alerts"],
    listAlertsInstances: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
      {},
      { renamed: ["codeScanning", "listAlertInstances"] }
    ],
    listCodeqlDatabases: [
      "GET /repos/{owner}/{repo}/code-scanning/codeql/databases"
    ],
    listRecentAnalyses: ["GET /repos/{owner}/{repo}/code-scanning/analyses"],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"
    ],
    updateDefaultSetup: [
      "PATCH /repos/{owner}/{repo}/code-scanning/default-setup"
    ],
    uploadSarif: ["POST /repos/{owner}/{repo}/code-scanning/sarifs"]
  },
  codesOfConduct: {
    getAllCodesOfConduct: ["GET /codes_of_conduct"],
    getConductCode: ["GET /codes_of_conduct/{key}"]
  },
  codespaces: {
    addRepositoryForSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    checkPermissionsForDevcontainer: [
      "GET /repos/{owner}/{repo}/codespaces/permissions_check"
    ],
    codespaceMachinesForAuthenticatedUser: [
      "GET /user/codespaces/{codespace_name}/machines"
    ],
    createForAuthenticatedUser: ["POST /user/codespaces"],
    createOrUpdateOrgSecret: [
      "PUT /orgs/{org}/codespaces/secrets/{secret_name}"
    ],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    createOrUpdateSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}"
    ],
    createWithPrForAuthenticatedUser: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"
    ],
    createWithRepoForAuthenticatedUser: [
      "POST /repos/{owner}/{repo}/codespaces"
    ],
    deleteForAuthenticatedUser: ["DELETE /user/codespaces/{codespace_name}"],
    deleteFromOrganization: [
      "DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    deleteSecretForAuthenticatedUser: [
      "DELETE /user/codespaces/secrets/{secret_name}"
    ],
    exportForAuthenticatedUser: [
      "POST /user/codespaces/{codespace_name}/exports"
    ],
    getCodespacesForUserInOrg: [
      "GET /orgs/{org}/members/{username}/codespaces"
    ],
    getExportDetailsForAuthenticatedUser: [
      "GET /user/codespaces/{codespace_name}/exports/{export_id}"
    ],
    getForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}"],
    getOrgPublicKey: ["GET /orgs/{org}/codespaces/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/codespaces/secrets/{secret_name}"],
    getPublicKeyForAuthenticatedUser: [
      "GET /user/codespaces/secrets/public-key"
    ],
    getRepoPublicKey: [
      "GET /repos/{owner}/{repo}/codespaces/secrets/public-key"
    ],
    getRepoSecret: [
      "GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    getSecretForAuthenticatedUser: [
      "GET /user/codespaces/secrets/{secret_name}"
    ],
    listDevcontainersInRepositoryForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/devcontainers"
    ],
    listForAuthenticatedUser: ["GET /user/codespaces"],
    listInOrganization: [
      "GET /orgs/{org}/codespaces",
      {},
      { renamedParameters: { org_id: "org" } }
    ],
    listInRepositoryForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces"
    ],
    listOrgSecrets: ["GET /orgs/{org}/codespaces/secrets"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/codespaces/secrets"],
    listRepositoriesForSecretForAuthenticatedUser: [
      "GET /user/codespaces/secrets/{secret_name}/repositories"
    ],
    listSecretsForAuthenticatedUser: ["GET /user/codespaces/secrets"],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"
    ],
    preFlightWithRepoForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/new"
    ],
    publishForAuthenticatedUser: [
      "POST /user/codespaces/{codespace_name}/publish"
    ],
    removeRepositoryForSecretForAuthenticatedUser: [
      "DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    repoMachinesForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/machines"
    ],
    setRepositoriesForSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}/repositories"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"
    ],
    startForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/start"],
    stopForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/stop"],
    stopInOrganization: [
      "POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"
    ],
    updateForAuthenticatedUser: ["PATCH /user/codespaces/{codespace_name}"]
  },
  copilot: {
    addCopilotSeatsForTeams: [
      "POST /orgs/{org}/copilot/billing/selected_teams"
    ],
    addCopilotSeatsForUsers: [
      "POST /orgs/{org}/copilot/billing/selected_users"
    ],
    cancelCopilotSeatAssignmentForTeams: [
      "DELETE /orgs/{org}/copilot/billing/selected_teams"
    ],
    cancelCopilotSeatAssignmentForUsers: [
      "DELETE /orgs/{org}/copilot/billing/selected_users"
    ],
    getCopilotOrganizationDetails: ["GET /orgs/{org}/copilot/billing"],
    getCopilotSeatDetailsForUser: [
      "GET /orgs/{org}/members/{username}/copilot"
    ],
    listCopilotSeats: ["GET /orgs/{org}/copilot/billing/seats"]
  },
  dependabot: {
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"
    ],
    createOrUpdateOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}"
    ],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    getAlert: ["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],
    getOrgPublicKey: ["GET /orgs/{org}/dependabot/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}"],
    getRepoPublicKey: [
      "GET /repos/{owner}/{repo}/dependabot/secrets/public-key"
    ],
    getRepoSecret: [
      "GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    listAlertsForEnterprise: [
      "GET /enterprises/{enterprise}/dependabot/alerts"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/dependabot/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/dependabot/alerts"],
    listOrgSecrets: ["GET /orgs/{org}/dependabot/secrets"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/dependabot/secrets"],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"
    ],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"
    ]
  },
  dependencyGraph: {
    createRepositorySnapshot: [
      "POST /repos/{owner}/{repo}/dependency-graph/snapshots"
    ],
    diffRange: [
      "GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"
    ],
    exportSbom: ["GET /repos/{owner}/{repo}/dependency-graph/sbom"]
  },
  emojis: { get: ["GET /emojis"] },
  gists: {
    checkIsStarred: ["GET /gists/{gist_id}/star"],
    create: ["POST /gists"],
    createComment: ["POST /gists/{gist_id}/comments"],
    delete: ["DELETE /gists/{gist_id}"],
    deleteComment: ["DELETE /gists/{gist_id}/comments/{comment_id}"],
    fork: ["POST /gists/{gist_id}/forks"],
    get: ["GET /gists/{gist_id}"],
    getComment: ["GET /gists/{gist_id}/comments/{comment_id}"],
    getRevision: ["GET /gists/{gist_id}/{sha}"],
    list: ["GET /gists"],
    listComments: ["GET /gists/{gist_id}/comments"],
    listCommits: ["GET /gists/{gist_id}/commits"],
    listForUser: ["GET /users/{username}/gists"],
    listForks: ["GET /gists/{gist_id}/forks"],
    listPublic: ["GET /gists/public"],
    listStarred: ["GET /gists/starred"],
    star: ["PUT /gists/{gist_id}/star"],
    unstar: ["DELETE /gists/{gist_id}/star"],
    update: ["PATCH /gists/{gist_id}"],
    updateComment: ["PATCH /gists/{gist_id}/comments/{comment_id}"]
  },
  git: {
    createBlob: ["POST /repos/{owner}/{repo}/git/blobs"],
    createCommit: ["POST /repos/{owner}/{repo}/git/commits"],
    createRef: ["POST /repos/{owner}/{repo}/git/refs"],
    createTag: ["POST /repos/{owner}/{repo}/git/tags"],
    createTree: ["POST /repos/{owner}/{repo}/git/trees"],
    deleteRef: ["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],
    getBlob: ["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],
    getCommit: ["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],
    getRef: ["GET /repos/{owner}/{repo}/git/ref/{ref}"],
    getTag: ["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],
    getTree: ["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],
    listMatchingRefs: ["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],
    updateRef: ["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]
  },
  gitignore: {
    getAllTemplates: ["GET /gitignore/templates"],
    getTemplate: ["GET /gitignore/templates/{name}"]
  },
  interactions: {
    getRestrictionsForAuthenticatedUser: ["GET /user/interaction-limits"],
    getRestrictionsForOrg: ["GET /orgs/{org}/interaction-limits"],
    getRestrictionsForRepo: ["GET /repos/{owner}/{repo}/interaction-limits"],
    getRestrictionsForYourPublicRepos: [
      "GET /user/interaction-limits",
      {},
      { renamed: ["interactions", "getRestrictionsForAuthenticatedUser"] }
    ],
    removeRestrictionsForAuthenticatedUser: ["DELETE /user/interaction-limits"],
    removeRestrictionsForOrg: ["DELETE /orgs/{org}/interaction-limits"],
    removeRestrictionsForRepo: [
      "DELETE /repos/{owner}/{repo}/interaction-limits"
    ],
    removeRestrictionsForYourPublicRepos: [
      "DELETE /user/interaction-limits",
      {},
      { renamed: ["interactions", "removeRestrictionsForAuthenticatedUser"] }
    ],
    setRestrictionsForAuthenticatedUser: ["PUT /user/interaction-limits"],
    setRestrictionsForOrg: ["PUT /orgs/{org}/interaction-limits"],
    setRestrictionsForRepo: ["PUT /repos/{owner}/{repo}/interaction-limits"],
    setRestrictionsForYourPublicRepos: [
      "PUT /user/interaction-limits",
      {},
      { renamed: ["interactions", "setRestrictionsForAuthenticatedUser"] }
    ]
  },
  issues: {
    addAssignees: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"
    ],
    addLabels: ["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    checkUserCanBeAssigned: ["GET /repos/{owner}/{repo}/assignees/{assignee}"],
    checkUserCanBeAssignedToIssue: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"
    ],
    create: ["POST /repos/{owner}/{repo}/issues"],
    createComment: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/comments"
    ],
    createLabel: ["POST /repos/{owner}/{repo}/labels"],
    createMilestone: ["POST /repos/{owner}/{repo}/milestones"],
    deleteComment: [
      "DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"
    ],
    deleteLabel: ["DELETE /repos/{owner}/{repo}/labels/{name}"],
    deleteMilestone: [
      "DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"
    ],
    get: ["GET /repos/{owner}/{repo}/issues/{issue_number}"],
    getComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    getEvent: ["GET /repos/{owner}/{repo}/issues/events/{event_id}"],
    getLabel: ["GET /repos/{owner}/{repo}/labels/{name}"],
    getMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],
    list: ["GET /issues"],
    listAssignees: ["GET /repos/{owner}/{repo}/assignees"],
    listComments: ["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],
    listCommentsForRepo: ["GET /repos/{owner}/{repo}/issues/comments"],
    listEvents: ["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],
    listEventsForRepo: ["GET /repos/{owner}/{repo}/issues/events"],
    listEventsForTimeline: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"
    ],
    listForAuthenticatedUser: ["GET /user/issues"],
    listForOrg: ["GET /orgs/{org}/issues"],
    listForRepo: ["GET /repos/{owner}/{repo}/issues"],
    listLabelsForMilestone: [
      "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"
    ],
    listLabelsForRepo: ["GET /repos/{owner}/{repo}/labels"],
    listLabelsOnIssue: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/labels"
    ],
    listMilestones: ["GET /repos/{owner}/{repo}/milestones"],
    lock: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],
    removeAllLabels: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"
    ],
    removeAssignees: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"
    ],
    removeLabel: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"
    ],
    setLabels: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    unlock: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],
    update: ["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],
    updateComment: ["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    updateLabel: ["PATCH /repos/{owner}/{repo}/labels/{name}"],
    updateMilestone: [
      "PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"
    ]
  },
  licenses: {
    get: ["GET /licenses/{license}"],
    getAllCommonlyUsed: ["GET /licenses"],
    getForRepo: ["GET /repos/{owner}/{repo}/license"]
  },
  markdown: {
    render: ["POST /markdown"],
    renderRaw: [
      "POST /markdown/raw",
      { headers: { "content-type": "text/plain; charset=utf-8" } }
    ]
  },
  meta: {
    get: ["GET /meta"],
    getAllVersions: ["GET /versions"],
    getOctocat: ["GET /octocat"],
    getZen: ["GET /zen"],
    root: ["GET /"]
  },
  migrations: {
    cancelImport: [
      "DELETE /repos/{owner}/{repo}/import",
      {},
      {
        deprecated: "octokit.rest.migrations.cancelImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#cancel-an-import"
      }
    ],
    deleteArchiveForAuthenticatedUser: [
      "DELETE /user/migrations/{migration_id}/archive"
    ],
    deleteArchiveForOrg: [
      "DELETE /orgs/{org}/migrations/{migration_id}/archive"
    ],
    downloadArchiveForOrg: [
      "GET /orgs/{org}/migrations/{migration_id}/archive"
    ],
    getArchiveForAuthenticatedUser: [
      "GET /user/migrations/{migration_id}/archive"
    ],
    getCommitAuthors: [
      "GET /repos/{owner}/{repo}/import/authors",
      {},
      {
        deprecated: "octokit.rest.migrations.getCommitAuthors() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-commit-authors"
      }
    ],
    getImportStatus: [
      "GET /repos/{owner}/{repo}/import",
      {},
      {
        deprecated: "octokit.rest.migrations.getImportStatus() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-an-import-status"
      }
    ],
    getLargeFiles: [
      "GET /repos/{owner}/{repo}/import/large_files",
      {},
      {
        deprecated: "octokit.rest.migrations.getLargeFiles() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-large-files"
      }
    ],
    getStatusForAuthenticatedUser: ["GET /user/migrations/{migration_id}"],
    getStatusForOrg: ["GET /orgs/{org}/migrations/{migration_id}"],
    listForAuthenticatedUser: ["GET /user/migrations"],
    listForOrg: ["GET /orgs/{org}/migrations"],
    listReposForAuthenticatedUser: [
      "GET /user/migrations/{migration_id}/repositories"
    ],
    listReposForOrg: ["GET /orgs/{org}/migrations/{migration_id}/repositories"],
    listReposForUser: [
      "GET /user/migrations/{migration_id}/repositories",
      {},
      { renamed: ["migrations", "listReposForAuthenticatedUser"] }
    ],
    mapCommitAuthor: [
      "PATCH /repos/{owner}/{repo}/import/authors/{author_id}",
      {},
      {
        deprecated: "octokit.rest.migrations.mapCommitAuthor() is deprecated, see https://docs.github.com/rest/migrations/source-imports#map-a-commit-author"
      }
    ],
    setLfsPreference: [
      "PATCH /repos/{owner}/{repo}/import/lfs",
      {},
      {
        deprecated: "octokit.rest.migrations.setLfsPreference() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-git-lfs-preference"
      }
    ],
    startForAuthenticatedUser: ["POST /user/migrations"],
    startForOrg: ["POST /orgs/{org}/migrations"],
    startImport: [
      "PUT /repos/{owner}/{repo}/import",
      {},
      {
        deprecated: "octokit.rest.migrations.startImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#start-an-import"
      }
    ],
    unlockRepoForAuthenticatedUser: [
      "DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"
    ],
    unlockRepoForOrg: [
      "DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"
    ],
    updateImport: [
      "PATCH /repos/{owner}/{repo}/import",
      {},
      {
        deprecated: "octokit.rest.migrations.updateImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-an-import"
      }
    ]
  },
  oidc: {
    getOidcCustomSubTemplateForOrg: [
      "GET /orgs/{org}/actions/oidc/customization/sub"
    ],
    updateOidcCustomSubTemplateForOrg: [
      "PUT /orgs/{org}/actions/oidc/customization/sub"
    ]
  },
  orgs: {
    addSecurityManagerTeam: [
      "PUT /orgs/{org}/security-managers/teams/{team_slug}"
    ],
    assignTeamToOrgRole: [
      "PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"
    ],
    assignUserToOrgRole: [
      "PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"
    ],
    blockUser: ["PUT /orgs/{org}/blocks/{username}"],
    cancelInvitation: ["DELETE /orgs/{org}/invitations/{invitation_id}"],
    checkBlockedUser: ["GET /orgs/{org}/blocks/{username}"],
    checkMembershipForUser: ["GET /orgs/{org}/members/{username}"],
    checkPublicMembershipForUser: ["GET /orgs/{org}/public_members/{username}"],
    convertMemberToOutsideCollaborator: [
      "PUT /orgs/{org}/outside_collaborators/{username}"
    ],
    createCustomOrganizationRole: ["POST /orgs/{org}/organization-roles"],
    createInvitation: ["POST /orgs/{org}/invitations"],
    createOrUpdateCustomProperties: ["PATCH /orgs/{org}/properties/schema"],
    createOrUpdateCustomPropertiesValuesForRepos: [
      "PATCH /orgs/{org}/properties/values"
    ],
    createOrUpdateCustomProperty: [
      "PUT /orgs/{org}/properties/schema/{custom_property_name}"
    ],
    createWebhook: ["POST /orgs/{org}/hooks"],
    delete: ["DELETE /orgs/{org}"],
    deleteCustomOrganizationRole: [
      "DELETE /orgs/{org}/organization-roles/{role_id}"
    ],
    deleteWebhook: ["DELETE /orgs/{org}/hooks/{hook_id}"],
    enableOrDisableSecurityProductOnAllOrgRepos: [
      "POST /orgs/{org}/{security_product}/{enablement}"
    ],
    get: ["GET /orgs/{org}"],
    getAllCustomProperties: ["GET /orgs/{org}/properties/schema"],
    getCustomProperty: [
      "GET /orgs/{org}/properties/schema/{custom_property_name}"
    ],
    getMembershipForAuthenticatedUser: ["GET /user/memberships/orgs/{org}"],
    getMembershipForUser: ["GET /orgs/{org}/memberships/{username}"],
    getOrgRole: ["GET /orgs/{org}/organization-roles/{role_id}"],
    getWebhook: ["GET /orgs/{org}/hooks/{hook_id}"],
    getWebhookConfigForOrg: ["GET /orgs/{org}/hooks/{hook_id}/config"],
    getWebhookDelivery: [
      "GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"
    ],
    list: ["GET /organizations"],
    listAppInstallations: ["GET /orgs/{org}/installations"],
    listBlockedUsers: ["GET /orgs/{org}/blocks"],
    listCustomPropertiesValuesForRepos: ["GET /orgs/{org}/properties/values"],
    listFailedInvitations: ["GET /orgs/{org}/failed_invitations"],
    listForAuthenticatedUser: ["GET /user/orgs"],
    listForUser: ["GET /users/{username}/orgs"],
    listInvitationTeams: ["GET /orgs/{org}/invitations/{invitation_id}/teams"],
    listMembers: ["GET /orgs/{org}/members"],
    listMembershipsForAuthenticatedUser: ["GET /user/memberships/orgs"],
    listOrgRoleTeams: ["GET /orgs/{org}/organization-roles/{role_id}/teams"],
    listOrgRoleUsers: ["GET /orgs/{org}/organization-roles/{role_id}/users"],
    listOrgRoles: ["GET /orgs/{org}/organization-roles"],
    listOrganizationFineGrainedPermissions: [
      "GET /orgs/{org}/organization-fine-grained-permissions"
    ],
    listOutsideCollaborators: ["GET /orgs/{org}/outside_collaborators"],
    listPatGrantRepositories: [
      "GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"
    ],
    listPatGrantRequestRepositories: [
      "GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"
    ],
    listPatGrantRequests: ["GET /orgs/{org}/personal-access-token-requests"],
    listPatGrants: ["GET /orgs/{org}/personal-access-tokens"],
    listPendingInvitations: ["GET /orgs/{org}/invitations"],
    listPublicMembers: ["GET /orgs/{org}/public_members"],
    listSecurityManagerTeams: ["GET /orgs/{org}/security-managers"],
    listWebhookDeliveries: ["GET /orgs/{org}/hooks/{hook_id}/deliveries"],
    listWebhooks: ["GET /orgs/{org}/hooks"],
    patchCustomOrganizationRole: [
      "PATCH /orgs/{org}/organization-roles/{role_id}"
    ],
    pingWebhook: ["POST /orgs/{org}/hooks/{hook_id}/pings"],
    redeliverWebhookDelivery: [
      "POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"
    ],
    removeCustomProperty: [
      "DELETE /orgs/{org}/properties/schema/{custom_property_name}"
    ],
    removeMember: ["DELETE /orgs/{org}/members/{username}"],
    removeMembershipForUser: ["DELETE /orgs/{org}/memberships/{username}"],
    removeOutsideCollaborator: [
      "DELETE /orgs/{org}/outside_collaborators/{username}"
    ],
    removePublicMembershipForAuthenticatedUser: [
      "DELETE /orgs/{org}/public_members/{username}"
    ],
    removeSecurityManagerTeam: [
      "DELETE /orgs/{org}/security-managers/teams/{team_slug}"
    ],
    reviewPatGrantRequest: [
      "POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"
    ],
    reviewPatGrantRequestsInBulk: [
      "POST /orgs/{org}/personal-access-token-requests"
    ],
    revokeAllOrgRolesTeam: [
      "DELETE /orgs/{org}/organization-roles/teams/{team_slug}"
    ],
    revokeAllOrgRolesUser: [
      "DELETE /orgs/{org}/organization-roles/users/{username}"
    ],
    revokeOrgRoleTeam: [
      "DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"
    ],
    revokeOrgRoleUser: [
      "DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"
    ],
    setMembershipForUser: ["PUT /orgs/{org}/memberships/{username}"],
    setPublicMembershipForAuthenticatedUser: [
      "PUT /orgs/{org}/public_members/{username}"
    ],
    unblockUser: ["DELETE /orgs/{org}/blocks/{username}"],
    update: ["PATCH /orgs/{org}"],
    updateMembershipForAuthenticatedUser: [
      "PATCH /user/memberships/orgs/{org}"
    ],
    updatePatAccess: ["POST /orgs/{org}/personal-access-tokens/{pat_id}"],
    updatePatAccesses: ["POST /orgs/{org}/personal-access-tokens"],
    updateWebhook: ["PATCH /orgs/{org}/hooks/{hook_id}"],
    updateWebhookConfigForOrg: ["PATCH /orgs/{org}/hooks/{hook_id}/config"]
  },
  packages: {
    deletePackageForAuthenticatedUser: [
      "DELETE /user/packages/{package_type}/{package_name}"
    ],
    deletePackageForOrg: [
      "DELETE /orgs/{org}/packages/{package_type}/{package_name}"
    ],
    deletePackageForUser: [
      "DELETE /users/{username}/packages/{package_type}/{package_name}"
    ],
    deletePackageVersionForAuthenticatedUser: [
      "DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    deletePackageVersionForOrg: [
      "DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    deletePackageVersionForUser: [
      "DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getAllPackageVersionsForAPackageOwnedByAnOrg: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
      {},
      { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByOrg"] }
    ],
    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions",
      {},
      {
        renamed: [
          "packages",
          "getAllPackageVersionsForPackageOwnedByAuthenticatedUser"
        ]
      }
    ],
    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions"
    ],
    getAllPackageVersionsForPackageOwnedByOrg: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions"
    ],
    getAllPackageVersionsForPackageOwnedByUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}/versions"
    ],
    getPackageForAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}"
    ],
    getPackageForOrganization: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}"
    ],
    getPackageForUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}"
    ],
    getPackageVersionForAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getPackageVersionForOrganization: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getPackageVersionForUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    listDockerMigrationConflictingPackagesForAuthenticatedUser: [
      "GET /user/docker/conflicts"
    ],
    listDockerMigrationConflictingPackagesForOrganization: [
      "GET /orgs/{org}/docker/conflicts"
    ],
    listDockerMigrationConflictingPackagesForUser: [
      "GET /users/{username}/docker/conflicts"
    ],
    listPackagesForAuthenticatedUser: ["GET /user/packages"],
    listPackagesForOrganization: ["GET /orgs/{org}/packages"],
    listPackagesForUser: ["GET /users/{username}/packages"],
    restorePackageForAuthenticatedUser: [
      "POST /user/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageForOrg: [
      "POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageForUser: [
      "POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageVersionForAuthenticatedUser: [
      "POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ],
    restorePackageVersionForOrg: [
      "POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ],
    restorePackageVersionForUser: [
      "POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ]
  },
  projects: {
    addCollaborator: ["PUT /projects/{project_id}/collaborators/{username}"],
    createCard: ["POST /projects/columns/{column_id}/cards"],
    createColumn: ["POST /projects/{project_id}/columns"],
    createForAuthenticatedUser: ["POST /user/projects"],
    createForOrg: ["POST /orgs/{org}/projects"],
    createForRepo: ["POST /repos/{owner}/{repo}/projects"],
    delete: ["DELETE /projects/{project_id}"],
    deleteCard: ["DELETE /projects/columns/cards/{card_id}"],
    deleteColumn: ["DELETE /projects/columns/{column_id}"],
    get: ["GET /projects/{project_id}"],
    getCard: ["GET /projects/columns/cards/{card_id}"],
    getColumn: ["GET /projects/columns/{column_id}"],
    getPermissionForUser: [
      "GET /projects/{project_id}/collaborators/{username}/permission"
    ],
    listCards: ["GET /projects/columns/{column_id}/cards"],
    listCollaborators: ["GET /projects/{project_id}/collaborators"],
    listColumns: ["GET /projects/{project_id}/columns"],
    listForOrg: ["GET /orgs/{org}/projects"],
    listForRepo: ["GET /repos/{owner}/{repo}/projects"],
    listForUser: ["GET /users/{username}/projects"],
    moveCard: ["POST /projects/columns/cards/{card_id}/moves"],
    moveColumn: ["POST /projects/columns/{column_id}/moves"],
    removeCollaborator: [
      "DELETE /projects/{project_id}/collaborators/{username}"
    ],
    update: ["PATCH /projects/{project_id}"],
    updateCard: ["PATCH /projects/columns/cards/{card_id}"],
    updateColumn: ["PATCH /projects/columns/{column_id}"]
  },
  pulls: {
    checkIfMerged: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
    create: ["POST /repos/{owner}/{repo}/pulls"],
    createReplyForReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"
    ],
    createReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
    createReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"
    ],
    deletePendingReview: [
      "DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    deleteReviewComment: [
      "DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"
    ],
    dismissReview: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"
    ],
    get: ["GET /repos/{owner}/{repo}/pulls/{pull_number}"],
    getReview: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    getReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
    list: ["GET /repos/{owner}/{repo}/pulls"],
    listCommentsForReview: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"
    ],
    listCommits: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],
    listFiles: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],
    listRequestedReviewers: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    listReviewComments: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"
    ],
    listReviewCommentsForRepo: ["GET /repos/{owner}/{repo}/pulls/comments"],
    listReviews: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
    merge: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
    removeRequestedReviewers: [
      "DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    requestReviewers: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    submitReview: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"
    ],
    update: ["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],
    updateBranch: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"
    ],
    updateReview: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    updateReviewComment: [
      "PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"
    ]
  },
  rateLimit: { get: ["GET /rate_limit"] },
  reactions: {
    createForCommitComment: [
      "POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"
    ],
    createForIssue: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"
    ],
    createForIssueComment: [
      "POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"
    ],
    createForPullRequestReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"
    ],
    createForRelease: [
      "POST /repos/{owner}/{repo}/releases/{release_id}/reactions"
    ],
    createForTeamDiscussionCommentInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"
    ],
    createForTeamDiscussionInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"
    ],
    deleteForCommitComment: [
      "DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForIssue: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"
    ],
    deleteForIssueComment: [
      "DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForPullRequestComment: [
      "DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForRelease: [
      "DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"
    ],
    deleteForTeamDiscussion: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"
    ],
    deleteForTeamDiscussionComment: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"
    ],
    listForCommitComment: [
      "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"
    ],
    listForIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
    listForIssueComment: [
      "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"
    ],
    listForPullRequestReviewComment: [
      "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"
    ],
    listForRelease: [
      "GET /repos/{owner}/{repo}/releases/{release_id}/reactions"
    ],
    listForTeamDiscussionCommentInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"
    ],
    listForTeamDiscussionInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"
    ]
  },
  repos: {
    acceptInvitation: [
      "PATCH /user/repository_invitations/{invitation_id}",
      {},
      { renamed: ["repos", "acceptInvitationForAuthenticatedUser"] }
    ],
    acceptInvitationForAuthenticatedUser: [
      "PATCH /user/repository_invitations/{invitation_id}"
    ],
    addAppAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    addCollaborator: ["PUT /repos/{owner}/{repo}/collaborators/{username}"],
    addStatusCheckContexts: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    addTeamAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    addUserAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    cancelPagesDeployment: [
      "POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"
    ],
    checkAutomatedSecurityFixes: [
      "GET /repos/{owner}/{repo}/automated-security-fixes"
    ],
    checkCollaborator: ["GET /repos/{owner}/{repo}/collaborators/{username}"],
    checkVulnerabilityAlerts: [
      "GET /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    codeownersErrors: ["GET /repos/{owner}/{repo}/codeowners/errors"],
    compareCommits: ["GET /repos/{owner}/{repo}/compare/{base}...{head}"],
    compareCommitsWithBasehead: [
      "GET /repos/{owner}/{repo}/compare/{basehead}"
    ],
    createAutolink: ["POST /repos/{owner}/{repo}/autolinks"],
    createCommitComment: [
      "POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"
    ],
    createCommitSignatureProtection: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    createCommitStatus: ["POST /repos/{owner}/{repo}/statuses/{sha}"],
    createDeployKey: ["POST /repos/{owner}/{repo}/keys"],
    createDeployment: ["POST /repos/{owner}/{repo}/deployments"],
    createDeploymentBranchPolicy: [
      "POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"
    ],
    createDeploymentProtectionRule: [
      "POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"
    ],
    createDeploymentStatus: [
      "POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"
    ],
    createDispatchEvent: ["POST /repos/{owner}/{repo}/dispatches"],
    createForAuthenticatedUser: ["POST /user/repos"],
    createFork: ["POST /repos/{owner}/{repo}/forks"],
    createInOrg: ["POST /orgs/{org}/repos"],
    createOrUpdateCustomPropertiesValues: [
      "PATCH /repos/{owner}/{repo}/properties/values"
    ],
    createOrUpdateEnvironment: [
      "PUT /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    createOrUpdateFileContents: ["PUT /repos/{owner}/{repo}/contents/{path}"],
    createOrgRuleset: ["POST /orgs/{org}/rulesets"],
    createPagesDeployment: ["POST /repos/{owner}/{repo}/pages/deployments"],
    createPagesSite: ["POST /repos/{owner}/{repo}/pages"],
    createRelease: ["POST /repos/{owner}/{repo}/releases"],
    createRepoRuleset: ["POST /repos/{owner}/{repo}/rulesets"],
    createTagProtection: ["POST /repos/{owner}/{repo}/tags/protection"],
    createUsingTemplate: [
      "POST /repos/{template_owner}/{template_repo}/generate"
    ],
    createWebhook: ["POST /repos/{owner}/{repo}/hooks"],
    declineInvitation: [
      "DELETE /user/repository_invitations/{invitation_id}",
      {},
      { renamed: ["repos", "declineInvitationForAuthenticatedUser"] }
    ],
    declineInvitationForAuthenticatedUser: [
      "DELETE /user/repository_invitations/{invitation_id}"
    ],
    delete: ["DELETE /repos/{owner}/{repo}"],
    deleteAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"
    ],
    deleteAdminBranchProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    deleteAnEnvironment: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    deleteAutolink: ["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],
    deleteBranchProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    deleteCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],
    deleteCommitSignatureProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    deleteDeployKey: ["DELETE /repos/{owner}/{repo}/keys/{key_id}"],
    deleteDeployment: [
      "DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"
    ],
    deleteDeploymentBranchPolicy: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"
    ],
    deleteFile: ["DELETE /repos/{owner}/{repo}/contents/{path}"],
    deleteInvitation: [
      "DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"
    ],
    deleteOrgRuleset: ["DELETE /orgs/{org}/rulesets/{ruleset_id}"],
    deletePagesSite: ["DELETE /repos/{owner}/{repo}/pages"],
    deletePullRequestReviewProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    deleteRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}"],
    deleteReleaseAsset: [
      "DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"
    ],
    deleteRepoRuleset: ["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
    deleteTagProtection: [
      "DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"
    ],
    deleteWebhook: ["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],
    disableAutomatedSecurityFixes: [
      "DELETE /repos/{owner}/{repo}/automated-security-fixes"
    ],
    disableDeploymentProtectionRule: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"
    ],
    disablePrivateVulnerabilityReporting: [
      "DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"
    ],
    disableVulnerabilityAlerts: [
      "DELETE /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    downloadArchive: [
      "GET /repos/{owner}/{repo}/zipball/{ref}",
      {},
      { renamed: ["repos", "downloadZipballArchive"] }
    ],
    downloadTarballArchive: ["GET /repos/{owner}/{repo}/tarball/{ref}"],
    downloadZipballArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}"],
    enableAutomatedSecurityFixes: [
      "PUT /repos/{owner}/{repo}/automated-security-fixes"
    ],
    enablePrivateVulnerabilityReporting: [
      "PUT /repos/{owner}/{repo}/private-vulnerability-reporting"
    ],
    enableVulnerabilityAlerts: [
      "PUT /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    generateReleaseNotes: [
      "POST /repos/{owner}/{repo}/releases/generate-notes"
    ],
    get: ["GET /repos/{owner}/{repo}"],
    getAccessRestrictions: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"
    ],
    getAdminBranchProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    getAllDeploymentProtectionRules: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"
    ],
    getAllEnvironments: ["GET /repos/{owner}/{repo}/environments"],
    getAllStatusCheckContexts: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"
    ],
    getAllTopics: ["GET /repos/{owner}/{repo}/topics"],
    getAppsWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"
    ],
    getAutolink: ["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],
    getBranch: ["GET /repos/{owner}/{repo}/branches/{branch}"],
    getBranchProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    getBranchRules: ["GET /repos/{owner}/{repo}/rules/branches/{branch}"],
    getClones: ["GET /repos/{owner}/{repo}/traffic/clones"],
    getCodeFrequencyStats: ["GET /repos/{owner}/{repo}/stats/code_frequency"],
    getCollaboratorPermissionLevel: [
      "GET /repos/{owner}/{repo}/collaborators/{username}/permission"
    ],
    getCombinedStatusForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/status"],
    getCommit: ["GET /repos/{owner}/{repo}/commits/{ref}"],
    getCommitActivityStats: ["GET /repos/{owner}/{repo}/stats/commit_activity"],
    getCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}"],
    getCommitSignatureProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    getCommunityProfileMetrics: ["GET /repos/{owner}/{repo}/community/profile"],
    getContent: ["GET /repos/{owner}/{repo}/contents/{path}"],
    getContributorsStats: ["GET /repos/{owner}/{repo}/stats/contributors"],
    getCustomDeploymentProtectionRule: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"
    ],
    getCustomPropertiesValues: ["GET /repos/{owner}/{repo}/properties/values"],
    getDeployKey: ["GET /repos/{owner}/{repo}/keys/{key_id}"],
    getDeployment: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],
    getDeploymentBranchPolicy: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"
    ],
    getDeploymentStatus: [
      "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"
    ],
    getEnvironment: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    getLatestPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/latest"],
    getLatestRelease: ["GET /repos/{owner}/{repo}/releases/latest"],
    getOrgRuleSuite: ["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],
    getOrgRuleSuites: ["GET /orgs/{org}/rulesets/rule-suites"],
    getOrgRuleset: ["GET /orgs/{org}/rulesets/{ruleset_id}"],
    getOrgRulesets: ["GET /orgs/{org}/rulesets"],
    getPages: ["GET /repos/{owner}/{repo}/pages"],
    getPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],
    getPagesDeployment: [
      "GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"
    ],
    getPagesHealthCheck: ["GET /repos/{owner}/{repo}/pages/health"],
    getParticipationStats: ["GET /repos/{owner}/{repo}/stats/participation"],
    getPullRequestReviewProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    getPunchCardStats: ["GET /repos/{owner}/{repo}/stats/punch_card"],
    getReadme: ["GET /repos/{owner}/{repo}/readme"],
    getReadmeInDirectory: ["GET /repos/{owner}/{repo}/readme/{dir}"],
    getRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}"],
    getReleaseAsset: ["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],
    getReleaseByTag: ["GET /repos/{owner}/{repo}/releases/tags/{tag}"],
    getRepoRuleSuite: [
      "GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"
    ],
    getRepoRuleSuites: ["GET /repos/{owner}/{repo}/rulesets/rule-suites"],
    getRepoRuleset: ["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
    getRepoRulesets: ["GET /repos/{owner}/{repo}/rulesets"],
    getStatusChecksProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    getTeamsWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"
    ],
    getTopPaths: ["GET /repos/{owner}/{repo}/traffic/popular/paths"],
    getTopReferrers: ["GET /repos/{owner}/{repo}/traffic/popular/referrers"],
    getUsersWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"
    ],
    getViews: ["GET /repos/{owner}/{repo}/traffic/views"],
    getWebhook: ["GET /repos/{owner}/{repo}/hooks/{hook_id}"],
    getWebhookConfigForRepo: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/config"
    ],
    getWebhookDelivery: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"
    ],
    listActivities: ["GET /repos/{owner}/{repo}/activity"],
    listAutolinks: ["GET /repos/{owner}/{repo}/autolinks"],
    listBranches: ["GET /repos/{owner}/{repo}/branches"],
    listBranchesForHeadCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"
    ],
    listCollaborators: ["GET /repos/{owner}/{repo}/collaborators"],
    listCommentsForCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"
    ],
    listCommitCommentsForRepo: ["GET /repos/{owner}/{repo}/comments"],
    listCommitStatusesForRef: [
      "GET /repos/{owner}/{repo}/commits/{ref}/statuses"
    ],
    listCommits: ["GET /repos/{owner}/{repo}/commits"],
    listContributors: ["GET /repos/{owner}/{repo}/contributors"],
    listCustomDeploymentRuleIntegrations: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"
    ],
    listDeployKeys: ["GET /repos/{owner}/{repo}/keys"],
    listDeploymentBranchPolicies: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"
    ],
    listDeploymentStatuses: [
      "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"
    ],
    listDeployments: ["GET /repos/{owner}/{repo}/deployments"],
    listForAuthenticatedUser: ["GET /user/repos"],
    listForOrg: ["GET /orgs/{org}/repos"],
    listForUser: ["GET /users/{username}/repos"],
    listForks: ["GET /repos/{owner}/{repo}/forks"],
    listInvitations: ["GET /repos/{owner}/{repo}/invitations"],
    listInvitationsForAuthenticatedUser: ["GET /user/repository_invitations"],
    listLanguages: ["GET /repos/{owner}/{repo}/languages"],
    listPagesBuilds: ["GET /repos/{owner}/{repo}/pages/builds"],
    listPublic: ["GET /repositories"],
    listPullRequestsAssociatedWithCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"
    ],
    listReleaseAssets: [
      "GET /repos/{owner}/{repo}/releases/{release_id}/assets"
    ],
    listReleases: ["GET /repos/{owner}/{repo}/releases"],
    listTagProtection: ["GET /repos/{owner}/{repo}/tags/protection"],
    listTags: ["GET /repos/{owner}/{repo}/tags"],
    listTeams: ["GET /repos/{owner}/{repo}/teams"],
    listWebhookDeliveries: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"
    ],
    listWebhooks: ["GET /repos/{owner}/{repo}/hooks"],
    merge: ["POST /repos/{owner}/{repo}/merges"],
    mergeUpstream: ["POST /repos/{owner}/{repo}/merge-upstream"],
    pingWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],
    redeliverWebhookDelivery: [
      "POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"
    ],
    removeAppAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    removeCollaborator: [
      "DELETE /repos/{owner}/{repo}/collaborators/{username}"
    ],
    removeStatusCheckContexts: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    removeStatusCheckProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    removeTeamAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    removeUserAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    renameBranch: ["POST /repos/{owner}/{repo}/branches/{branch}/rename"],
    replaceAllTopics: ["PUT /repos/{owner}/{repo}/topics"],
    requestPagesBuild: ["POST /repos/{owner}/{repo}/pages/builds"],
    setAdminBranchProtection: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    setAppAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    setStatusCheckContexts: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    setTeamAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    setUserAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    testPushWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],
    transfer: ["POST /repos/{owner}/{repo}/transfer"],
    update: ["PATCH /repos/{owner}/{repo}"],
    updateBranchProtection: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    updateCommitComment: ["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],
    updateDeploymentBranchPolicy: [
      "PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"
    ],
    updateInformationAboutPagesSite: ["PUT /repos/{owner}/{repo}/pages"],
    updateInvitation: [
      "PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"
    ],
    updateOrgRuleset: ["PUT /orgs/{org}/rulesets/{ruleset_id}"],
    updatePullRequestReviewProtection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    updateRelease: ["PATCH /repos/{owner}/{repo}/releases/{release_id}"],
    updateReleaseAsset: [
      "PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"
    ],
    updateRepoRuleset: ["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
    updateStatusCheckPotection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
      {},
      { renamed: ["repos", "updateStatusCheckProtection"] }
    ],
    updateStatusCheckProtection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    updateWebhook: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],
    updateWebhookConfigForRepo: [
      "PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"
    ],
    uploadReleaseAsset: [
      "POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",
      { baseUrl: "https://uploads.github.com" }
    ]
  },
  search: {
    code: ["GET /search/code"],
    commits: ["GET /search/commits"],
    issuesAndPullRequests: ["GET /search/issues"],
    labels: ["GET /search/labels"],
    repos: ["GET /search/repositories"],
    topics: ["GET /search/topics"],
    users: ["GET /search/users"]
  },
  secretScanning: {
    getAlert: [
      "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"
    ],
    listAlertsForEnterprise: [
      "GET /enterprises/{enterprise}/secret-scanning/alerts"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/secret-scanning/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/secret-scanning/alerts"],
    listLocationsForAlert: [
      "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"
    ],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"
    ]
  },
  securityAdvisories: {
    createFork: [
      "POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"
    ],
    createPrivateVulnerabilityReport: [
      "POST /repos/{owner}/{repo}/security-advisories/reports"
    ],
    createRepositoryAdvisory: [
      "POST /repos/{owner}/{repo}/security-advisories"
    ],
    createRepositoryAdvisoryCveRequest: [
      "POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"
    ],
    getGlobalAdvisory: ["GET /advisories/{ghsa_id}"],
    getRepositoryAdvisory: [
      "GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"
    ],
    listGlobalAdvisories: ["GET /advisories"],
    listOrgRepositoryAdvisories: ["GET /orgs/{org}/security-advisories"],
    listRepositoryAdvisories: ["GET /repos/{owner}/{repo}/security-advisories"],
    updateRepositoryAdvisory: [
      "PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"
    ]
  },
  teams: {
    addOrUpdateMembershipForUserInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    addOrUpdateProjectPermissionsInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"
    ],
    addOrUpdateRepoPermissionsInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    checkPermissionsForProjectInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"
    ],
    checkPermissionsForRepoInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    create: ["POST /orgs/{org}/teams"],
    createDiscussionCommentInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"
    ],
    createDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions"],
    deleteDiscussionCommentInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    deleteDiscussionInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    deleteInOrg: ["DELETE /orgs/{org}/teams/{team_slug}"],
    getByName: ["GET /orgs/{org}/teams/{team_slug}"],
    getDiscussionCommentInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    getDiscussionInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    getMembershipForUserInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    list: ["GET /orgs/{org}/teams"],
    listChildInOrg: ["GET /orgs/{org}/teams/{team_slug}/teams"],
    listDiscussionCommentsInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"
    ],
    listDiscussionsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions"],
    listForAuthenticatedUser: ["GET /user/teams"],
    listMembersInOrg: ["GET /orgs/{org}/teams/{team_slug}/members"],
    listPendingInvitationsInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/invitations"
    ],
    listProjectsInOrg: ["GET /orgs/{org}/teams/{team_slug}/projects"],
    listReposInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos"],
    removeMembershipForUserInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    removeProjectInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"
    ],
    removeRepoInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    updateDiscussionCommentInOrg: [
      "PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    updateDiscussionInOrg: [
      "PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    updateInOrg: ["PATCH /orgs/{org}/teams/{team_slug}"]
  },
  users: {
    addEmailForAuthenticated: [
      "POST /user/emails",
      {},
      { renamed: ["users", "addEmailForAuthenticatedUser"] }
    ],
    addEmailForAuthenticatedUser: ["POST /user/emails"],
    addSocialAccountForAuthenticatedUser: ["POST /user/social_accounts"],
    block: ["PUT /user/blocks/{username}"],
    checkBlocked: ["GET /user/blocks/{username}"],
    checkFollowingForUser: ["GET /users/{username}/following/{target_user}"],
    checkPersonIsFollowedByAuthenticated: ["GET /user/following/{username}"],
    createGpgKeyForAuthenticated: [
      "POST /user/gpg_keys",
      {},
      { renamed: ["users", "createGpgKeyForAuthenticatedUser"] }
    ],
    createGpgKeyForAuthenticatedUser: ["POST /user/gpg_keys"],
    createPublicSshKeyForAuthenticated: [
      "POST /user/keys",
      {},
      { renamed: ["users", "createPublicSshKeyForAuthenticatedUser"] }
    ],
    createPublicSshKeyForAuthenticatedUser: ["POST /user/keys"],
    createSshSigningKeyForAuthenticatedUser: ["POST /user/ssh_signing_keys"],
    deleteEmailForAuthenticated: [
      "DELETE /user/emails",
      {},
      { renamed: ["users", "deleteEmailForAuthenticatedUser"] }
    ],
    deleteEmailForAuthenticatedUser: ["DELETE /user/emails"],
    deleteGpgKeyForAuthenticated: [
      "DELETE /user/gpg_keys/{gpg_key_id}",
      {},
      { renamed: ["users", "deleteGpgKeyForAuthenticatedUser"] }
    ],
    deleteGpgKeyForAuthenticatedUser: ["DELETE /user/gpg_keys/{gpg_key_id}"],
    deletePublicSshKeyForAuthenticated: [
      "DELETE /user/keys/{key_id}",
      {},
      { renamed: ["users", "deletePublicSshKeyForAuthenticatedUser"] }
    ],
    deletePublicSshKeyForAuthenticatedUser: ["DELETE /user/keys/{key_id}"],
    deleteSocialAccountForAuthenticatedUser: ["DELETE /user/social_accounts"],
    deleteSshSigningKeyForAuthenticatedUser: [
      "DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"
    ],
    follow: ["PUT /user/following/{username}"],
    getAuthenticated: ["GET /user"],
    getByUsername: ["GET /users/{username}"],
    getContextForUser: ["GET /users/{username}/hovercard"],
    getGpgKeyForAuthenticated: [
      "GET /user/gpg_keys/{gpg_key_id}",
      {},
      { renamed: ["users", "getGpgKeyForAuthenticatedUser"] }
    ],
    getGpgKeyForAuthenticatedUser: ["GET /user/gpg_keys/{gpg_key_id}"],
    getPublicSshKeyForAuthenticated: [
      "GET /user/keys/{key_id}",
      {},
      { renamed: ["users", "getPublicSshKeyForAuthenticatedUser"] }
    ],
    getPublicSshKeyForAuthenticatedUser: ["GET /user/keys/{key_id}"],
    getSshSigningKeyForAuthenticatedUser: [
      "GET /user/ssh_signing_keys/{ssh_signing_key_id}"
    ],
    list: ["GET /users"],
    listBlockedByAuthenticated: [
      "GET /user/blocks",
      {},
      { renamed: ["users", "listBlockedByAuthenticatedUser"] }
    ],
    listBlockedByAuthenticatedUser: ["GET /user/blocks"],
    listEmailsForAuthenticated: [
      "GET /user/emails",
      {},
      { renamed: ["users", "listEmailsForAuthenticatedUser"] }
    ],
    listEmailsForAuthenticatedUser: ["GET /user/emails"],
    listFollowedByAuthenticated: [
      "GET /user/following",
      {},
      { renamed: ["users", "listFollowedByAuthenticatedUser"] }
    ],
    listFollowedByAuthenticatedUser: ["GET /user/following"],
    listFollowersForAuthenticatedUser: ["GET /user/followers"],
    listFollowersForUser: ["GET /users/{username}/followers"],
    listFollowingForUser: ["GET /users/{username}/following"],
    listGpgKeysForAuthenticated: [
      "GET /user/gpg_keys",
      {},
      { renamed: ["users", "listGpgKeysForAuthenticatedUser"] }
    ],
    listGpgKeysForAuthenticatedUser: ["GET /user/gpg_keys"],
    listGpgKeysForUser: ["GET /users/{username}/gpg_keys"],
    listPublicEmailsForAuthenticated: [
      "GET /user/public_emails",
      {},
      { renamed: ["users", "listPublicEmailsForAuthenticatedUser"] }
    ],
    listPublicEmailsForAuthenticatedUser: ["GET /user/public_emails"],
    listPublicKeysForUser: ["GET /users/{username}/keys"],
    listPublicSshKeysForAuthenticated: [
      "GET /user/keys",
      {},
      { renamed: ["users", "listPublicSshKeysForAuthenticatedUser"] }
    ],
    listPublicSshKeysForAuthenticatedUser: ["GET /user/keys"],
    listSocialAccountsForAuthenticatedUser: ["GET /user/social_accounts"],
    listSocialAccountsForUser: ["GET /users/{username}/social_accounts"],
    listSshSigningKeysForAuthenticatedUser: ["GET /user/ssh_signing_keys"],
    listSshSigningKeysForUser: ["GET /users/{username}/ssh_signing_keys"],
    setPrimaryEmailVisibilityForAuthenticated: [
      "PATCH /user/email/visibility",
      {},
      { renamed: ["users", "setPrimaryEmailVisibilityForAuthenticatedUser"] }
    ],
    setPrimaryEmailVisibilityForAuthenticatedUser: [
      "PATCH /user/email/visibility"
    ],
    unblock: ["DELETE /user/blocks/{username}"],
    unfollow: ["DELETE /user/following/{username}"],
    updateAuthenticated: ["PATCH /user"]
  }
}, VT = HT, gs = /* @__PURE__ */ new Map();
for (const [e, A] of Object.entries(VT))
  for (const [t, s] of Object.entries(A)) {
    const [r, o, n] = s, [g, i] = r.split(/ /), E = Object.assign(
      {
        method: g,
        url: i
      },
      o
    );
    gs.has(e) || gs.set(e, /* @__PURE__ */ new Map()), gs.get(e).set(t, {
      scope: e,
      methodName: t,
      endpointDefaults: E,
      decorations: n
    });
  }
var xT = {
  has({ scope: e }, A) {
    return gs.get(e).has(A);
  },
  getOwnPropertyDescriptor(e, A) {
    return {
      value: this.get(e, A),
      // ensures method is in the cache
      configurable: !0,
      writable: !0,
      enumerable: !0
    };
  },
  defineProperty(e, A, t) {
    return Object.defineProperty(e.cache, A, t), !0;
  },
  deleteProperty(e, A) {
    return delete e.cache[A], !0;
  },
  ownKeys({ scope: e }) {
    return [...gs.get(e).keys()];
  },
  set(e, A, t) {
    return e.cache[A] = t;
  },
  get({ octokit: e, scope: A, cache: t }, s) {
    if (t[s])
      return t[s];
    const r = gs.get(A).get(s);
    if (!r)
      return;
    const { endpointDefaults: o, decorations: n } = r;
    return n ? t[s] = OT(
      e,
      A,
      s,
      o,
      n
    ) : t[s] = e.request.defaults(o), t[s];
  }
};
function rp(e) {
  const A = {};
  for (const t of gs.keys())
    A[t] = new Proxy({ octokit: e, scope: t, cache: {} }, xT);
  return A;
}
function OT(e, A, t, s, r) {
  const o = e.request.defaults(s);
  function n(...g) {
    let i = o.endpoint.merge(...g);
    if (r.mapToData)
      return i = Object.assign({}, i, {
        data: i[r.mapToData],
        [r.mapToData]: void 0
      }), o(i);
    if (r.renamed) {
      const [E, a] = r.renamed;
      e.log.warn(
        `octokit.${A}.${t}() has been renamed to octokit.${E}.${a}()`
      );
    }
    if (r.deprecated && e.log.warn(r.deprecated), r.renamedParameters) {
      const E = o.endpoint.merge(...g);
      for (const [a, Q] of Object.entries(
        r.renamedParameters
      ))
        a in E && (e.log.warn(
          `"${a}" parameter is deprecated for "octokit.${A}.${t}()". Use "${Q}" instead`
        ), Q in E || (E[Q] = E[a]), delete E[a]);
      return o(E);
    }
    return o(...g);
  }
  return Object.assign(n, o);
}
function sp(e) {
  return {
    rest: rp(e)
  };
}
sp.VERSION = tp;
function op(e) {
  const A = rp(e);
  return {
    ...A,
    rest: A
  };
}
op.VERSION = tp;
const PT = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  legacyRestEndpointMethods: op,
  restEndpointMethods: sp
}, Symbol.toStringTag, { value: "Module" })), WT = /* @__PURE__ */ LQ(PT);
var qT = "9.2.2";
function _T(e) {
  if (!e.data)
    return {
      ...e,
      data: []
    };
  if (!("total_count" in e.data && !("url" in e.data)))
    return e;
  const t = e.data.incomplete_results, s = e.data.repository_selection, r = e.data.total_count;
  delete e.data.incomplete_results, delete e.data.repository_selection, delete e.data.total_count;
  const o = Object.keys(e.data)[0], n = e.data[o];
  return e.data = n, typeof t < "u" && (e.data.incomplete_results = t), typeof s < "u" && (e.data.repository_selection = s), e.data.total_count = r, e;
}
function Bc(e, A, t) {
  const s = typeof A == "function" ? A.endpoint(t) : e.request.endpoint(A, t), r = typeof A == "function" ? A : e.request, o = s.method, n = s.headers;
  let g = s.url;
  return {
    [Symbol.asyncIterator]: () => ({
      async next() {
        if (!g)
          return { done: !0 };
        try {
          const i = await r({ method: o, url: g, headers: n }), E = _T(i);
          return g = ((E.headers.link || "").match(
            /<([^<>]+)>;\s*rel="next"/
          ) || [])[1], { value: E };
        } catch (i) {
          if (i.status !== 409)
            throw i;
          return g = "", {
            value: {
              status: 200,
              headers: {},
              data: []
            }
          };
        }
      }
    })
  };
}
function np(e, A, t, s) {
  return typeof t == "function" && (s = t, t = void 0), ip(
    e,
    [],
    Bc(e, A, t)[Symbol.asyncIterator](),
    s
  );
}
function ip(e, A, t, s) {
  return t.next().then((r) => {
    if (r.done)
      return A;
    let o = !1;
    function n() {
      o = !0;
    }
    return A = A.concat(
      s ? s(r.value, n) : r.value.data
    ), o ? A : ip(e, A, t, s);
  });
}
var $T = Object.assign(np, {
  iterator: Bc
}), gp = [
  "GET /advisories",
  "GET /app/hook/deliveries",
  "GET /app/installation-requests",
  "GET /app/installations",
  "GET /assignments/{assignment_id}/accepted_assignments",
  "GET /classrooms",
  "GET /classrooms/{classroom_id}/assignments",
  "GET /enterprises/{enterprise}/dependabot/alerts",
  "GET /enterprises/{enterprise}/secret-scanning/alerts",
  "GET /events",
  "GET /gists",
  "GET /gists/public",
  "GET /gists/starred",
  "GET /gists/{gist_id}/comments",
  "GET /gists/{gist_id}/commits",
  "GET /gists/{gist_id}/forks",
  "GET /installation/repositories",
  "GET /issues",
  "GET /licenses",
  "GET /marketplace_listing/plans",
  "GET /marketplace_listing/plans/{plan_id}/accounts",
  "GET /marketplace_listing/stubbed/plans",
  "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts",
  "GET /networks/{owner}/{repo}/events",
  "GET /notifications",
  "GET /organizations",
  "GET /orgs/{org}/actions/cache/usage-by-repository",
  "GET /orgs/{org}/actions/permissions/repositories",
  "GET /orgs/{org}/actions/runners",
  "GET /orgs/{org}/actions/secrets",
  "GET /orgs/{org}/actions/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/actions/variables",
  "GET /orgs/{org}/actions/variables/{name}/repositories",
  "GET /orgs/{org}/blocks",
  "GET /orgs/{org}/code-scanning/alerts",
  "GET /orgs/{org}/codespaces",
  "GET /orgs/{org}/codespaces/secrets",
  "GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/copilot/billing/seats",
  "GET /orgs/{org}/dependabot/alerts",
  "GET /orgs/{org}/dependabot/secrets",
  "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/events",
  "GET /orgs/{org}/failed_invitations",
  "GET /orgs/{org}/hooks",
  "GET /orgs/{org}/hooks/{hook_id}/deliveries",
  "GET /orgs/{org}/installations",
  "GET /orgs/{org}/invitations",
  "GET /orgs/{org}/invitations/{invitation_id}/teams",
  "GET /orgs/{org}/issues",
  "GET /orgs/{org}/members",
  "GET /orgs/{org}/members/{username}/codespaces",
  "GET /orgs/{org}/migrations",
  "GET /orgs/{org}/migrations/{migration_id}/repositories",
  "GET /orgs/{org}/organization-roles/{role_id}/teams",
  "GET /orgs/{org}/organization-roles/{role_id}/users",
  "GET /orgs/{org}/outside_collaborators",
  "GET /orgs/{org}/packages",
  "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
  "GET /orgs/{org}/personal-access-token-requests",
  "GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories",
  "GET /orgs/{org}/personal-access-tokens",
  "GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories",
  "GET /orgs/{org}/projects",
  "GET /orgs/{org}/properties/values",
  "GET /orgs/{org}/public_members",
  "GET /orgs/{org}/repos",
  "GET /orgs/{org}/rulesets",
  "GET /orgs/{org}/rulesets/rule-suites",
  "GET /orgs/{org}/secret-scanning/alerts",
  "GET /orgs/{org}/security-advisories",
  "GET /orgs/{org}/teams",
  "GET /orgs/{org}/teams/{team_slug}/discussions",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
  "GET /orgs/{org}/teams/{team_slug}/invitations",
  "GET /orgs/{org}/teams/{team_slug}/members",
  "GET /orgs/{org}/teams/{team_slug}/projects",
  "GET /orgs/{org}/teams/{team_slug}/repos",
  "GET /orgs/{org}/teams/{team_slug}/teams",
  "GET /projects/columns/{column_id}/cards",
  "GET /projects/{project_id}/collaborators",
  "GET /projects/{project_id}/columns",
  "GET /repos/{owner}/{repo}/actions/artifacts",
  "GET /repos/{owner}/{repo}/actions/caches",
  "GET /repos/{owner}/{repo}/actions/organization-secrets",
  "GET /repos/{owner}/{repo}/actions/organization-variables",
  "GET /repos/{owner}/{repo}/actions/runners",
  "GET /repos/{owner}/{repo}/actions/runs",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
  "GET /repos/{owner}/{repo}/actions/secrets",
  "GET /repos/{owner}/{repo}/actions/variables",
  "GET /repos/{owner}/{repo}/actions/workflows",
  "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
  "GET /repos/{owner}/{repo}/activity",
  "GET /repos/{owner}/{repo}/assignees",
  "GET /repos/{owner}/{repo}/branches",
  "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
  "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
  "GET /repos/{owner}/{repo}/code-scanning/alerts",
  "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
  "GET /repos/{owner}/{repo}/code-scanning/analyses",
  "GET /repos/{owner}/{repo}/codespaces",
  "GET /repos/{owner}/{repo}/codespaces/devcontainers",
  "GET /repos/{owner}/{repo}/codespaces/secrets",
  "GET /repos/{owner}/{repo}/collaborators",
  "GET /repos/{owner}/{repo}/comments",
  "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/commits",
  "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments",
  "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",
  "GET /repos/{owner}/{repo}/commits/{ref}/check-runs",
  "GET /repos/{owner}/{repo}/commits/{ref}/check-suites",
  "GET /repos/{owner}/{repo}/commits/{ref}/status",
  "GET /repos/{owner}/{repo}/commits/{ref}/statuses",
  "GET /repos/{owner}/{repo}/contributors",
  "GET /repos/{owner}/{repo}/dependabot/alerts",
  "GET /repos/{owner}/{repo}/dependabot/secrets",
  "GET /repos/{owner}/{repo}/deployments",
  "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
  "GET /repos/{owner}/{repo}/environments",
  "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies",
  "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps",
  "GET /repos/{owner}/{repo}/events",
  "GET /repos/{owner}/{repo}/forks",
  "GET /repos/{owner}/{repo}/hooks",
  "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
  "GET /repos/{owner}/{repo}/invitations",
  "GET /repos/{owner}/{repo}/issues",
  "GET /repos/{owner}/{repo}/issues/comments",
  "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/issues/events",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/comments",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/events",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/labels",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",
  "GET /repos/{owner}/{repo}/keys",
  "GET /repos/{owner}/{repo}/labels",
  "GET /repos/{owner}/{repo}/milestones",
  "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels",
  "GET /repos/{owner}/{repo}/notifications",
  "GET /repos/{owner}/{repo}/pages/builds",
  "GET /repos/{owner}/{repo}/projects",
  "GET /repos/{owner}/{repo}/pulls",
  "GET /repos/{owner}/{repo}/pulls/comments",
  "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/commits",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/files",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",
  "GET /repos/{owner}/{repo}/releases",
  "GET /repos/{owner}/{repo}/releases/{release_id}/assets",
  "GET /repos/{owner}/{repo}/releases/{release_id}/reactions",
  "GET /repos/{owner}/{repo}/rules/branches/{branch}",
  "GET /repos/{owner}/{repo}/rulesets",
  "GET /repos/{owner}/{repo}/rulesets/rule-suites",
  "GET /repos/{owner}/{repo}/secret-scanning/alerts",
  "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations",
  "GET /repos/{owner}/{repo}/security-advisories",
  "GET /repos/{owner}/{repo}/stargazers",
  "GET /repos/{owner}/{repo}/subscribers",
  "GET /repos/{owner}/{repo}/tags",
  "GET /repos/{owner}/{repo}/teams",
  "GET /repos/{owner}/{repo}/topics",
  "GET /repositories",
  "GET /repositories/{repository_id}/environments/{environment_name}/secrets",
  "GET /repositories/{repository_id}/environments/{environment_name}/variables",
  "GET /search/code",
  "GET /search/commits",
  "GET /search/issues",
  "GET /search/labels",
  "GET /search/repositories",
  "GET /search/topics",
  "GET /search/users",
  "GET /teams/{team_id}/discussions",
  "GET /teams/{team_id}/discussions/{discussion_number}/comments",
  "GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  "GET /teams/{team_id}/discussions/{discussion_number}/reactions",
  "GET /teams/{team_id}/invitations",
  "GET /teams/{team_id}/members",
  "GET /teams/{team_id}/projects",
  "GET /teams/{team_id}/repos",
  "GET /teams/{team_id}/teams",
  "GET /user/blocks",
  "GET /user/codespaces",
  "GET /user/codespaces/secrets",
  "GET /user/emails",
  "GET /user/followers",
  "GET /user/following",
  "GET /user/gpg_keys",
  "GET /user/installations",
  "GET /user/installations/{installation_id}/repositories",
  "GET /user/issues",
  "GET /user/keys",
  "GET /user/marketplace_purchases",
  "GET /user/marketplace_purchases/stubbed",
  "GET /user/memberships/orgs",
  "GET /user/migrations",
  "GET /user/migrations/{migration_id}/repositories",
  "GET /user/orgs",
  "GET /user/packages",
  "GET /user/packages/{package_type}/{package_name}/versions",
  "GET /user/public_emails",
  "GET /user/repos",
  "GET /user/repository_invitations",
  "GET /user/social_accounts",
  "GET /user/ssh_signing_keys",
  "GET /user/starred",
  "GET /user/subscriptions",
  "GET /user/teams",
  "GET /users",
  "GET /users/{username}/events",
  "GET /users/{username}/events/orgs/{org}",
  "GET /users/{username}/events/public",
  "GET /users/{username}/followers",
  "GET /users/{username}/following",
  "GET /users/{username}/gists",
  "GET /users/{username}/gpg_keys",
  "GET /users/{username}/keys",
  "GET /users/{username}/orgs",
  "GET /users/{username}/packages",
  "GET /users/{username}/projects",
  "GET /users/{username}/received_events",
  "GET /users/{username}/received_events/public",
  "GET /users/{username}/repos",
  "GET /users/{username}/social_accounts",
  "GET /users/{username}/ssh_signing_keys",
  "GET /users/{username}/starred",
  "GET /users/{username}/subscriptions"
];
function ZT(e) {
  return typeof e == "string" ? gp.includes(e) : !1;
}
function ap(e) {
  return {
    paginate: Object.assign(np.bind(null, e), {
      iterator: Bc.bind(null, e)
    })
  };
}
ap.VERSION = qT;
const XT = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  composePaginateRest: $T,
  isPaginatingEndpoint: ZT,
  paginateRest: ap,
  paginatingEndpoints: gp
}, Symbol.toStringTag, { value: "Module" })), KT = /* @__PURE__ */ LQ(XT);
(function(e) {
  var A = rA && rA.__createBinding || (Object.create ? function(Q, c, h, u) {
    u === void 0 && (u = h);
    var I = Object.getOwnPropertyDescriptor(c, h);
    (!I || ("get" in I ? !c.__esModule : I.writable || I.configurable)) && (I = { enumerable: !0, get: function() {
      return c[h];
    } }), Object.defineProperty(Q, u, I);
  } : function(Q, c, h, u) {
    u === void 0 && (u = h), Q[u] = c[h];
  }), t = rA && rA.__setModuleDefault || (Object.create ? function(Q, c) {
    Object.defineProperty(Q, "default", { enumerable: !0, value: c });
  } : function(Q, c) {
    Q.default = c;
  }), s = rA && rA.__importStar || function(Q) {
    if (Q && Q.__esModule) return Q;
    var c = {};
    if (Q != null) for (var h in Q) h !== "default" && Object.prototype.hasOwnProperty.call(Q, h) && A(c, Q, h);
    return t(c, Q), c;
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.getOctokitOptions = e.GitHub = e.defaults = e.context = void 0;
  const r = s(rn), o = s(lt), n = vT, g = WT, i = KT;
  e.context = new r.Context();
  const E = o.getApiBaseUrl();
  e.defaults = {
    baseUrl: E,
    request: {
      agent: o.getProxyAgent(E),
      fetch: o.getProxyFetch(E)
    }
  }, e.GitHub = n.Octokit.plugin(g.restEndpointMethods, i.paginateRest).defaults(e.defaults);
  function a(Q, c) {
    const h = Object.assign({}, c || {}), u = o.getAuthString(Q, h);
    return u && (h.auth = u), h;
  }
  e.getOctokitOptions = a;
})(zu);
var jT = rA && rA.__createBinding || (Object.create ? function(e, A, t, s) {
  s === void 0 && (s = t);
  var r = Object.getOwnPropertyDescriptor(A, t);
  (!r || ("get" in r ? !A.__esModule : r.writable || r.configurable)) && (r = { enumerable: !0, get: function() {
    return A[t];
  } }), Object.defineProperty(e, s, r);
} : function(e, A, t, s) {
  s === void 0 && (s = t), e[s] = A[t];
}), zT = rA && rA.__setModuleDefault || (Object.create ? function(e, A) {
  Object.defineProperty(e, "default", { enumerable: !0, value: A });
} : function(e, A) {
  e.default = A;
}), AM = rA && rA.__importStar || function(e) {
  if (e && e.__esModule) return e;
  var A = {};
  if (e != null) for (var t in e) t !== "default" && Object.prototype.hasOwnProperty.call(e, t) && jT(A, e, t);
  return zT(A, e), A;
};
Object.defineProperty(Wo, "__esModule", { value: !0 });
var Ep = Wo.getOctokit = Ns = Wo.context = void 0;
const eM = AM(rn), Pl = zu;
var Ns = Wo.context = new eM.Context();
function tM(e, A, ...t) {
  const s = Pl.GitHub.plugin(...t);
  return new s((0, Pl.getOctokitOptions)(e, A));
}
Ep = Wo.getOctokit = tM;
async function rM() {
  let e;
  try {
    const A = VA.getInput(
      "file-size-threshold",
      { required: !0 }
    ), t = VA.getInput("github-token");
    VA.info(`File size threshold: ${A}`);
    const s = sM(A);
    if (s === null) {
      VA.setFailed(
        `Invalid file size threshold format: ${A}`
      );
      return;
    }
    VA.info(`Threshold in bytes: ${s}`), VA.info("Ensuring git-filter-repo is installed...");
    try {
      await uo.exec("git-filter-repo", ["--version"], { silent: !0 }), VA.info("git-filter-repo found in PATH.");
    } catch {
      VA.info(
        "git-filter-repo not found in PATH, attempting to install via pip..."
      ), await uo.exec("pip3", ["install", "git-filter-repo"]), await uo.exec("git-filter-repo", ["--version"]), VA.info("git-filter-repo installed successfully via pip.");
    }
    const r = process.cwd(), n = `mirror-repo-${Math.random().toString(36).substring(2, 10)}.git`;
    e = ig.join(Cp.tmpdir(), n), VA.info(`Creating mirror clone at ${e}`), await uo.exec(
      "git",
      ["clone", "--mirror", ".", e],
      {
        cwd: r
      }
    ), VA.info("Running git-filter-repo --analyze...");
    const i = ig.join(
      e,
      "filter-repo",
      "analysis"
    );
    try {
      await uo.exec("git-filter-repo", ["--analyze"], {
        cwd: e
      });
    } catch (I) {
      VA.setFailed(
        `git-filter-repo --analyze failed: ${I.message}. Ensure the repository is not empty or corrupted.`
      );
      return;
    }
    VA.info(`Looking for analysis reports in ${i}`);
    let E;
    try {
      E = await gg.readdir(i);
    } catch (I) {
      VA.setFailed(
        `Failed to read analysis directory ${i}: ${I.message}`
      );
      return;
    }
    const a = E.find(
      (I) => I === "blob-shas-and-paths.txt"
    );
    if (!a) {
      VA.warning(
        'No "blob-shas-and-paths.txt" analysis file found. This might happen on very small or empty repositories, or if git-filter-repo version changed output.'
      ), VA.setOutput("large-files-found", !1), VA.setOutput("large-files-list", "[]"), VA.info("✅ No large files to report based on analysis files.");
      return;
    }
    VA.info(`Parsing analysis file: ${a}`);
    const Q = [], h = (await gg.readFile(
      ig.join(i, a),
      "utf-8"
    )).split(`
`), u = /^\s*([0-9a-f]{40})\s+([0-9]+)\s+([0-9]+)\s+(.*)$/;
    for (const I of h) {
      if (I.startsWith("===") || I.startsWith("Format:") || I.trim() === "")
        continue;
      const C = I.match(u);
      if (C) {
        const f = C[1], B = parseInt(C[2], 10), l = C[4].trim();
        B >= s && Q.push({
          path: l,
          // Path is now directly available
          blobSha: f,
          sizeBytes: B,
          sizeHuman: oM(B)
          // Your existing helper
        });
      }
    }
    if (VA.setOutput("large-files-found", Q.length > 0), VA.setOutput("large-files-list", JSON.stringify(Q)), Q.length > 0) {
      let I = `🚨 Large files detected (threshold: ${A}):
`;
      if (Q.forEach((C) => {
        I += `- Blob SHA: ${C.blobSha}
`, C.path && (I += `  Path hint: ${C.path}
`), I += `  Size: ${C.sizeHuman}
`;
      }), I += `
Please remove these files from the commit history using git filter-repo locally, then force-push the cleaned branch.`, I += `
Get the right commits by git log --all --find-object=$BLOBID`, I += `
Consult the git-filter-repo documentation: https://github.com/newren/git-filter-repo`, VA.setFailed(I), t && Ns.issue && Ns.payload.pull_request) {
        const C = Ep(t);
        try {
          await C.rest.issues.createComment({
            owner: Ns.repo.owner,
            repo: Ns.repo.repo,
            issue_number: Ns.issue.number,
            body: I
          });
        } catch (f) {
          VA.warning(`Failed to create PR comment: ${f.message}`);
        }
      }
    } else
      VA.info("✅ No files found exceeding the size threshold.");
  } catch (A) {
    A instanceof Error ? VA.setFailed(A.message) : VA.setFailed(String(A));
  } finally {
    if (e) {
      VA.info(`Cleaning up ${e}`);
      try {
        await gg.rm(e, { recursive: !0, force: !0 });
      } catch (A) {
        VA.warning(
          `Failed to cleanup mirror repository ${e}: ${A.message}`
        );
      }
    } else
      VA.info("No mirror repository path was set for cleanup.");
  }
}
function sM(e) {
  const A = /^(\d+)([KMGTP]?)$/i, t = e.match(A);
  if (!t) return null;
  const s = parseInt(t[1], 10);
  switch (t[2].toUpperCase()) {
    case "K":
      return s * 1024;
    case "M":
      return s * 1024 * 1024;
    case "G":
      return s * 1024 * 1024 * 1024;
    case "T":
      return s * 1024 * 1024 * 1024 * 1024;
    case "P":
      return s * 1024 * 1024 * 1024 * 1024 * 1024;
    default:
      return s;
  }
}
function oM(e, A = 2) {
  if (e === 0) return "0 Bytes";
  const t = 1024, s = A < 0 ? 0 : A, r = ["Bytes", "KB", "MB", "GB", "TB", "PB"], o = Math.floor(Math.log(e) / Math.log(t));
  return o >= r.length ? `${(e / Math.pow(t, r.length - 1)).toFixed(s)} ${r[r.length - 1]}` : parseFloat((e / Math.pow(t, o)).toFixed(s)) + " " + r[o];
}
rM().catch((e) => {
  e instanceof Error ? VA.setFailed(e.message) : VA.setFailed(String(e));
});
//# sourceMappingURL=index.js.map
